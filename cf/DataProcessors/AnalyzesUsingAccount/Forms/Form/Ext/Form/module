Var CurrentDecipher;
Var CurrentArea;

//Form
Procedure BeforeOpen(Cancel, StandardProcessing)
	If ValueIsNotFilled(Date) Then
		Date = GetServerDate();
	EndIf;
	
	If ValueIsFilled(Account) Then
		//Controls.SpreadsheetDocument.Clear();
		Controls.SpreadsheetDocument.InsertArea(PrintTemplate().Area());
	EndIf;
	//Controls.SpreadsheetDocument.InsertArea(PrintTemplate().Area());
EndProcedure

Procedure ChoiceProcessing(ChoiceValue, Source)
	InfReg = Metadata.FindByType(Type(ChoiceValue));
	InfRegName = InfReg.Name;
	InfRegDimName = InfReg.Dimensions[0].Name;
	
	Object = ChoiceValue[InfRegDimName];
	RowObject = MapObjects.Get(Object);
	InfRegSliceLast = InformationRegisters[InfRegName].SliceLast(, New Structure(InfRegDimName, Object));
	If InfRegSliceLast.Count() = 1 Then
		InfRegLast = InfRegSliceLast[0];
		EditAreaPeriod = Controls.SpreadsheetDocument.Area(RowObject, 4, RowObject, 4);
		EditAreaPeriod.Value = InfRegLast.Period;
		EditAreaPeriod.Details.Period = InfRegLast.Period;
		Index = 0;
		For Each InfRegResource In InfReg.Resources Do
			EditAreaResource = Controls.SpreadsheetDocument.Area(RowObject, 5 + Index, RowObject, 5 + Index);
			EditAreaResource.Value = InfRegLast[EditAreaResource.Details.Cell];
			EditAreaResource.Details.Period = InfRegLast.Period;
			
			Index = Index + 1;
		EndDo;
	EndIf;
EndProcedure

//Control - SpreadsheetDocument
Procedure SpreadsheetDocumentSelection(Control, Area, StandardProcessing)
	StandardProcessing = False;
	
	If TypeOf(Area.Details) = Type("Structure") Then
		If Area.Details.Register.MetadataObject = Metadata.Catalogs.BookkeepingOperationsTemplates Then
			Area.Details.Object.GetForm().Open();
			Return;
		EndIf;
		Object = Undefined;
		If Area.Details.Property("Object", Object) Then
			If Metadata.Documents.Find(Object.Metadata().Name) = Undefined Then
				If Object.IsFolder Then
					StandardProcessing = False;
					Return;
				EndIf;
			Else
				StandardProcessing = False;
				Object.GetForm().Open();
				Return;
			EndIf;
		EndIf;
		
		ItsNew = False;
		If Area.Details.Property("ItsNew", ItsNew) Then
			If ItsNew Then
				
				Cell = "";
				StandardProcessing = True;
				
				If Area.Details.Property("Cell", Cell) Then
					If (Cell = "Period")Or(Cell = "RefObject") Then
						StandardProcessing = False;
						Return;
					Else

						Area.Protection = False; 
						
						CurrentDecipher = Area.Details;
						
						CurrentArea = Control.CurrentArea;
						ExtDimPosition = Find(Area.Details.Cell, "ExtDimension");
						If ExtDimPosition = 0 Then
							Area.ValueType = Area.Details.Register.Metadata.Resources[Area.Details.Cell].Type;
						Else
							NameCellAccout = Left(Area.Details.Cell, ExtDimPosition - 1);
							ValueAccountFound = "";
							NomberExtDimension = 0;
							For index = 1 to Area.Details.Register.Metadata.Resources.Count() Do
								CellTablDoc = Controls.SpreadsheetDocument.Area(Area.Top, Index + 4, Area.Top, Index + 4);
								If TypeOf(CellTablDoc.Details) = Type("Structure") Then
									CellAccount = "";
									If CellTablDoc.Details.Property("Cell", CellAccount) Then
										If CellAccount = NameCellAccout Then
											ValueAccountFound = Controls.SpreadsheetDocument.Area(Area.Top, Index + 4, Area.Top, Index + 4).Value;
											Break;
										EndIf;
									EndIf;
								EndIf;
							EndDo;
							If ValueIsFilled(ValueAccountFound) Then
								NomberExtDimension = StrReplace(Area.Details.Cell,NameCellAccout + "ExtDimension","");
								If ValueAccountFound["ExtDimension" + NomberExtDimension + "Mandatory"] Then
									Area.ValueType = ValueAccountFound["ExtDimension" + NomberExtDimension + "Type"].ValueType;
								Else
									StandardProcessing = False;
								EndIf;
							Else
								StandardProcessing = False;
							EndIf;
						EndIf;
					EndIf;
				EndIf;
			Else
				SelectReg = InformationRegisters[Area.Details.Register.Metadata.Name].Select(Area.Details.Period, Area.Details.Period, New Structure(Area.Details.Register.Metadata.Dimensions[0].Name, Area.Details.Object));
				If SelectReg.Next() Then
					Form = SelectReg.GetRecordManager().GetForm(,ThisForm, Area.Details.Object);

					Form.IsOpeningViaCatalog = True;
					Form.CloseOnChoice = False;

					Form.Open();
				EndIf;
			EndIf;
		EndIf;
	EndIf;
EndProcedure

Procedure SpreadsheetDocumentDetailProcessing(Control, Details, StandardProcessing)
	StandardProcessing = False;
EndProcedure

Procedure OnOpen()

	
EndProcedure

Procedure DateOnChange(Control)
	If ValueIsFilled(Account) Then
		Controls.SpreadsheetDocument.Clear();
		Controls.SpreadsheetDocument.InsertArea(PrintTemplate().Area());
	EndIf;
EndProcedure

Procedure AccountOnChange(Control)
	Controls.SpreadsheetDocument.Clear();
	If ValueIsFilled(Account) Then
		Controls.SpreadsheetDocument.InsertArea(PrintTemplate().Area());
	EndIf;
EndProcedure
