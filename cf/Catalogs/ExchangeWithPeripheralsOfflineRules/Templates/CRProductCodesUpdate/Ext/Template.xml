<?xml version="1.0" encoding="UTF-8"?>
<DataCompositionSchema xmlns="http://v8.1c.ru/8.1/data-composition-system/schema" xmlns:dcscom="http://v8.1c.ru/8.1/data-composition-system/common" xmlns:dcscor="http://v8.1c.ru/8.1/data-composition-system/core" xmlns:dcsset="http://v8.1c.ru/8.1/data-composition-system/settings" xmlns:v8="http://v8.1c.ru/8.1/data/core" xmlns:v8ui="http://v8.1c.ru/8.1/data/ui" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<dataSource>
		<name>DataSource1</name>
		<dataSourceType>Local</dataSourceType>
	</dataSource>
	<dataSet xsi:type="DataSetQuery">
		<name>DataSet</name>
		<field xsi:type="DataSetFieldField">
			<dataPath>ProductsAndServices</dataPath>
			<field>ProductsAndServices</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Products and services</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Продукция и услуги</v8:content>
				</v8:item>
			</title>
			<inputParameters>
				<dcscor:item>
					<dcscor:parameter>ChoiceFoldersAndItems</dcscor:parameter>
					<dcscor:value xmlns:d6p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d6p1:FoldersAndItemsUse">Items</dcscor:value>
				</dcscor:item>
			</inputParameters>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Characteristic</dataPath>
			<field>Characteristic</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Characteristic</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Characteristic</v8:content>
				</v8:item>
			</title>
			<inputParameters>
				<dcscor:item>
					<dcscor:parameter>ChoiceParameterLinks</dcscor:parameter>
					<dcscor:value xsi:type="dcscor:ChoiceParameterLinks">
						<dcscor:item>
							<dcscor:choiceParameter>ProductsAndServices</dcscor:choiceParameter>
							<dcscor:value>ProductsAndServices</dcscor:value>
							<dcscor:mode xmlns:d8p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d8p1:LinkedValueChangeMode">Clear</dcscor:mode>
						</dcscor:item>
					</dcscor:value>
				</dcscor:item>
			</inputParameters>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Price</dataPath>
			<field>Price</field>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Barcode</dataPath>
			<field>Barcode</field>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>BalanceAtWarehouse</dataPath>
			<field>BalanceAtWarehouse</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Warehouse remaining goods</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Остаток на складе</v8:content>
				</v8:item>
			</title>
			<useRestriction>
				<group>true</group>
				<order>true</order>
			</useRestriction>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Used</dataPath>
			<field>Used</field>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Code</dataPath>
			<field>Code</field>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>MatchesSelection</dataPath>
			<field>MatchesSelection</field>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>MeasurementUnit</dataPath>
			<field>MeasurementUnit</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Unit of measure</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Единица измерения</v8:content>
				</v8:item>
			</title>
			<inputParameters>
				<dcscor:item>
					<dcscor:parameter>ChoiceParameterLinks</dcscor:parameter>
					<dcscor:value xsi:type="dcscor:ChoiceParameterLinks">
						<dcscor:item>
							<dcscor:choiceParameter>Filter.Owner</dcscor:choiceParameter>
							<dcscor:value>ProductsAndServices</dcscor:value>
							<dcscor:mode xmlns:d8p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d8p1:LinkedValueChangeMode">Clear</dcscor:mode>
						</dcscor:item>
					</dcscor:value>
				</dcscor:item>
			</inputParameters>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>StructuralUnit</dataPath>
			<field>StructuralUnit</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Warehouse</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Склад, на который приходуются запасы</v8:content>
				</v8:item>
			</title>
		</field>
		<field xsi:type="DataSetFieldField">
			<dataPath>Batch</dataPath>
			<field>Batch</field>
			<title xsi:type="v8:LocalStringType">
				<v8:item>
					<v8:lang>en</v8:lang>
					<v8:content>Batch</v8:content>
				</v8:item>
				<v8:item>
					<v8:lang>ru</v8:lang>
					<v8:content>Партия</v8:content>
				</v8:item>
			</title>
			<inputParameters>
				<dcscor:item>
					<dcscor:parameter>ChoiceParameterLinks</dcscor:parameter>
					<dcscor:value xsi:type="dcscor:ChoiceParameterLinks">
						<dcscor:item>
							<dcscor:choiceParameter>Filter.Owner</dcscor:choiceParameter>
							<dcscor:value>ProductsAndServices</dcscor:value>
							<dcscor:mode xmlns:d8p1="http://v8.1c.ru/8.1/data/enterprise" xsi:type="d8p1:LinkedValueChangeMode">Clear</dcscor:mode>
						</dcscor:item>
					</dcscor:value>
				</dcscor:item>
			</inputParameters>
		</field>
		<dataSource>DataSource1</dataSource>
		<query>SELECT
	ProductsAndServices.Ref AS ProductsAndServices,
	ProductsAndServices.ProductsAndServicesCategory AS ProductsAndServicesKind,
	VALUE(Catalog.ProductsAndServicesCharacteristics.EmptyRef) AS Characteristic,
	VALUE(Catalog.ProductsAndServicesBatches.EmptyRef) AS Batch,
	VALUE(Catalog.UOM.EmptyRef) AS MeasurementUnit
INTO ProductsAndServicesAndCharacteristics
FROM
	Catalog.ProductsAndServices AS ProductsAndServices
WHERE
	Not ProductsAndServices.IsFolder
	//AND ProductsAndServices.UseCharacteristics = FALSE
{WHERE
	ProductsAndServices.Ref.* AS ProductsAndServices,
	(VALUE(Catalog.ProductsAndServicesCharacteristics.EmptyRef)) AS Characteristic,
	(VALUE(Catalog.ProductsAndServicesBatches.EmptyRef)) AS Batch,
	(VALUE(Catalog.UOM.EmptyRef)) AS MeasurementUnit}

UNION ALL

SELECT
	ProductsAndServices.Ref,
	ProductsAndServices.ProductsAndServicesCategory,
	ProductsAndServicesCharacteristics.Ref,
	VALUE(Catalog.ProductsAndServicesBatches.EmptyRef),
	VALUE(Catalog.UOM.EmptyRef)
FROM
	Catalog.ProductsAndServices AS ProductsAndServices
		INNER JOIN Catalog.ProductsAndServicesCharacteristics AS ProductsAndServicesCharacteristics
		ON ProductsAndServices.Ref = ProductsAndServicesCharacteristics.Owner
//WHERE
//	ProductsAndServices.UseCharacteristics = TRUE
{WHERE
	ProductsAndServices.Ref.* AS ProductsAndServices,
	ProductsAndServicesCharacteristics.Ref.* AS Characteristic,
	(VALUE(Catalog.ProductsAndServicesBatches.EmptyRef)) AS Batch,
	(VALUE(Catalog.UOM.EmptyRef)) AS MeasurementUnit}
;

////////////////////////////////////////////////////////////////////////////////
SELECT
	ProductsAndServicesAndCharacteristics.ProductsAndServices AS ProductsAndServices,
	ProductsAndServicesAndCharacteristics.Characteristic AS Characteristic,
	ProductsAndServicesAndCharacteristics.Batch AS Batch,
	ProductsAndServicesAndCharacteristics.MeasurementUnit AS MeasurementUnit
INTO ProductsAndServicesAndCharacteristicsAndBatches
FROM
	ProductsAndServicesAndCharacteristics AS ProductsAndServicesAndCharacteristics

UNION ALL

SELECT
	ProductsAndServicesAndCharacteristics.ProductsAndServices,
	ProductsAndServicesAndCharacteristics.Characteristic,
	ProductsAndServicesBatches.Ref,
	ProductsAndServicesAndCharacteristics.MeasurementUnit
FROM
	Catalog.ProductsAndServicesBatches AS ProductsAndServicesBatches
		INNER JOIN ProductsAndServicesAndCharacteristics AS ProductsAndServicesAndCharacteristics
		ON ProductsAndServicesBatches.Owner = ProductsAndServicesAndCharacteristics.ProductsAndServices
{WHERE
	ProductsAndServicesAndCharacteristics.ProductsAndServices.* AS ProductsAndServices,
	ProductsAndServicesAndCharacteristics.Characteristic.* AS Characteristic,
	ProductsAndServicesBatches.Ref.* AS Batch,
	ProductsAndServicesAndCharacteristics.MeasurementUnit.* AS MeasurementUnit}
;

////////////////////////////////////////////////////////////////////////////////
SELECT
	ProductsAndServicesAndCharacteristicsAndBatches.ProductsAndServices AS ProductsAndServices,
	ProductsAndServicesAndCharacteristicsAndBatches.Characteristic AS Characteristic,
	ProductsAndServicesAndCharacteristicsAndBatches.Batch AS Batch,
	ProductsAndServicesAndCharacteristicsAndBatches.MeasurementUnit AS MeasurementUnit
INTO SourceData
FROM
	ProductsAndServicesAndCharacteristicsAndBatches AS ProductsAndServicesAndCharacteristicsAndBatches

UNION ALL

SELECT
	ProductsAndServicesAndCharacteristicsAndBatches.ProductsAndServices,
	ProductsAndServicesAndCharacteristicsAndBatches.Characteristic,
	ProductsAndServicesAndCharacteristicsAndBatches.Batch,
	UnitDimensionsProductsAndServices.Ref
FROM
	Catalog.UOM AS UnitDimensionsProductsAndServices
		INNER JOIN ProductsAndServicesAndCharacteristicsAndBatches AS ProductsAndServicesAndCharacteristicsAndBatches
		ON UnitDimensionsProductsAndServices.Owner = ProductsAndServicesAndCharacteristicsAndBatches.ProductsAndServices
{WHERE
	ProductsAndServicesAndCharacteristicsAndBatches.ProductsAndServices.* AS ProductsAndServices,
	ProductsAndServicesAndCharacteristicsAndBatches.Characteristic.* AS Characteristic,
	ProductsAndServicesAndCharacteristicsAndBatches.Batch.* AS Batch,
	UnitDimensionsProductsAndServices.Ref.* AS MeasurementUnit}

INDEX BY
	ProductsAndServices,
	Characteristic,
	Batch,
	MeasurementUnit
;

////////////////////////////////////////////////////////////////////////////////
SELECT DISTINCT
	SourceDataLastQuery.ProductsAndServices AS ProductsAndServices,
	SourceDataLastQuery.Characteristic AS Characteristic,
	SourceDataLastQuery.Batch AS Batch,
	SourceDataLastQuery.MeasurementUnit AS MeasurementUnit,
	ISNULL(ProductsCodesPeripheralOffline.Code, 0) AS Code,
	ISNULL(ProductsCodesPeripheralOffline.Used, FALSE) AS Used
INTO DataTable
{SELECT
	ProductsAndServices.*,
	Characteristic.*,
	Batch.*,
	Code,
	Used,
	MeasurementUnit.*}
FROM
	SourceData AS SourceDataLastQuery
		{LEFT JOIN InformationRegister.ProductsAndServicesBarcodes AS ProductsAndServicesBarcodes
		ON SourceDataLastQuery.ProductsAndServices = ProductsAndServicesBarcodes.ProductsAndServices
			AND SourceDataLastQuery.Characteristic = ProductsAndServicesBarcodes.Characteristic
			AND SourceDataLastQuery.Batch = ProductsAndServicesBarcodes.Batch
			AND SourceDataLastQuery.MeasurementUnit = ProductsAndServicesBarcodes.MeasurementUnit}
		{LEFT JOIN InformationRegister.ProductsAndServicesPrices.SliceLast(ENDOFPERIOD(&amp;Date, Day), PriceKind = &amp;PriceKind {(ProductsAndServices).* AS ProductsAndServices, (Characteristic).* AS Characteristic}) AS ProductsAndServicesPricesSliceLast
		ON SourceDataLastQuery.ProductsAndServices = ProductsAndServicesPricesSliceLast.ProductsAndServices
			AND SourceDataLastQuery.Characteristic = ProductsAndServicesPricesSliceLast.Characteristic}
		{LEFT JOIN AccumulationRegister.InventoryInWarehouses.Balance(, {(ProductsAndServices).* AS ProductsAndServices, (Characteristic).* AS Characteristic, (Batch).* AS Batch, (StructuralUnit).* AS StructuralUnit}) AS ProductsInInventoryBalances
		ON SourceDataLastQuery.ProductsAndServices = ProductsInInventoryBalances.ProductsAndServices
			AND SourceDataLastQuery.Characteristic = ProductsInInventoryBalances.Characteristic
			AND SourceDataLastQuery.Batch = ProductsInInventoryBalances.Batch}
		{LEFT JOIN InformationRegister.ProductsCodesPeripheralOffline AS ProductsCodesPeripheralOffline
		ON SourceDataLastQuery.ProductsAndServices = ProductsCodesPeripheralOffline.ProductsAndServices
			AND SourceDataLastQuery.Characteristic = ProductsCodesPeripheralOffline.Characteristic
			AND SourceDataLastQuery.Batch = ProductsCodesPeripheralOffline.Batch
			AND SourceDataLastQuery.MeasurementUnit = ProductsCodesPeripheralOffline.MeasurementUnit
			AND (ProductsCodesPeripheralOffline.ExchangeRule = &amp;ExchangeRule)}
{WHERE
	SourceDataLastQuery.ProductsAndServices.* AS ProductsAndServices,
	SourceDataLastQuery.Characteristic.* AS Characteristic,
	SourceDataLastQuery.Batch.* AS Batch,
	SourceDataLastQuery.MeasurementUnit.* AS MeasurementUnit,
	ProductsAndServicesBarcodes.Barcode AS Barcode,
	ProductsAndServicesPricesSliceLast.Price AS Price,
	ProductsInInventoryBalances.QuantityBalance AS BalanceAtWarehouse}
;

////////////////////////////////////////////////////////////////////////////////
SELECT
	TRUE AS MatchesSelection,
	DataTable.ProductsAndServices AS ProductsAndServices,
	DataTable.Characteristic AS Characteristic,
	DataTable.Batch AS Batch,
	DataTable.MeasurementUnit AS MeasurementUnit,
	DataTable.Code AS Code,
	DataTable.Used AS Used
{SELECT
	MatchesSelection,
	Code,
	Used,
	ProductsAndServices.*,
	Characteristic.*,
	Batch.*,
	MeasurementUnit.*}
FROM
	DataTable AS DataTable
WHERE
	(DataTable.Code = 0
			OR Not DataTable.Used)

UNION ALL

SELECT
	FALSE,
	ProductsCodesPeripheralOffline.ProductsAndServices,
	ProductsCodesPeripheralOffline.Characteristic,
	ProductsCodesPeripheralOffline.Batch,
	ProductsCodesPeripheralOffline.MeasurementUnit,
	ProductsCodesPeripheralOffline.Code,
	ProductsCodesPeripheralOffline.Used
FROM
	InformationRegister.ProductsCodesPeripheralOffline AS ProductsCodesPeripheralOffline
WHERE
	Not (ProductsCodesPeripheralOffline.ProductsAndServices, ProductsCodesPeripheralOffline.Characteristic, ProductsCodesPeripheralOffline.Batch, ProductsCodesPeripheralOffline.MeasurementUnit) In
				(SELECT
					T.ProductsAndServices,
					T.Characteristic,
					T.Batch,
					T.MeasurementUnit
				FROM
					DataTable AS T)
	AND ProductsCodesPeripheralOffline.ProductsAndServices &lt;&gt; VALUE(Catalog.ProductsAndServices.EmptyRef)
	AND ProductsCodesPeripheralOffline.ExchangeRule = &amp;ExchangeRule
	AND ProductsCodesPeripheralOffline.Used

ORDER BY
	Code</query>
		<autoFillFields>false</autoFillFields>
	</dataSet>
	<parameter>
		<name>Date</name>
		<title xsi:type="v8:LocalStringType">
			<v8:item>
				<v8:lang>en</v8:lang>
				<v8:content>Date</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ru</v8:lang>
				<v8:content>Дата</v8:content>
			</v8:item>
		</title>
		<valueType>
			<v8:Type>xs:dateTime</v8:Type>
			<v8:DateQualifiers>
				<v8:DateFractions>DateTime</v8:DateFractions>
			</v8:DateQualifiers>
		</valueType>
		<value xsi:type="xs:dateTime">0001-01-01T00:00:00</value>
		<useRestriction>true</useRestriction>
		<availableAsField>false</availableAsField>
	</parameter>
	<parameter>
		<name>ExchangeRule</name>
		<title xsi:type="v8:LocalStringType">
			<v8:item>
				<v8:lang>en</v8:lang>
				<v8:content>Export rule</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ru</v8:lang>
				<v8:content>Правило выгрузки</v8:content>
			</v8:item>
		</title>
		<value xsi:type="dcscor:DesignTimeValue">Catalog.ExportingRulesToCROffline.EmptyRef</value>
		<useRestriction>true</useRestriction>
	</parameter>
	<parameter>
		<name>UsesFilterByProductsAndServicesSegment</name>
		<title xsi:type="v8:LocalStringType">
			<v8:item>
				<v8:lang>en</v8:lang>
				<v8:content>Filter by products and services segment is used</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ru</v8:lang>
				<v8:content>Используется отбор по сегменту номенклатуры</v8:content>
			</v8:item>
		</title>
		<valueType>
			<v8:Type>xs:boolean</v8:Type>
		</valueType>
		<value xsi:type="xs:boolean">false</value>
		<useRestriction>false</useRestriction>
	</parameter>
	<parameter>
		<name>PriceKind</name>
		<title xsi:type="v8:LocalStringType">
			<v8:item>
				<v8:lang>en</v8:lang>
				<v8:content>Price kind</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ru</v8:lang>
				<v8:content>Вид цены</v8:content>
			</v8:item>
		</title>
		<valueType>
			<v8:Type xmlns:d4p1="http://v8.1c.ru/8.1/data/enterprise/current-config">d4p1:CatalogRef.PriceKinds</v8:Type>
		</valueType>
		<value xsi:nil="true"/>
		<useRestriction>true</useRestriction>
	</parameter>
	<settingsVariant>
		<dcsset:name>Default</dcsset:name>
		<dcsset:presentation xsi:type="v8:LocalStringType">
			<v8:item>
				<v8:lang>en</v8:lang>
				<v8:content>Default</v8:content>
			</v8:item>
			<v8:item>
				<v8:lang>ru</v8:lang>
				<v8:content>Default</v8:content>
			</v8:item>
		</dcsset:presentation>
		<dcsset:settings xmlns:style="http://v8.1c.ru/8.1/data/ui/style" xmlns:sys="http://v8.1c.ru/8.1/data/ui/fonts/system" xmlns:web="http://v8.1c.ru/8.1/data/ui/colors/web" xmlns:win="http://v8.1c.ru/8.1/data/ui/colors/windows">
			<dcsset:filter>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">ProductsAndServices</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:right xsi:type="dcscor:DesignTimeValue">Catalog.ProductsAndServices.EmptyRef</dcsset:right>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">Characteristic</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:right xsi:type="dcscor:DesignTimeValue">Catalog.ProductsAndServicesCharacteristics.EmptyRef</dcsset:right>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">Batch</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:right xsi:type="dcscor:DesignTimeValue">Catalog.ProductsAndServicesBatches.EmptyRef</dcsset:right>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">ProductsAndServices.PriceGroup</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:right xsi:type="dcscor:DesignTimeValue">Catalog.PriceGroups.EmptyRef</dcsset:right>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">MeasurementUnit</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
					<dcsset:right xsi:type="dcscor:DesignTimeValue">Catalog.UOM.EmptyRef</dcsset:right>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">Barcode</dcsset:left>
					<dcsset:comparisonType>Filled</dcsset:comparisonType>
					<dcsset:presentation xsi:type="xs:string">Only with barcode</dcsset:presentation>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">Price</dcsset:left>
					<dcsset:comparisonType>Filled</dcsset:comparisonType>
					<dcsset:presentation xsi:type="xs:string">Only with prices</dcsset:presentation>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">BalanceAtWarehouse</dcsset:left>
					<dcsset:comparisonType>Greater</dcsset:comparisonType>
					<dcsset:right xsi:type="xs:decimal">0</dcsset:right>
					<dcsset:presentation xsi:type="xs:string">Only with stock balance</dcsset:presentation>
				</dcsset:item>
				<dcsset:item xsi:type="dcsset:FilterItemComparison">
					<dcsset:use>false</dcsset:use>
					<dcsset:left xsi:type="dcscor:Field">StructuralUnit</dcsset:left>
					<dcsset:comparisonType>Equal</dcsset:comparisonType>
				</dcsset:item>
			</dcsset:filter>
		</dcsset:settings>
	</settingsVariant>
</DataCompositionSchema>