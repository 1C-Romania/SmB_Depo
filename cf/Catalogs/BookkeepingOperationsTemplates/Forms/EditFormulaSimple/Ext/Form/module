
////////////////////////////////////////////////////////////////////////////////
// PROCEDURES AND FUNCTIONS EXPORT

Procedure FillParametersTree() Export

	Object.FillParametersTree(Controls.Parameters,TableKind,TableName,False,Undefined,TableBox,CurrentRecord);
	
EndProcedure // FillParametersTree()

////////////////////////////////////////////////////////////////////////////////
// GENERAL PURPOSE PROCEDURES AND FUNCTIONS

////////////////////////////////////////////////////////////////////////////////
// FORM ACTIONS HANDLER

Procedure OnOpen()

	CurrentControl = Controls.Parameters;
	Controls.FormulaPresentationTextDocument.SetText(FormulaPresentation);

EndProcedure

////////////////////////////////////////////////////////////////////////////////
// CONTROLS ACTIONS HANDLERS

Procedure ButtonSelectOnClick(Control)

	FormulaPresentation = Controls.FormulaPresentationTextDocument.GetText();
	Formula = Object.GetFormulaByFormulaPresentation(FormulaPresentation,TableKind,TableName,TableBox);
	
	If IsBlankString(TrimAll(Formula)) Then
		
		If IsBlankString(TrimAll(FormulaPresentation)) Then
			Close(True);
		Else
			DoMessageBox(Nstr("en = 'There are was errors in formula. Please correct them and try again!'; pl = 'Znaleziono błędy we wzorze. Nalezy poprawić błędy i spróbować ponownie!'"));
		EndIf;	
		
		Return;
		
	EndIf;	
	
	Close(True);

EndProcedure

////////////////////////////////////////////////////////////////////////////////
// TABLE BOX PARAMETERS HANDLERS

Procedure ParametersSelection(Control, SelectedRow, Column, StandardProcessing)

	StandardProcessing = False;

	SetFormula();

EndProcedure

Procedure ParametersOnActivateRow(Control)
	CurrentData = Controls.Parameters.CurrentData;
	Controls.CommandBarParameters.Buttons.Edit.Enabled = CurrentData <> Undefined AND Find(Controls.Parameters.CurrentData.ParameterName,".") = 0 AND CurrentData.Rows.Count()=0;
EndProcedure

Procedure CommandBarParametersNewParameter(Button)
	
	Param = Object.NewParameter(TableBox, , , ThisForm);
	If Param<>Undefined Then
		FillParametersTree();
	EndIf;	
	
EndProcedure

Procedure CommandBarParametersEdit(Button)
	
	If Controls.Parameters.CurrentData<>Undefined Then
		Object.EditParameter(Controls.Parameters.CurrentData.ParameterName);
		FillParametersTree();
	EndIf;
	
EndProcedure

Procedure CommandBarParametersSelect(Button)
	SetFormula();
EndProcedure

Procedure SetFormula()

	CurrentData = Controls.Parameters.CurrentData;
	If CurrentData <> Undefined Then
		Controls.FormulaPresentationTextDocument.SelectedText = "["+Object.GetParameterPresentationByName(CurrentData.ParameterName,TableBox)+"]";
	EndIf;	
	
EndProcedure

Procedure ParametersDragStart(Control, DragParameters, StandardProcessing)
	
	DragParameters.Value = "[" + Object.GetParameterPresentationByName(DragParameters.Value.ParameterName,TableBox) + "]";
	DragParameters.Action = DragAction.Copy;
	
EndProcedure











