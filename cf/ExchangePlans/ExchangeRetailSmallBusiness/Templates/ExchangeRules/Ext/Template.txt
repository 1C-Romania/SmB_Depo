<ExchangeRules>
	<FormatVersion CompatibilityMode="CompatibilityModeWithSSL20">2.01</FormatVersion>
	<ID>5dbae5f0-cda4-4d4d-ab5c-2b0756be1bbe    </ID>
	<Description>SmallBusiness --&gt; Retail</Description>
	<CreationDateTime>2014-11-17T13:24:55</CreationDateTime>
	<Source PlatformVersion="8.0" ConfigurationVersion="1.5.3.9" ConfigurationSynonym="Small Business, version 1.5">SmallBusiness</Source>
	<Receiver PlatformVersion="8.0" ConfigurationVersion="2.1.5.9" ConfigurationSynonym="Retail, edition 2.1">Retail</Receiver>
	<BeforeGetChangedObjects>Query = New Query;
Query.Text = "SELECT
|   ProductsAndServicesCategoriesChanges.Ref AS ProductsAndServicesCategories
|FROM
|   Catalog.ProductsAndServicesCategories.Changes AS ProductsAndServicesCategoriesChanges
|WHERE
|   ProductsAndServicesCategoriesChanges.Node = &amp;ExchangeNodeObject
|   AND ProductsAndServicesCategoriesChanges.Ref REFS Catalog.ProductsAndServicesCategories";

Query.SetParameter("ExchangeNodeObject", Recipient.Ref);

ProductsAndServicesCategoryForExport = Query.Execute().Unload();
ProductsAndServicesCategoryForExport.Indexes.Add("ProductsAndServicesCategories");
Parameters.Insert("ProductsAndServicesCategoryForExport", ProductsAndServicesCategoryForExport);</BeforeGetChangedObjects>
	<BeforeObjectConversion>If TypeOf(IncomingData) &lt;&gt; Type("Structure") Then
	IncomingData = New Structure;
EndIf;</BeforeObjectConversion>
	<BeforeSendDeletionInfo>If TypeOf(Refs) = Type("DocumentRef.InventoryTransfer") Then
	WriteToFileObjectDeletion(Refs, "DocumentRef.ProductsTransfer", "DocumentRef.InventoryTransfer");
	WriteToFileObjectDeletion(Refs, "DocumentRef.ProductsGoodsReceipt", "DocumentRef.InventoryTransfer");
EndIf;</BeforeSendDeletionInfo>
	<OnGetDeletionInfo>ObjectMetadata = Object.Metadata();
If Metadata.Catalogs.Contains(ObjectMetadata) Then
	Cancel = True;
	SetObjectDeletionMark(Object, True, "Catalog");
ElsIf Metadata.Documents.Contains(ObjectMetadata) Then
	Cancel = True;
	If Object.Posted Then
		UndoObjectPostingInIB(Object, TypeOf(Object));
	EndIf;
	SetObjectDeletionMark(Object, True, "Document");
EndIf</OnGetDeletionInfo>
	<Parameters/>
	<DataProcessors/>
	<ObjectConversionRules>
		<Group>
			<Code>Catalogs</Code>
			<Description>Catalogs</Description>
			<Order>50</Order>
			<Rule>
				<Code>ProductsAndServices</Code>
				<Description>Catalog: ProductsAndServices</Description>
				<Order>50</Order>
				<AfterImport>ProductsAndServicesTypeNotFilled = Not Object.IsFolder AND Not ValueIsFilled(Object.ProductsAndServicesType);
ClearProductCategory = ValueIsFilled(Object.ProductCategory)
	AND Object.ProductsAndServicesKind &lt;&gt; CommonUse.ObjectAttributeValue(Object.ProductCategory,"Owner");
If ProductsAndServicesTypeNotFilled Then
	Object.ProductsAndServicesType = CommonUse.ObjectAttributeValue(Object.ProductsAndServicesKind,"ProductsAndServicesType");
EndIf;
If ClearProductCategory Then
	Object.ProductCategory = Catalogs.ProductCategories.EmptyRef();
EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.ProductsAndServices</Source>
				<Receiver>CatalogRef.ProductsAndServices</Receiver>
				<Properties>
					<Property Search="true">
						<Code>5</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>1</Code>
						<Description>SKU --&gt; SKU</Description>
						<Order>100</Order>
						<Source Name="SKU" Kind="Attribute" Type="String"/>
						<Receiver Name="SKU" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true" Required="true">
						<Code>9</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>150</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Code --&gt; Code</Description>
						<Order>200</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>250</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>300</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ProductsAndServices"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ProductsAndServices"/>
						<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>350</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>ProductsAndServicesCategory --&gt; ProductsAndServicesKind</Description>
						<Order>400</Order>
						<Source Name="ProductsAndServicesCategory" Kind="Attribute" Type="CatalogRef.ProductsAndServicesCategories"/>
						<Receiver Name="ProductsAndServicesKind" Kind="Attribute" Type="CatalogRef.ProductsAndServicesKinds"/>
						<ConversionRuleCode>ProductsAndServicesCategories_ProductsAndServicesKinds             </ConversionRuleCode>
						<BeforeExport>If Source.IsFolder Then
	Cancel = True;
Else
	OutgoingData = New Structure;
	OutgoingData.Insert("EnterAccountingByFeatures",
		Source.UseCharacteristics);
	OutgoingData.Insert("ProductsAndServicesTypes",?(Source.ProductsAndServicesType = Enums.ProductsAndServicesTypes.InventoryItem,
		Enums.ProductsAndServicesTypes.InventoryItem,Enums.ProductsAndServicesTypes.Service));
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>MeasurementUnit --&gt; MeasurementUnit</Description>
						<Order>450</Order>
						<Source Name="MeasurementUnit" Kind="Attribute" Type="CatalogRef.UOMClassifier"/>
						<Receiver Name="MeasurementUnit" Kind="Attribute" Type="CatalogRef.BasicMeasurementUnits"/>
						<ConversionRuleCode>BasicUOM                           </ConversionRuleCode>
					</Property>
					<Property>
						<Code>15</Code>
						<Description>VATRate --&gt; VATRate</Description>
						<Order>500</Order>
						<Source Name="VATRate" Kind="Attribute" Type="CatalogRef.VATRates"/>
						<Receiver Name="VATRate" Kind="Attribute" Type="EnumRef.VATRates"/>
						<BeforeExport>If Not Source.IsFolder Then
	If Source.VATRate.NotTaxable Then
		Expression = "Enums.VATRates.WithoutVAT";
	ElsIf Source.VATRate.Rate = 18
		 AND Not Source.VATRate.Calculated Then
		Expression = "Enums.VATRates.VAT18";
	ElsIf Source.VATRate.Rate = 18
			AND Source.VATRate.Calculated Then
		Expression = "Enums.VATRates.VAT18_118";
	ElsIf Source.VATRate.Rate = 10 
		 AND Not Source.VATRate.Calculated Then
		Expression = "Enums.VATRates.VAT10";
	ElsIf Source.VATRate.Rate = 10 
			AND Source.VATRate.Calculated Then
		Expression = "Enums.VATRates.VAT10_110";
	ElsIf Source.VATRate.Rate = 0 Then
		Expression = "Enums.VATRates.VAT0";
	Else
		Expression = "Enums.VATRates.VAT18";
	EndIf;
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>16</Code>
						<Description>CountryOfOrigin --&gt; CountryOfOrigin</Description>
						<Order>550</Order>
						<Source Name="CountryOfOrigin" Kind="Attribute" Type="CatalogRef.WorldCountries"/>
						<Receiver Name="CountryOfOrigin" Kind="Attribute" Type="CatalogRef.WorldCountries"/>
						<ConversionRuleCode>WorldCountries                                        </ConversionRuleCode>
					</Property>
					<Property>
						<Code>17</Code>
						<Description>ProductsAndServicesType --&gt; ProductsAndServicesType</Description>
						<Order>600</Order>
						<Source Name="ProductsAndServicesType" Kind="Attribute" Type="EnumRef.ProductsAndServicesTypes"/>
						<Receiver Name="ProductsAndServicesType" Kind="Attribute" Type="EnumRef.ProductsAndServicesTypes"/>
						<ConversionRuleCode>ProductsAndServicesTypes                                  </ConversionRuleCode>
					</Property>
					<Group>
						<Code>11</Code>
						<Description>AdditionalAttributes --&gt; AdditionalAttributes</Description>
						<Order>650</Order>
						<Source Name="AdditionalAttributes" Kind="TabularSection"/>
						<Receiver Name="AdditionalAttributes" Kind="TabularSection"/>
						<BeforeProcessExport>If Source.IsFolder Then
	Cancel = True;
EndIf;</BeforeProcessExport>
						<BeforeExport>PropertySet = CommonUse.ObjectAttributeValue(CollectionObject.Property,"PropertySet");
Cancel = PropertySet &lt;&gt; Catalogs.AdditionalAttributesAndInformationSets.Catalog_ProductsAndServices;</BeforeExport>
						<Property>
							<Code>12</Code>
							<Description>Value --&gt; Value</Description>
							<Order>50</Order>
							<Source Name="Value" Kind="Attribute"/>
							<Receiver Name="Value" Kind="Attribute"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Property --&gt; Property</Description>
							<Order>100</Order>
							<Source Name="Property" Kind="Attribute" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
							<Receiver Name="Property" Kind="Attribute" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
							<ConversionRuleCode>AdditionalAttributesAndInformation                  </ConversionRuleCode>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>TextString --&gt; TextString</Description>
							<Order>150</Order>
							<Source Name="TextString" Kind="Attribute" Type="String"/>
							<Receiver Name="TextString" Kind="Attribute" Type="String"/>
						</Property>
					</Group>
					<Property>
						<Code>18</Code>
						<Description>AlcoholicProductsKind --&gt; AlcoholicProductsKind</Description>
						<Order>700</Order>
						<Source Name="AlcoholicProductsKind" Kind="Attribute" Type="CatalogRef.AlcoholicProductsKinds"/>
						<Receiver Name="AlcoholicProductsKind" Kind="Attribute" Type="CatalogRef.AlcoholicProductsKinds"/>
						<ConversionRuleCode>AlcoholicProductsKinds                          </ConversionRuleCode>
					</Property>
					<Property>
						<Code>19</Code>
						<Description>ImportedAlcoholicProducts --&gt; ImportedAlcoholicProducts</Description>
						<Order>750</Order>
						<Source Name="ImportedAlcoholicProducts" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="ImportedAlcoholicProducts" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>20</Code>
						<Description>VolumeDAL --&gt; VolumeDAL</Description>
						<Order>800</Order>
						<Source Name="VolumeDAL" Kind="Attribute" Type="Number"/>
						<Receiver Name="VolumeDAL" Kind="Attribute" Type="Number"/>
					</Property>
					<Property>
						<Code>22</Code>
						<Description>AlcoholicProductsManufacturerImporter --&gt; AlcoholicProductsManufacturerImporter</Description>
						<Order>900</Order>
						<Source Name="AlcoholicProductsManufacturerImporter" Kind="Attribute" Type="CatalogRef.Counterparties"/>
						<Receiver Name="AlcoholicProductsManufacturerImporter" Kind="Attribute" Type="CatalogRef.Counterparties"/>
						<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>23</Code>
						<Description>--&gt; AlcoholicProducts</Description>
						<Order>950</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="AlcoholicProducts" Kind="Attribute" Type="Boolean"/>
						<BeforeExport>If ValueIsFilled(Source.AlcoholicProductsKind) Then
	Value  = True;
Else
	Value = False;
EndIf;</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Users</Code>
				<Description>Catalog: Users</Description>
				<Order>250</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.Users</Source>
				<Receiver>CatalogRef.Users</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>NotValid --&gt; NotValid</Description>
						<Order>100</Order>
						<Source Name="NotValid" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="NotValid" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Service --&gt; Service</Description>
						<Order>150</Order>
						<Source Name="Service" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="Service" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Group>
						<Code>5</Code>
						<Description>ContactInformation --&gt; ContactInformation</Description>
						<Order>250</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="ContactInformation" Kind="TabularSection"/>
						<BeforeProcessExport>If Source.IsFolder Then
	Cancel = True;
EndIf;</BeforeProcessExport>
						<Property>
							<Code>6</Code>
							<Description>EMail_Address --&gt; EMail_Address</Description>
							<Order>50</Order>
							<Source Name="EMail_Address" Kind="Attribute" Type="String"/>
							<Receiver Name="EMail_Address" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Kind --&gt; Kind</Description>
							<Order>100</Order>
							<Source Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<Receiver Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>City --&gt; City</Description>
							<Order>150</Order>
							<Source Name="City" Kind="Attribute" Type="String"/>
							<Receiver Name="City" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>ServerDomainName --&gt; ServerDomainName</Description>
							<Order>200</Order>
							<Source Name="ServerDomainName" Kind="Attribute" Type="String"/>
							<Receiver Name="ServerDomainName" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>FieldsValues --&gt; FieldsValues</Description>
							<Order>250</Order>
							<Source Name="FieldsValues" Kind="Attribute" Type="String"/>
							<Receiver Name="FieldsValues" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>PhoneNumber --&gt; PhoneNumber</Description>
							<Order>300</Order>
							<Source Name="PhoneNumber" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumber" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>PhoneNumberNoCodes --&gt; PhoneNumberNoCodes</Description>
							<Order>350</Order>
							<Source Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>Presentation --&gt; Presentation</Description>
							<Order>400</Order>
							<Source Name="Presentation" Kind="Attribute" Type="String"/>
							<Receiver Name="Presentation" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>Region --&gt; Region</Description>
							<Order>450</Order>
							<Source Name="Region" Kind="Attribute" Type="String"/>
							<Receiver Name="Region" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>Country --&gt; Country</Description>
							<Order>500</Order>
							<Source Name="Country" Kind="Attribute" Type="String"/>
							<Receiver Name="Country" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Type --&gt; Type</Description>
							<Order>550</Order>
							<Source Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<Receiver Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
					</Group>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>BasicUOM</Code>
				<Description>Catalog: Classifier units measurements</Description>
				<Order>300</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Source>CatalogRef.UOMClassifier</Source>
				<Receiver>CatalogRef.BasicUOM</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>InternationalAbbreviation --&gt; InternationalAbbreviation</Description>
						<Order>100</Order>
						<Source Name="InternationalAbbreviation" Kind="Attribute" Type="String"/>
						<Receiver Name="InternationalAbbreviation" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>200</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>250</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>AdditionalAttributesAndInformationSets</Code>
				<Description>Catalog: Sets additional details and information</Description>
				<Order>350</Order>
				<Donotreplace>true</Donotreplace>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
				<Source>CatalogRef.AdditionalAttributesAndInformationSets</Source>
				<Receiver>CatalogRef.AdditionalAttributesAndInformationSets</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true" Required="true">
						<Code>2</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>100</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values>
					<Value>
						<Code>2</Code>
						<Description>Catalog_ProductsAndServices --&gt; Catalog_Products and services</Description>
						<Order>100</Order>
						<Source>Catalog_ProductsAndServices</Source>
						<Receiver>Catalog_ProductsAndServices_Common</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ObjectsPropertiesValues</Code>
				<Description>Catalog: Additional values</Description>
				<Order>400</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.ObjectsPropertiesValues</Source>
				<Receiver>CatalogRef.ObjectsPropertiesValues</Receiver>
				<Properties>
					<Property Search="true">
						<Code>2</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>50</Order>
						<Source Name="Owner" Kind="Property" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
						<Receiver Name="Owner" Kind="Property" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
						<ConversionRuleCode>AdditionalAttributesAndInformation                  </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true" Required="true">
						<Code>6</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>150</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ObjectsPropertiesValues"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ObjectsPropertiesValues"/>
						<ConversionRuleCode>ObjectsPropertiesValues                           </ConversionRuleCode>
					</Property>
					<Property>
						<Code>1</Code>
						<Description>Weight --&gt; Weight</Description>
						<Order>250</Order>
						<Source Name="Weight" Kind="Attribute" Type="Number"/>
						<Receiver Name="Weight" Kind="Attribute" Type="Number"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>300</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Companies</Code>
				<Description>Catalog: Companies</Description>
				<Order>500</Order>
				<SearchFieldSequence>If Variantsearchnumber = 1 Then
	Stringofsearchpropertynames = "TIN, Name";
ElsIf Variantsearchnumber = 2 Then
	Stringofsearchpropertynames = "TIN";
ElsIf Variantsearchnumber = 3 Then
	Stringofsearchpropertynames = "Code";
Else
	Stringofsearchpropertynames = "Description";
EndIf;</SearchFieldSequence>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.Companies</Source>
				<Receiver>CatalogRef.Companies</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>TIN --&gt; TIN</Description>
						<Order>50</Order>
						<Source Name="TIN" Kind="Attribute" Type="String"/>
						<Receiver Name="TIN" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Code --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>Description --&gt; Description</Description>
						<Order>300</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>350</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>OGRN --&gt; OGRN</Description>
						<Order>400</Order>
						<Source Name="OGRN" Kind="Attribute" Type="String"/>
						<Receiver Name="OGRN" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>450</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>Prefix --&gt; Prefix</Description>
						<Order>500</Order>
						<Source Name="Prefix" Kind="Attribute" Type="String"/>
						<Receiver Name="Prefix" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>CertificateIssueDate --&gt; CertificateIssueDate</Description>
						<Order>550</Order>
						<Source Name="CertificateIssueDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="CertificateIssueDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>CertificateSeriesNumber --&gt; CertificateSeriesNumber</Description>
						<Order>600</Order>
						<Source Name="CertificateSeriesNumber" Kind="Attribute" Type="String"/>
						<Receiver Name="CertificateSeriesNumber" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>LegalEntityIndividual --&gt; LegalEntityIndividual</Description>
						<Order>650</Order>
						<Source Name="LegalEntityIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<Receiver Name="LegalEntityIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<ConversionRuleCode>LegalEntityIndividual                                         </ConversionRuleCode>
					</Property>
					<Group>
						<Code>14</Code>
						<Description>ContactInformation --&gt; ContactInformation</Description>
						<Order>700</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="ContactInformation" Kind="TabularSection"/>
						<BeforeProcessExport>If Source.IsFolder Then
	Cancel = True;
EndIf;</BeforeProcessExport>
						<Property>
							<Code>15</Code>
							<Description>EMail_Address --&gt; EMail_Address</Description>
							<Order>50</Order>
							<Source Name="EMail_Address" Kind="Attribute" Type="String"/>
							<Receiver Name="EMail_Address" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Kind --&gt; Kind</Description>
							<Order>100</Order>
							<Source Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<Receiver Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>City --&gt; City</Description>
							<Order>150</Order>
							<Source Name="City" Kind="Attribute" Type="String"/>
							<Receiver Name="City" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>ServerDomainName --&gt; ServerDomainName</Description>
							<Order>200</Order>
							<Source Name="ServerDomainName" Kind="Attribute" Type="String"/>
							<Receiver Name="ServerDomainName" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>FieldsValues --&gt; FieldsValues</Description>
							<Order>250</Order>
							<Source Name="FieldsValues" Kind="Attribute" Type="String"/>
							<Receiver Name="FieldsValues" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>PhoneNumber --&gt; PhoneNumber</Description>
							<Order>300</Order>
							<Source Name="PhoneNumber" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumber" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>PhoneNumberNoCodes --&gt; PhoneNumberNoCodes</Description>
							<Order>350</Order>
							<Source Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>Presentation --&gt; Presentation</Description>
							<Order>400</Order>
							<Source Name="Presentation" Kind="Attribute" Type="String"/>
							<Receiver Name="Presentation" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>Region --&gt; Region</Description>
							<Order>450</Order>
							<Source Name="Region" Kind="Attribute" Type="String"/>
							<Receiver Name="Region" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>24</Code>
							<Description>Country --&gt; Country</Description>
							<Order>500</Order>
							<Source Name="Country" Kind="Attribute" Type="String"/>
							<Receiver Name="Country" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>25</Code>
							<Description>Type --&gt; Type</Description>
							<Order>550</Order>
							<Source Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<Receiver Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
					</Group>
					<Property>
						<Code>26</Code>
						<Description>--&gt; ProductsEvaluationMethodInRetail</Description>
						<Order>750</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ProductsEvaluationMethodInRetail" Kind="Attribute" Type="EnumRef.WaysToEvaluateProductsInRetail"/>
						<BeforeExport>Expression = "Enums.WaysToEvaluateProductsInRetail.OnSellingCost";</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ContactInformationTypes</Code>
				<Description>Catalog: Kinds contact information</Description>
				<Order>550</Order>
				<Donotreplace>true</Donotreplace>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
				<Source>CatalogRef.ContactInformationTypes</Source>
				<Receiver>CatalogRef.ContactInformationTypes</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>100</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ContactInformationTypes"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ContactInformationTypes"/>
						<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>3</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>150</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values>
					<Value>
						<Code>2</Code>
						<Description>CompanyEmail --&gt; CompanyEmail</Description>
						<Order>100</Order>
						<Source>CompanyEmail</Source>
						<Receiver>CompanyEmail</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>CounterpartyOtherInformation --&gt; CounterpartyOtherInformation</Description>
						<Order>250</Order>
						<Source>CounterpartyOtherInformation</Source>
						<Receiver>CounterpartyOtherInformation</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>CounterpartyPostalAddress --&gt; CounterpartyPostalAddress</Description>
						<Order>350</Order>
						<Source>CounterpartyPostalAddress</Source>
						<Receiver>CounterpartyPostalAddress</Receiver>
					</Value>
					<Value>
						<Code>13</Code>
						<Description>CompanyPhone --&gt; CompanyPhone</Description>
						<Order>650</Order>
						<Source>CompanyPhone</Source>
						<Receiver>CompanyPhone</Receiver>
					</Value>
					<Value>
						<Code>16</Code>
						<Description>CounterpartyFax --&gt; CounterpartyFax</Description>
						<Order>800</Order>
						<Source>CounterpartyFax</Source>
						<Receiver>CounterpartyFax</Receiver>
					</Value>
					<Value>
						<Code>18</Code>
						<Description>CounterpartyFactAddress --&gt; CounterpartyFactAddress</Description>
						<Order>900</Order>
						<Source>CounterpartyFactAddress</Source>
						<Receiver>CounterpartyFactAddress</Receiver>
					</Value>
					<Value>
						<Code>20</Code>
						<Description>CounterpartyLegalAddress --&gt; CounterpartyLegalAddress</Description>
						<Order>1000</Order>
						<Source>CounterpartyLegalAddress</Source>
						<Receiver>CounterpartyLegalAddress</Receiver>
					</Value>
					<Value>
						<Code>22</Code>
						<Description>UserEmail --&gt; UserEmail</Description>
						<Order>1100</Order>
						<Source>UserEmail</Source>
						<Receiver>UserEmail</Receiver>
					</Value>
					<Value>
						<Code>26</Code>
						<Description>CatalogCompanies --&gt; CatalogCompanies</Description>
						<Order>1300</Order>
						<Source>CatalogCompanies</Source>
						<Receiver>CatalogCompanies</Receiver>
					</Value>
					<Value>
						<Code>30</Code>
						<Description>UserPhone --&gt; UserPhone</Description>
						<Order>1500</Order>
						<Source>UserPhone</Source>
						<Receiver>UserPhone</Receiver>
					</Value>
					<Value>
						<Code>31</Code>
						<Description>CatalogUsers --&gt; CatalogUsers</Description>
						<Order>1550</Order>
						<Source>CatalogUsers</Source>
						<Receiver>CatalogUsers</Receiver>
					</Value>
					<Value>
						<Code>32</Code>
						<Description>CounterpartyEmail --&gt; CounterpartyEmail</Description>
						<Order>1600</Order>
						<Source>CounterpartyEmail</Source>
						<Receiver>CounterpartyEmail</Receiver>
					</Value>
					<Value>
						<Code>33</Code>
						<Description>CounterpartyOtherInformation --&gt; AnotherInformationCo</Description>
						<Order>1650</Order>
						<Source>CounterpartyOtherInformation</Source>
						<Receiver>CounterpartyOtherInformation</Receiver>
					</Value>
					<Value>
						<Code>34</Code>
						<Description>CounterpartyPostalAddress --&gt; CounterpartyAddress</Description>
						<Order>1700</Order>
						<Source>CounterpartyPostalAddress</Source>
						<Receiver>CounterpartyPostalAddress</Receiver>
					</Value>
					<Value>
						<Code>35</Code>
						<Description>CatalogCounterparties --&gt; CatalogCounterparties</Description>
						<Order>1750</Order>
						<Source>CatalogCounterparties</Source>
						<Receiver>CatalogCounterparties</Receiver>
					</Value>
					<Value>
						<Code>36</Code>
						<Description>CatalogIndividuals --&gt; CatalogPhysicalP</Description>
						<Order>1800</Order>
						<Source>CatalogIndividuals</Source>
						<Receiver>CatalogIndividuals</Receiver>
					</Value>
					<Value>
						<Code>37</Code>
						<Description>CounterpartyPhone --&gt; CounterpartyPhone</Description>
						<Order>1850</Order>
						<Source>CounterpartyPhone</Source>
						<Receiver>CounterpartyPhone</Receiver>
					</Value>
					<Value>
						<Code>38</Code>
						<Description>CounterpartyFax --&gt; CounterpartyFax</Description>
						<Order>1900</Order>
						<Source>CounterpartyFax</Source>
						<Receiver>CounterpartyFax</Receiver>
					</Value>
					<Value>
						<Code>39</Code>
						<Description>CounterpartyFactAddress --&gt; CounterpartyFactAddress</Description>
						<Order>1950</Order>
						<Source>CounterpartyFactAddress</Source>
						<Receiver>CounterpartyFactAddress</Receiver>
					</Value>
					<Value>
						<Code>40</Code>
						<Description>CounterpartyLegalAddress --&gt; CounterpartyLegalAddress</Description>
						<Order>2000</Order>
						<Source>CounterpartyLegalAddress</Source>
						<Receiver>CounterpartyLegalAddress</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>Shops</Code>
				<Description>Catalog: Structural items</Description>
				<Order>600</Order>
				<AfterImport>ManagingSystemWarehouse = Not ObjectFound
	OR Not ValueIsFilled(Object.SalesWarehouse)
	OR Not ValueIsFilled(Object.WarehouseReceipts);
If ManagingSystemWarehouse Then
	Object.ManagingSystemWarehouse = True;
EndIf;
Object.UseOrderSchemeOnTransfer = Not Object.ManagingSystemWarehouse;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.StructuralUnits</Source>
				<Receiver>CatalogRef.Shops</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>--&gt; UseOrderSchemeOnTransfer</Description>
						<Order>200</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="UseOrderSchemeOnTransfer" Kind="Attribute" Type="Boolean"/>
						<BeforeExport>Value = True;</BeforeExport>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>OrderWarehouse --&gt; UseOrderSchemaOnExport</Description>
						<Order>250</Order>
						<Source Name="OrderWarehouse" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="UseOrderSchemaOnExport" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>OrderWarehouse --&gt; UseOrderSchemeOnReflectingExcessLoss</Description>
						<Order>300</Order>
						<Source Name="OrderWarehouse" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="UseOrderSchemeOnReflectingExcessLoss" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>OrderWarehouse --&gt; UseOrderSchemeOnAdmission</Description>
						<Order>350</Order>
						<Source Name="OrderWarehouse" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="UseOrderSchemeOnAdmission" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>StructuralUnitType --&gt; ManagingSystemWarehouse</Description>
						<Order>400</Order>
						<Source Name="StructuralUnitType" Kind="Attribute" Type="EnumRef.StructuralUnitsTypes"/>
						<Receiver Name="ManagingSystemWarehouse" Kind="Attribute" Type="Boolean"/>
						<BeforeExport>If Source.StructuralUnitType = Enums.StructuralUnitsTypes.Retail Then
	Value = False;
Else
	Value = True;
EndIf;</BeforeExport>
					</Property>
					<Group>
						<Code>14</Code>
						<Description>AdditionalAttributes --&gt; AdditionalAttributes</Description>
						<Order>450</Order>
						<Source Name="AdditionalAttributes" Kind="TabularSection"/>
						<Receiver Name="AdditionalAttributes" Kind="TabularSection"/>
						<BeforeProcessExport>If Source.IsFolder Then
	Cancel = True;
EndIf;</BeforeProcessExport>
						<BeforeExport>PropertySet = CommonUse.ObjectAttributeValue(CollectionObject.Property,"PropertySet");
Cancel = PropertySet &lt;&gt; Catalogs.AdditionalAttributesAndInformationSets.Catalog_ProductsAndServices;</BeforeExport>
						<Property>
							<Code>15</Code>
							<Description>Value --&gt; Value</Description>
							<Order>50</Order>
							<Source Name="Value" Kind="Attribute"/>
							<Receiver Name="Value" Kind="Attribute"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Property --&gt; Property</Description>
							<Order>100</Order>
							<Source Name="Property" Kind="Attribute" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
							<Receiver Name="Property" Kind="Attribute" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
							<ConversionRuleCode>AdditionalAttributesAndInformation                  </ConversionRuleCode>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>TextString --&gt; TextString</Description>
							<Order>150</Order>
							<Source Name="TextString" Kind="Attribute" Type="String"/>
							<Receiver Name="TextString" Kind="Attribute" Type="String"/>
						</Property>
					</Group>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>WorldCountries</Code>
				<Description>Catalog: Countries world</Description>
				<Order>650</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Source>CatalogRef.WorldCountries</Source>
				<Receiver>CatalogRef.WorldCountries</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>AlphaCode2 --&gt; AlphaCode2</Description>
						<Order>100</Order>
						<Source Name="AlphaCode2" Kind="Attribute" Type="String"/>
						<Receiver Name="AlphaCode2" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>AlphaCode3 --&gt; AlphaCode3</Description>
						<Order>150</Order>
						<Source Name="AlphaCode3" Kind="Attribute" Type="String"/>
						<Receiver Name="AlphaCode3" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Description --&gt; Description</Description>
						<Order>200</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>250</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>300</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Russia --&gt; Russia</Description>
						<Order>50</Order>
						<Source>Russia</Source>
						<Receiver>Russia</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ProductsAndServicesCharacteristics</Code>
				<Description>Catalog: Characteristics</Description>
				<Order>850</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Source>CatalogRef.ProductsAndServicesCharacteristics</Source>
				<Receiver>CatalogRef.ProductsAndServicesCharacteristics</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>50</Order>
						<Source Name="Owner" Kind="Property"/>
						<Receiver Name="Owner" Kind="Property"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ProductsAndServicesCategories_ProductsAndServicesKinds</Code>
				<Description>Catalog: ProductsAndServices groups</Description>
				<Order>1000</Order>
				<AfterImport>If Not ValueIsFilled(Object.CharacteristicsUse) Then
	If Object.UseCharacteristics Then
		Object.CharacteristicsUse = Enums.AdditionalDataVariantsByProductsAndServices.IndividualForProductsAndServices;
	Else
		Object.CharacteristicsUse = Enums.AdditionalDataVariantsByProductsAndServices.DontUse;
	EndIf;
EndIf;</AfterImport>
				<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
				<Source>CatalogRef.ProductsAndServicesCategories</Source>
				<Receiver>CatalogRef.ProductsAndServicesKinds</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>5</Code>
						<Description>--&gt; UseCharacteristics</Description>
						<Order>100</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="UseCharacteristics" Kind="Attribute" Type="Boolean"/>
						<BeforeExport>If IncomingData.Property("EnterAccountingByFeatures") Then
	Value = IncomingData.EnterAccountingByFeatures = True;
Else
	Value = False;
EndIf;</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>--&gt; ProductsAndServicesType</Description>
						<Order>150</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ProductsAndServicesType" Kind="Attribute" Type="EnumRef.ProductsAndServicesTypes"/>
						<BeforeExport>If IncomingData.Property("ProductsAndServicesTypes") Then
	If IncomingData.ProductsAndServicesTypes = Enums.ProductsAndServicesTypes.InventoryItem Then
		Expression = "Enums.ProductsAndServicesTypes.Product";
	Else
		Expression = "Enums.ProductsAndServicesTypes.Service";
	EndIf;
Else
	Expression = "Enums.ProductsAndServicesTypes.Product";
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>250</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>300</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ProductsAndServicesCategories"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ProductsAndServicesKinds"/>
						<ConversionRuleCode>ProductsAndServicesCategories_ProductsAndServicesKinds             </ConversionRuleCode>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>AlcoholicProductsKind --&gt; AlcoholicProductsKind</Description>
						<Order>350</Order>
						<Source Name="AlcoholicProductsKind" Kind="Attribute" Type="CatalogRef.AlcoholicProductsKinds"/>
						<Receiver Name="AlcoholicProductsKind" Kind="Attribute" Type="CatalogRef.AlcoholicProductsKinds"/>
						<ConversionRuleCode>AlcoholicProductsKinds                          </ConversionRuleCode>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>ImportedAlcoholicProducts --&gt; ImportedAlcoholicProducts</Description>
						<Order>400</Order>
						<Source Name="ImportedAlcoholicProducts" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="ImportedAlcoholicProducts" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>--&gt; AlcoholicProducts</Description>
						<Order>450</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="AlcoholicProducts" Kind="Attribute" Type="Boolean"/>
						<BeforeExport>If ValueIsFilled(Source.AlcoholicProductsKind) Then
	Value  = True;
Else
	Value = False;
EndIf;</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ObjectsPropertiesValuesHierarchy</Code>
				<Description>Catalog: Additional values (hierarchy)</Description>
				<Order>1050</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.ObjectsPropertiesValuesHierarchy</Source>
				<Receiver>CatalogRef.ObjectsPropertiesValuesHierarchy</Receiver>
				<Properties>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>100</Order>
						<Source Name="Owner" Kind="Property" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
						<Receiver Name="Owner" Kind="Property" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
						<ConversionRuleCode>AdditionalAttributesAndInformation                  </ConversionRuleCode>
					</Property>
					<Property>
						<Code>1</Code>
						<Description>Weight --&gt; Weight</Description>
						<Order>150</Order>
						<Source Name="Weight" Kind="Attribute" Type="Number"/>
						<Receiver Name="Weight" Kind="Attribute" Type="Number"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>250</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ObjectsPropertiesValuesHierarchy"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ObjectsPropertiesValuesHierarchy"/>
						<ConversionRuleCode>ObjectsPropertiesValuesHierarchy                   </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Counterparties</Code>
				<Description>Catalog: Counterparties</Description>
				<Order>1100</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.Counterparties</Source>
				<Receiver>CatalogRef.Counterparties</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>TIN --&gt; TIN</Description>
						<Order>50</Order>
						<Source Name="TIN" Kind="Attribute" Type="String"/>
						<Receiver Name="TIN" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Comment --&gt; Comment</Description>
						<Order>150</Order>
						<Source Name="Comment" Kind="Attribute" Type="String"/>
						<Receiver Name="Comment" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>250</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>LegalEntityIndividual --&gt; LegalEntityIndividual</Description>
						<Order>300</Order>
						<Source Name="LegalEntityIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<Receiver Name="LegalEntityIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<ConversionRuleCode>LegalEntityIndividual                                         </ConversionRuleCode>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>Code --&gt; Code</Description>
						<Order>350</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>8</Code>
						<Description>Description --&gt; Description</Description>
						<Order>400</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>450</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>500</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.Counterparties"/>
						<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
					</Property>
					<Property Required="true">
						<Code>11</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>550</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>AlcoholicProductsKinds</Code>
				<Description>Catalog: Kinds alcohol products</Description>
				<Order>1200</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.AlcoholicProductsKinds</Source>
				<Receiver>CatalogRef.AlcoholicProductsKinds</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>LicenseKind --&gt; LicenseKind</Description>
						<Order>50</Order>
						<Source Name="LicenseKind" Kind="Attribute" Type="EnumRef.AlcoholicProductsLicenseKinds"/>
						<Receiver Name="LicenseKind" Kind="Attribute" Type="EnumRef.AlcoholicProductsLicenseKinds"/>
						<ConversionRuleCode>LicenseKindsOnAlcoholicProducts                  </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Code --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ProductsAndServicesPacking</Code>
				<Description>Catalog: Units measurements</Description>
				<Order>1250</Order>
				<BeforeExport>If TypeOf(Source.Owner) &lt;&gt; Type("CatalogRef.ProductsAndServices") Then
	Cancel = True;
EndIf;</BeforeExport>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.UOM</Source>
				<Receiver>CatalogRef.ProductsAndServicesPacking</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Factor --&gt; Factor</Description>
						<Order>50</Order>
						<Source Name="Factor" Kind="Attribute" Type="Number"/>
						<Receiver Name="Factor" Kind="Attribute" Type="Number"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>100</Order>
						<Source Name="Owner" Kind="Property"/>
						<Receiver Name="Owner" Kind="Property"/>
						<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>--&gt; MeasurementUnit</Description>
						<Order>250</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="MeasurementUnit" Kind="Attribute" Type="CatalogRef.BasicMeasurementUnits"/>
						<ConversionRuleCode>BasicUOM                           </ConversionRuleCode>
						<BeforeExport>Value = CommonUse.ObjectAttributeValue(Source.Owner,"MeasurementUnit");
</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>AlcoholicProductsVendorLicenses</Code>
				<Description>Catalog: Licenses vendors alcohol products</Description>
				<Order>1300</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.AlcoholicProductsVendorLicenses</Source>
				<Receiver>CatalogRef.AlcoholicProductsVendorLicenses</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>LicenseKind --&gt; LicenseKind</Description>
						<Order>50</Order>
						<Source Name="LicenseKind" Kind="Attribute" Type="EnumRef.AlcoholicProductsLicenseKinds"/>
						<Receiver Name="LicenseKind" Kind="Attribute" Type="EnumRef.AlcoholicProductsLicenseKinds"/>
						<ConversionRuleCode>LicenseKindsOnAlcoholicProducts                  </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>StartDate --&gt; StartDate</Description>
						<Order>100</Order>
						<Source Name="StartDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="StartDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>EndDate --&gt; EndDate</Description>
						<Order>150</Order>
						<Source Name="EndDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="EndDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>IssuedBy --&gt; IssuedBy</Description>
						<Order>200</Order>
						<Source Name="IssuedBy" Kind="Attribute" Type="String"/>
						<Receiver Name="IssuedBy" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>250</Order>
						<Source Name="Owner" Kind="Property" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Owner" Kind="Property" Type="CatalogRef.Counterparties"/>
						<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>Description --&gt; Description</Description>
						<Order>300</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>350</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
		</Group>
		<Group>
			<Code>Enums</Code>
			<Description>Enums</Description>
			<Order>100</Order>
			<Rule>
				<Code>LegalEntityIndividual</Code>
				<Description>Enum: Legal ind person</Description>
				<Order>50</Order>
				<Source>EnumRef.LegalEntityIndividual</Source>
				<Receiver>EnumRef.LegalEntityIndividual</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Ind --&gt; Ind</Description>
						<Order>50</Order>
						<Source>Ind</Source>
						<Receiver>Ind</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>LegalEntity --&gt; LegalEntity</Description>
						<Order>100</Order>
						<Source>LegalEntity</Source>
						<Receiver>LegalEntity</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ContactInformationTypes</Code>
				<Description>Enum: Types contact information</Description>
				<Order>100</Order>
				<Source>EnumRef.ContactInformationTypes</Source>
				<Receiver>EnumRef.ContactInformationTypes</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Address --&gt; Address</Description>
						<Order>50</Order>
						<Source>Address</Source>
						<Receiver>Address</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>EmailAddress --&gt; EmailAddress</Description>
						<Order>100</Order>
						<Source>EmailAddress</Source>
						<Receiver>EmailAddress</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>WebPage --&gt; WebPage</Description>
						<Order>150</Order>
						<Source>WebPage</Source>
						<Receiver>WebPage</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Another --&gt; Another</Description>
						<Order>200</Order>
						<Source>Another</Source>
						<Receiver>Another</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>Phone --&gt; Phone</Description>
						<Order>250</Order>
						<Source>Phone</Source>
						<Receiver>Phone</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>Fax --&gt; Fax</Description>
						<Order>300</Order>
						<Source>Fax</Source>
						<Receiver>Fax</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>IndividualGender</Code>
				<Description>Enum: Gender actual person</Description>
				<Order>150</Order>
				<Source>EnumRef.IndividualGender</Source>
				<Receiver>EnumRef.IndividualGender</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Female --&gt; Female</Description>
						<Order>50</Order>
						<Source>Female</Source>
						<Receiver>Female</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Male --&gt; Male</Description>
						<Order>100</Order>
						<Source>Male</Source>
						<Receiver>Male</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ProductsAndServicesTypes</Code>
				<Description>Enum: Types ProductsAndServices</Description>
				<Order>200</Order>
				<Source>EnumRef.ProductsAndServicesTypes</Source>
				<Receiver>EnumRef.ProductsAndServicesTypes</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Service --&gt; Service</Description>
						<Order>50</Order>
						<Source>Service</Source>
						<Receiver>Service</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>InventoryItem --&gt; Product</Description>
						<Order>100</Order>
						<Source>InventoryItem</Source>
						<Receiver>Product</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>WorkKind --&gt; Service</Description>
						<Order>150</Order>
						<Source>WorkKind</Source>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Operation --&gt; Service</Description>
						<Order>200</Order>
						<Source>Operation</Source>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>Work --&gt; Service</Description>
						<Order>250</Order>
						<Source>Work</Source>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>DeleteExpense --&gt;</Description>
						<Order>300</Order>
						<Source>DeleteExpense</Source>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>LicenseKindsOnAlcoholicProducts</Code>
				<Description>Enum: Kinds licenses alcohol products</Description>
				<Order>250</Order>
				<Source>EnumRef.LicenseKindsOnAlcoholicProducts</Source>
				<Receiver>EnumRef.LicenseKindsOnAlcoholicProducts</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>AlcoholicProducts --&gt; AlcoholicProducts</Description>
						<Order>50</Order>
						<Source>AlcoholicProducts</Source>
						<Receiver>AlcoholicProducts</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Beer --&gt; Beer</Description>
						<Order>100</Order>
						<Source>Beer</Source>
						<Receiver>Beer</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>AlcoholContainingNonFoodProducts --&gt; Alcohol-containing</Description>
						<Order>150</Order>
						<Source>AlcoholContainingNonFoodProducts</Source>
						<Receiver>AlcoholContainingNonFoodProducts</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>AlcoholContainingFoodProducts --&gt; Alcohol-containing</Description>
						<Order>200</Order>
						<Source>AlcoholContainingFoodProducts</Source>
						<Receiver>AlcoholContainingFoodProducts</Receiver>
					</Value>
				</Values>
			</Rule>
		</Group>
		<Group>
			<Code>Plans kinds characteristics</Code>
			<Description>Plans kinds characteristics</Description>
			<Order>150</Order>
			<Rule>
				<Code>AdditionalAttributesAndInformation</Code>
				<Description>Plan kinds characteristics: Additional attributes and information</Description>
				<Order>50</Order>
				<AfterImport>If ObjectParameters &lt;&gt; Undefined Then
	ArrayOfTypesAtRowIns = ObjectParameters.Get("Type");
	If ArrayOfTypesAtRowIns &lt;&gt; Undefined Then
		TypeDescriptionArray = ValueFromStringInternal(ArrayOfTypesAtRowIns);
		TypeArray = New Array;
		For Each DescriptionType IN TypeDescriptionArray Do
			TypeArray.Add(Type(DescriptionType));
		EndDo;
		If TypeArray.Count() = 0 Then
			TypeArray.Add(Type("String"));
		EndIf;
Object.ValueType = New TypeDescription(TypeArray);
	EndIf;
EndIf;
Object.DataExchange.Load = False;
Object.Write();
If ValueIsFilled(Object.PropertySet) Then
	AddToSet = Object.PropertySet;
	PropertiesSetObject = AddToSet.GetObject();
	If Object.ThisIsAdditionalInformation Then
	TabularSection = PropertiesSetObject.AdditionalInformation;
	Else
	TabularSection = PropertiesSetObject.AdditionalAttributes;
	EndIf;
	FoundString = TabularSection.Find(Object.Ref, "Property");
	If FoundString = Undefined Then
		NewRow = TabularSection.Add();
		NewRow.Property = Object.Ref;
		PropertiesSetObject.Write();
	EndIf;
EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation</Source>
				<Receiver>ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation</Receiver>
				<Properties>
					<Property Search="true">
						<Code>11</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>16</Code>
						<Description>ThisIsAdditionalInformation --&gt; ThisIsAdditionalInformation</Description>
						<Order>100</Order>
						<Source Name="ThisIsAdditionalInformation" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="ThisIsAdditionalInformation" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Comment --&gt; Comment</Description>
						<Order>150</Order>
						<Source Name="Comment" Kind="Attribute" Type="String"/>
						<Receiver Name="Comment" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>MultilineTextBox --&gt; MultilineTextBox</Description>
						<Order>200</Order>
						<Source Name="MultilineTextBox" Kind="Attribute" Type="Number"/>
						<Receiver Name="MultilineTextBox" Kind="Attribute" Type="Number"/>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>ToolTip --&gt; ToolTip</Description>
						<Order>250</Order>
						<Source Name="ToolTip" Kind="Attribute" Type="String"/>
						<Receiver Name="ToolTip" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>300</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>25</Code>
						<Description>FillObligatory --&gt; FillObligatory</Description>
						<Order>350</Order>
						<Source Name="FillObligatory" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="FillObligatory" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>26</Code>
						<Description>Title --&gt; Title</Description>
						<Order>400</Order>
						<Source Name="Title" Kind="Attribute" Type="String"/>
						<Receiver Name="Title" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>28</Code>
						<Description>PropertySet --&gt; PropertySet</Description>
						<Order>450</Order>
						<Source Name="PropertySet" Kind="Attribute" Type="CatalogRef.AdditionalAttributesAndInformationSets"/>
						<Receiver Name="PropertySet" Kind="Attribute" Type="CatalogRef.AdditionalAttributesAndInformationSets"/>
						<ConversionRuleCode>AdditionalAttributesAndInformationSets           </ConversionRuleCode>
					</Property>
					<Property>
						<Code>27</Code>
						<Description>--&gt; Type</Description>
						<Order>500</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="" Kind=""/>
						<ParameterForTransferName>Type</ParameterForTransferName>
						<BeforeExport>TypeDescriptionArray = New Array;
MapTypes = New Map;
MapTypes.Insert(Type("Number"), "Number");
MapTypes.Insert(Type("String"), "String");
MapTypes.Insert(Type("Boolean"), "Boolean");
MapTypes.Insert(Type("Date"), "Date");
MapTypes.Insert(Type("CatalogRef.ObjectsPropertiesValues"), "CatalogRef.ObjectsPropertiesValues");
//MapTypes.Insert(Type("CatalogRef.ObjectsPropertiesValuesHierarchy"), "CatalogRef.ObjectsPropertiesValuesHierarchy");
MapTypes.Insert(Type("CatalogRef.Users"), "CatalogRef.Users");

For Each KeyAndValue IN MapTypes Do
	If Source.ValueType.ContainsType(KeyAndValue.Key) Then
		TypeDescriptionArray.Add(KeyAndValue.Value);
	EndIf;
EndDo;
Value = ValueToStringInternal(TypeDescriptionArray);</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
		</Group>
		<Group>
			<Code>Documents</Code>
			<Description>Documents</Description>
			<Order>200</Order>
			<Rule>
				<Code>ProductTransfer</Code>
				<Description>Document: Move inventories</Description>
				<Order>50</Order>
				<AfterImport>If Not Object.ShopSender.IsEmpty() Then
	Attributes = CommonUse.ObjectAttributesValues(Object.ShopSender, "ManagingSystemWarehouse, WarehouseReceipts");
	If Attributes.ManagingSystemWarehouse = True Then
		Object.SourceWarehouse = Catalogs.Warehouses.EmptyRef();
	ElsIf Object.SourceWarehouse.IsEmpty() Then
		Object.SourceWarehouse = Attributes.WarehouseReceipts;
	Else
		AttributeShop = CommonUse.ObjectAttributeValue(Object.SourceWarehouse, "Shop");
		If AttributeShop &lt;&gt; Object.ShopSender Then
			Object.SourceWarehouse = Catalogs.Warehouses.EmptyRef();
		EndIf;
	EndIf;
EndIf;
If Not Object.ShopRecipient.IsEmpty() Then

	Attributes = CommonUse.ObjectAttributesValues(Object.ShopRecipient, "ManagingSystemWarehouse, WarehouseReceipts");
	If Attributes.ManagingSystemWarehouse = True Then
		Object.WarehouseRecipient = Catalogs.Warehouses.EmptyRef();
	ElsIf Object.WarehouseRecipient.IsEmpty() Then
		Object.WarehouseRecipient = Attributes.WarehouseReceipts;
	Else
		AttributeShop = CommonUse.ObjectAttributeValue(Object.WarehouseRecipient, "Shop");
		If AttributeShop &lt;&gt; Object.ShopRecipient Then
			Object.WarehouseRecipient = Catalogs.Warehouses.EmptyRef();
		EndIf;
	EndIf;
EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>DocumentRef.InventoryTransfer</Source>
				<Receiver>DocumentRef.ProductTransfer</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Date --&gt; Date</Description>
						<Order>50</Order>
						<Source Name="Date" Kind="Property" Type="Date"/>
						<Receiver Name="Date" Kind="Property" Type="Date"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>BasisDocument --&gt; BasisDocument</Description>
						<Order>100</Order>
						<Source Name="BasisDocument" Kind="Attribute"/>
						<Receiver Name="BasisDocument" Kind="Attribute"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Comment --&gt; Comment</Description>
						<Order>150</Order>
						<Source Name="Comment" Kind="Attribute" Type="String"/>
						<Receiver Name="Comment" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>Number --&gt; Number</Description>
						<Order>200</Order>
						<Source Name="Number" Kind="Property" Type="String"/>
						<Receiver Name="Number" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Company --&gt; Company</Description>
						<Order>250</Order>
						<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
						<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
						<ConversionRuleCode>Companies                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>300</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>Posted --&gt; Posted</Description>
						<Order>350</Order>
						<Source Name="Posted" Kind="Property" Type="Boolean"/>
						<Receiver Name="Posted" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Author --&gt; Responsible</Description>
						<Order>400</Order>
						<Source Name="Author" Kind="Attribute" Type="CatalogRef.Users"/>
						<Receiver Name="Responsible" Kind="Attribute" Type="CatalogRef.Users"/>
						<ConversionRuleCode>Users                                      </ConversionRuleCode>
					</Property>
					<Property>
						<Code>14</Code>
						<Description>StructuralUnit --&gt; ShopSender</Description>
						<Order>450</Order>
						<Source Name="StructuralUnit" Kind="Attribute" Type="CatalogRef.StructuralUnits"/>
						<Receiver Name="ShopSender" Kind="Attribute" Type="CatalogRef.Shops"/>
						<ConversionRuleCode>Shops                                          </ConversionRuleCode>
					</Property>
					<Property>
						<Code>15</Code>
						<Description>StructuralUnitPayee --&gt; ShopRecipient</Description>
						<Order>500</Order>
						<Source Name="StructuralUnitPayee" Kind="Attribute" Type="CatalogRef.StructuralUnits"/>
						<Receiver Name="ShopRecipient" Kind="Attribute" Type="CatalogRef.Shops"/>
						<ConversionRuleCode>Shops                                          </ConversionRuleCode>
					</Property>
					<Group>
						<Code>9</Code>
						<Description>Inventory --&gt; Products</Description>
						<Order>550</Order>
						<Source Name="Inventory" Kind="TabularSection"/>
						<Receiver Name="Products" Kind="TabularSection"/>
						<Property>
							<Code>10</Code>
							<Description>Count --&gt; Count</Description>
							<Order>50</Order>
							<Source Name="Count" Kind="Attribute" Type="Number"/>
							<Receiver Name="Count" Kind="Attribute" Type="Number"/>
							<BeforeExport>If TypeOf(CollectionObject.MeasurementUnit) = Type("CatalogRef.UOM") Then
	Factor = CommonUse.ObjectAttributeValue(CollectionObject.MeasurementUnit,"Factor");
	Value = CollectionObject.Count * Factor;
Else
	Value = CollectionObject.Count;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>ProductsAndServices --&gt; ProductsAndServices</Description>
							<Order>100</Order>
							<Source Name="ProductsAndServices" Kind="Attribute" Type="CatalogRef.ProductsAndServices"/>
							<Receiver Name="ProductsAndServices" Kind="Attribute" Type="CatalogRef.ProductsAndServices"/>
							<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>Amount --&gt; Amount</Description>
							<Order>150</Order>
							<Source Name="Amount" Kind="Attribute" Type="Number"/>
							<Receiver Name="Amount" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Count --&gt; PackingQuantity</Description>
							<Order>250</Order>
							<Source Name="Count" Kind="Attribute" Type="Number"/>
							<Receiver Name="PackingQuantity" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>Characteristic --&gt; Characteristic</Description>
							<Order>300</Order>
							<Source Name="Characteristic" Kind="Attribute" Type="CatalogRef.ProductsAndServicesCharacteristics"/>
							<Receiver Name="Characteristic" Kind="Attribute" Type="CatalogRef.ProductsAndServicesCharacteristics"/>
							<ConversionRuleCode>ProductsAndServicesCharacteristics                        </ConversionRuleCode>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>MeasurementUnit --&gt; Package</Description>
							<Order>350</Order>
							<Source Name="MeasurementUnit" Kind="Attribute"/>
							<Receiver Name="Package" Kind="Attribute" Type="CatalogRef.ProductsAndServicesPacking"/>
							<ConversionRuleCode>ProductsAndServicesPacking                              </ConversionRuleCode>
						</Property>
					</Group>
				</Properties>
				<Values/>
			</Rule>
		</Group>
		<Group>
			<Code>Registers information</Code>
			<Description>Registers information</Description>
			<Order>250</Order>
			<Rule>
				<Code>AdditionalInformation</Code>
				<Description>Register information: Additional information</Description>
				<Order>50</Order>
				<DontRememberExported>true</DontRememberExported>
				<Source>InformationRegisterRecord.AdditionalInformation</Source>
				<Receiver>InformationRegisterRecord.AdditionalInformation</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Active --&gt; Active</Description>
						<Order>50</Order>
						<Source Name="Active" Kind="Property" Type="Boolean"/>
						<Receiver Name="Active" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Value --&gt; Value</Description>
						<Order>100</Order>
						<Source Name="Value" Kind="Resource"/>
						<Receiver Name="Value" Kind="Resource"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Object --&gt; Object</Description>
						<Order>150</Order>
						<Source Name="Object" Kind="Dimension"/>
						<Receiver Name="Object" Kind="Dimension"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Property --&gt; Property</Description>
						<Order>200</Order>
						<Source Name="Property" Kind="Dimension" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
						<Receiver Name="Property" Kind="Dimension" Type="ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation"/>
						<ConversionRuleCode>AdditionalAttributesAndInformation                  </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Barcodes</Code>
				<Description>Register information: Barcodes ProductsAndServices</Description>
				<Order>100</Order>
				<DontRememberExported>true</DontRememberExported>
				<Source>InformationRegisterRecord.ProductsAndServicesBarcodes</Source>
				<Receiver>InformationRegisterRecord.Barcodes</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Barcode --&gt; Barcode</Description>
						<Order>50</Order>
						<Source Name="Barcode" Kind="Dimension" Type="String"/>
						<Receiver Name="Barcode" Kind="Dimension" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Active --&gt; Active</Description>
						<Order>100</Order>
						<Source Name="Active" Kind="Property" Type="Boolean"/>
						<Receiver Name="Active" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>ProductsAndServices --&gt; Owner</Description>
						<Order>150</Order>
						<Source Name="ProductsAndServices" Kind="Resource" Type="CatalogRef.ProductsAndServices"/>
						<Receiver Name="Owner" Kind="Dimension"/>
						<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Characteristic --&gt; Characteristic</Description>
						<Order>200</Order>
						<Source Name="Characteristic" Kind="Resource" Type="CatalogRef.ProductsAndServicesCharacteristics"/>
						<Receiver Name="Characteristic" Kind="Dimension" Type="CatalogRef.ProductsAndServicesCharacteristics"/>
						<ConversionRuleCode>ProductsAndServicesCharacteristics                        </ConversionRuleCode>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>MeasurementUnit --&gt; Package</Description>
						<Order>250</Order>
						<Source Name="MeasurementUnit" Kind="Resource" Type="CatalogRef.UOM"/>
						<Receiver Name="Package" Kind="Dimension" Type="CatalogRef.ProductsAndServicesPacking"/>
						<ConversionRuleCode>ProductsAndServicesPacking                              </ConversionRuleCode>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>--&gt; BarCodeType</Description>
						<Order>300</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="BarCodeType" Kind="Dimension" Type="ChartOfCharacteristicTypesRef.BarcodesTypes"/>
						<BeforeExport>Value = "EAN13";</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
		</Group>
	</ObjectConversionRules>
	<DataUnloadRules>
		<Group Disable="false">
			<Code>Catalogs</Code>
			<Description>Catalogs</Description>
			<Order>50</Order>
			<Rule Disable="false">
				<Code>ContactInformationTypes</Code>
				<Description>ContactInformationTypes</Description>
				<Order>50</Order>
				<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ContactInformationTypes</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>UOMClassifier</Code>
				<Description>UOMClassifier</Description>
				<Order>100</Order>
				<ConversionRuleCode>BasicUOM                           </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.UOMClassifier</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ProductsAndServices</Code>
				<Description>ProductsAndServices</Description>
				<Order>150</Order>
				<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ProductsAndServices</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Companies</Code>
				<Description>Companies</Description>
				<Order>300</Order>
				<ConversionRuleCode>Companies                                       </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Companies</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>StructuralUnits</Code>
				<Description>StructuralUnits</Description>
				<Order>350</Order>
				<ConversionRuleCode>Shops                                          </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.StructuralUnits</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>AdditionalAttributesAndInformationSets</Code>
				<Description>AdditionalAttributesAndInformationSets</Description>
				<Order>400</Order>
				<ConversionRuleCode>AdditionalAttributesAndInformationSets           </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.AdditionalAttributesAndInformationSets</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ObjectsPropertiesValues</Code>
				<Description>ObjectsPropertiesValues</Description>
				<Order>450</Order>
				<ConversionRuleCode>ObjectsPropertiesValues                           </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ObjectsPropertiesValues</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ProductsAndServicesCategories</Code>
				<Description>ProductsAndServicesCategories</Description>
				<Order>550</Order>
				<ConversionRuleCode>ProductsAndServicesCategories_ProductsAndServicesKinds             </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ProductsAndServicesCategories</SelectionObject>
				<BeforeObjectExport>OutgoingData = New Structure("EnterAccountingByCharacteristics, ProductsAndServicesTypes");
Queries.ProductsAndServicesCategoriesExportVariants.SetParameter("ProductsAndServicesCategory",Object.Ref);
Result = Queries.ProductsAndServicesCategoriesExportVariants.Execute();
Selection = Result.Select();
Selection.Next();
CharacteristicsQuantity = Selection.CharacteristicsQuantity;
CharacteristicsValue = CharacteristicsQuantity&lt;&gt;0 AND Selection.UseCharacteristics;

TypeCount = Selection.TypeCount;

If TypeCount&lt;&gt;0 Then
	TypesValues = Selection.ProductsAndServicesType;
Else
	TypesValues =Enums.ProductsAndServicesTypes.InventoryItem;
EndIf;
If CharacteristicsQuantity &lt;&gt; 2 AND TypeCount &lt;&gt; 2 Then
	OutgoingData.EnterAccountingByFeatures = CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = TypesValues;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
ElsIf CharacteristicsQuantity &lt;&gt; 2 AND TypeCount = 2 Then
	OutgoingData.EnterAccountingByFeatures =CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = Enums.ProductsAndServicesTypes.InventoryItem;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
	OutgoingData.EnterAccountingByFeatures = CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = Enums.ProductsAndServicesTypes.Service;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
ElsIf CharacteristicsQuantity = 2 AND TypeCount &lt;&gt; 2 Then
	OutgoingData.EnterAccountingByFeatures =CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = TypesValues;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
	OutgoingData.EnterAccountingByFeatures =Not CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = TypesValues;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
ElsIf CharacteristicsQuantity = 2 AND TypeCount = 2 Then
	OutgoingData.EnterAccountingByFeatures =CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = Enums.ProductsAndServicesTypes.Service;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
	OutgoingData.EnterAccountingByFeatures =Not CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = Enums.ProductsAndServicesTypes.Service;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
	OutgoingData.EnterAccountingByFeatures =CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = Enums.ProductsAndServicesTypes.InventoryItem;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
	OutgoingData.EnterAccountingByFeatures =Not CharacteristicsValue;
	OutgoingData.ProductsAndServicesTypes = Enums.ProductsAndServicesTypes.InventoryItem;
	DumpByRule(Object,,OutgoingData,,"ProductsAndServicesCategories_ProductsAndServicesKinds");
EndIf;
Cancel = True;</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>WorldCountries</Code>
				<Description>WorldCountries</Description>
				<Order>600</Order>
				<ConversionRuleCode>WorldCountries                                        </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.WorldCountries</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Users</Code>
				<Description>Users</Description>
				<Order>650</Order>
				<ConversionRuleCode>Users                                      </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Users</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ProductsAndServicesCharacteristics</Code>
				<Description>ProductsAndServicesCharacteristics</Description>
				<Order>700</Order>
				<ConversionRuleCode>ProductsAndServicesCharacteristics                        </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ProductsAndServicesCharacteristics</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ObjectsPropertiesValuesHierarchy</Code>
				<Description>ObjectsPropertiesValuesHierarchy</Description>
				<Order>750</Order>
				<ConversionRuleCode>ObjectsPropertiesValuesHierarchy                   </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ObjectsPropertiesValuesHierarchy</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>AlcoholicProductsVendorLicenses</Code>
				<Description>AlcoholicProductsVendorLicenses</Description>
				<Order>800</Order>
				<ConversionRuleCode>AlcoholicProductsVendorLicenses           </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.AlcoholicProductsVendorLicenses</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>UOM</Code>
				<Description>UOM</Description>
				<Order>850</Order>
				<ConversionRuleCode>ProductsAndServicesPacking                              </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.UOM</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>AlcoholicProductsKinds</Code>
				<Description>AlcoholicProductsKinds</Description>
				<Order>900</Order>
				<ConversionRuleCode>AlcoholicProductsKinds                          </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.AlcoholicProductsKinds</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Counterparties</Code>
				<Description>Counterparties</Description>
				<Order>1000</Order>
				<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Counterparties</SelectionObject>
			</Rule>
		</Group>
		<Group Disable="false">
			<Code>Documents</Code>
			<Description>Documents</Description>
			<Order>100</Order>
			<Rule Disable="false">
				<Code>InventoryTransfer</Code>
				<Description>InventoryTransfer</Description>
				<Order>50</Order>
				<ConversionRuleCode>ProductTransfer                                </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>DocumentRef.InventoryTransfer</SelectionObject>
			</Rule>
		</Group>
		<Group Disable="false">
			<Code>ChartsOfCharacteristicTypes</Code>
			<Description>ChartsOfCharacteristicTypes</Description>
			<Order>150</Order>
			<Rule Disable="false">
				<Code>AdditionalAttributesAndInformation</Code>
				<Description>AdditionalAttributesAndInformation</Description>
				<Order>50</Order>
				<ConversionRuleCode>AdditionalAttributesAndInformation                  </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>ChartOfCharacteristicTypesRef.AdditionalAttributesAndInformation</SelectionObject>
			</Rule>
		</Group>
		<Group Disable="false">
			<Code>InformationRegisters</Code>
			<Description>InformationRegisters</Description>
			<Order>200</Order>
			<Rule Disable="false">
				<Code>AdditionalInformation</Code>
				<Description>AdditionalInformation</Description>
				<Order>50</Order>
				<ConversionRuleCode>AdditionalInformation                            </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>InformationRegisterRecord.AdditionalInformation</SelectionObject>
				<BeforeObjectExport>FilterValue = Object.Filter.Object.Value;
If TypeOf(FilterValue) = Type("CatalogRef.ProductsAndServices") Then
	ProductsAndServicesType = CommonUse.ObjectAttributeValue(FilterValue,"ProductsAndServicesType");
	Cancel = ProductsAndServicesType &lt;&gt; Enums.ProductsAndServicesTypes.InventoryItem AND ProductsAndServicesType &lt;&gt; Enums.ProductsAndServicesTypes.Service;
ElsIf TypeOf(FilterValue) = Type("CatalogRef.StructuralUnits") Then
	StructuralUnitType = CommonUse.ObjectAttributeValue(FilterValue,"StructuralUnitType");
	Cancel = StructuralUnitType &lt;&gt; Enums.StructuralUnitsTypes.Retail;
Else
	Cancel = True;
EndIf;</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>ProductsAndServicesBarcodes</Code>
				<Description>ProductsAndServicesBarcodes</Description>
				<Order>100</Order>
				<ConversionRuleCode>Barcodes                                         </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>InformationRegisterRecord.ProductsAndServicesBarcodes</SelectionObject>
			</Rule>
		</Group>
	</DataUnloadRules>
	<DataClearingRules/>
	<Algorithms/>
	<Queries>
		<Query Name="ProductsAndServicesCategoriesExportVariants" UsedOnImport="false">
			<Text>SELECT
	MIN(ProductsAndServices.ProductsAndServicesType) AS ProductsAndServicesType,
	MIN(ProductsAndServices.UseCharacteristics) AS UseCharacteristics,
	COUNT(DISTINCT ProductsAndServices.UseCharacteristics) AS CharacteristicsQuantity,
	COUNT(DISTINCT ProductsAndServices.ProductsAndServicesType) AS TypeCount
IN
	Catalog.ProductsAndServices AS ProductsAndServices
WHERE
	ProductsAndServices.ProductsAndServicesCategory = &amp;ProductsAndServicesCategory
	AND Not ProductsAndServices.IsFolder
	AND (ProductsAndServices.ProductsAndServicesType = VALUE(Enum.ProductsAndServicesTypes.InventoryItem)
			OR ProductsAndServices.ProductsAndServicesType = VALUE(Enum.ProductsAndServicesTypes.Service))</Text>
		</Query>
	</Queries>
</ExchangeRules>