<ExchangeRules>
	<FormatVersion CompatibilityMode="CompatibilityModeWithSSL20">2.01</FormatVersion>
	<ID>d55fa40f-03a5-4b90-90b8-9e60e4097d02    </ID>
	<Description>EnterpriseAccounting --&gt; SmallBusiness</Description>
	<CreationDateTime>2014-12-05T10:11:48</CreationDateTime>
	<Source PlatformVersion="8.0" ConfigurationVersion="3.0.37.28" ConfigurationSynonym="Company accounting, edition 3.0">EnterpriseAccounting</Source>
	<Receiver PlatformVersion="8.0" ConfigurationVersion="1.5.3.13" ConfigurationSynonym="Small Business, version 1.5">SmallBusiness</Receiver>
	<AfterGetExchangeNodeDetails>Parameters.Insert("ExchangeNodeForDataImport", ExchangeNodeForDataImport);</AfterGetExchangeNodeDetails>
	<BeforeDataImport>// Fill in the default VATRate
Query = New Query;

Query.Text = 
"SELECT
|	VATRates.Ref AS VATRate
|FROM
|	Catalog.VATRates AS VATRates
|WHERE
|	VATRates.Rate = 18
|	AND Not VATRates.NotTaxable
|	AND Not VATRates.Calculated";

Selection = Query.Execute().Select();

VATRateValueDefault = ?(Selection.Next(), Selection.VATRate, Catalogs.VATRates.EmptyRef());
Parameters.Insert("DefaultVATRate", VATRateValueDefault);


// Fill in the default Products and services category
Query.Text = 
"SELECT TOP 1
| ProductsAndServicesCategories.Ref AS ProductsAndServicesCategory
|FROM
| Catalog.ProductsAndServicesCategories AS ProductsAndServicesCategories
|ORDER BY
| ProductsAndServicesCategories.Description";

Selection = Query.Execute().Select();

ProductsAndServicesGroupsDefaultValue = ?(Selection.Next(), Selection.ProductsAndServicesCategory, Catalogs.ProductsAndServicesCategories.MainGroup);
Parameters.Insert("ProductsAndServicesCategoryDefault", ProductsAndServicesGroupsDefaultValue);</BeforeDataImport>
	<OnGetDeletionInfo>ObjectMetadata = Object.Metadata();

If Metadata.Catalogs.Contains(ObjectMetadata) Then
	
	Cancel  = True;
	
	SetObjectDeletionMark(Object, True, "Catalog");
	
ElsIf Metadata.Documents.Contains(ObjectMetadata) Then
	
	Cancel  = True;
	
	If Object.Posted Then
		
		UndoObjectPostingInIB(Object, TypeOf(Object));
		
	EndIf;
	
	If Not Object.Posted Then
		
		SetObjectDeletionMark(Object, True, "Document");
		
	EndIf;
	
ElsIf Metadata.ChartsOfCharacteristicTypes.Contains(ObjectMetadata) Then
	
	Cancel  = True;
	
	SetObjectDeletionMark(Object, True, "ChartOfCharacteristicTypes");
	
EndIf;
</OnGetDeletionInfo>
	<Parameters>
		<Parameter Name="ProductsAndServicesCategoryDefault                   " Description="ProductsAndServicesCategoryDefault" UsedOnImport="false" SetInDialog="false" ValueType="CatalogRef.ProductsAndServicesCategories" PassParameterOnExport="false" ConversionRule="ProductsAndServicesCategories                              "/>
		<Parameter Name="ServiceForAddCostsReceipt                   " Description="ServiceForAddCostsReceipt" UsedOnImport="false" SetInDialog="false" ValueType="CatalogRef.ProductsAndServices" PassParameterOnExport="false" ConversionRule="ProductsAndServices                                      "/>
	</Parameters>
	<DataProcessors/>
	<ObjectConversionRules>
		<Group>
			<Code>Enums</Code>
			<Description>Enums</Description>
			<Order>50</Order>
			<Rule>
				<Code>Periodicity</Code>
				<Description>Enum: Periodicity</Description>
				<Order>50</Order>
				<Source>EnumRef.Periodicity</Source>
				<Receiver>EnumRef.Periodicity</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Year --&gt; Year</Description>
						<Order>50</Order>
						<Source>Year</Source>
						<Receiver>Year</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Day --&gt; Day</Description>
						<Order>100</Order>
						<Source>Day</Source>
						<Receiver>Day</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>Quarter --&gt; Quarter</Description>
						<Order>150</Order>
						<Source>Quarter</Source>
						<Receiver>Quarter</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Month --&gt; Month</Description>
						<Order>200</Order>
						<Source>Month</Source>
						<Receiver>Month</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>Week --&gt; Week</Description>
						<Order>250</Order>
						<Source>Week</Source>
						<Receiver>Week</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>RoundingMethods</Code>
				<Description>Enum: Methods rounding</Description>
				<Order>100</Order>
				<Source>EnumRef.RoundingMethods</Source>
				<Receiver>EnumRef.RoundingMethods</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Round0_01 --&gt; Round0_01</Description>
						<Order>50</Order>
						<Source>Round0_01</Source>
						<Receiver>Round0_01</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Round0_05 --&gt; Round0_05</Description>
						<Order>100</Order>
						<Source>Round0_05</Source>
						<Receiver>Round0_05</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>Round0_1 --&gt; Round0_1</Description>
						<Order>150</Order>
						<Source>Round0_1</Source>
						<Receiver>Round0_1</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Round0_5 --&gt; Round0_5</Description>
						<Order>200</Order>
						<Source>Round0_5</Source>
						<Receiver>Round0_5</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>Round1 --&gt; Round1</Description>
						<Order>250</Order>
						<Source>Round1</Source>
						<Receiver>Round1</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>Round10 --&gt; Round10</Description>
						<Order>300</Order>
						<Source>Round10</Source>
						<Receiver>Round10</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>Round100 --&gt; Round100</Description>
						<Order>350</Order>
						<Source>Round100</Source>
						<Receiver>Round100</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>Round5 --&gt; Round5</Description>
						<Order>400</Order>
						<Source>Round5</Source>
						<Receiver>Round5</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>Round50 --&gt; Round50</Description>
						<Order>450</Order>
						<Source>Round50</Source>
						<Receiver>Round50</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ContactInformationTypes</Code>
				<Description>Enum: Types contact information</Description>
				<Order>250</Order>
				<Source>EnumRef.ContactInformationTypes</Source>
				<Receiver>EnumRef.ContactInformationTypes</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Address --&gt; Address</Description>
						<Order>50</Order>
						<Source>Address</Source>
						<Receiver>Address</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>EmailAddress --&gt; EmailAddress</Description>
						<Order>100</Order>
						<Source>EmailAddress</Source>
						<Receiver>EmailAddress</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>WebPage --&gt; WebPage</Description>
						<Order>150</Order>
						<Source>WebPage</Source>
						<Receiver>WebPage</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Another --&gt; Another</Description>
						<Order>200</Order>
						<Source>Another</Source>
						<Receiver>Another</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>Phone --&gt; Phone</Description>
						<Order>250</Order>
						<Source>Phone</Source>
						<Receiver>Phone</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>Fax --&gt; Fax</Description>
						<Order>300</Order>
						<Source>Fax</Source>
						<Receiver>Fax</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>LegalEntityIndividual</Code>
				<Description>Enum: Legal. / ind. person</Description>
				<Order>300</Order>
				<Source>EnumRef.LegalIndividual</Source>
				<Receiver>EnumRef.LegalEntityIndividual</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Ind --&gt; Ind</Description>
						<Order>50</Order>
						<Source>Individual</Source>
						<Receiver>Ind</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>LegalEntity --&gt; LegalEntity</Description>
						<Order>100</Order>
						<Source>LegalEntity</Source>
						<Receiver>LegalEntity</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>OperationKindsPaymentReceipt</Code>
				<Description>Enum: Kinds operations receipts non cash cash funds</Description>
				<Order>550</Order>
				<Source>EnumRef.OperationKindsOfCashReceipt</Source>
				<Receiver>EnumRef.OperationKindsPaymentReceipt</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>ReturnCashFundsByProvider --&gt; FromVendor</Description>
						<Order>50</Order>
						<Source>ReturnFromVendor</Source>
						<Receiver>FromVendor</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>BuyerPayment --&gt; FromCustomer</Description>
						<Order>100</Order>
						<Source>BuyerPayment</Source>
						<Receiver>FromCustomer</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>OtherSettlementsWithCounterparties --&gt; ToIncome</Description>
						<Order>150</Order>
						<Source>OtherSettlementsWithCounterparties</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>CashEncashment --&gt; ToIncome</Description>
						<Order>200</Order>
						<Source>Encashment</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>ReceiptsFromForeignCurrencySale --&gt; ToIncome</Description>
						<Order>250</Order>
						<Source>ReceiptsFromForeignCurrencySale</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>SalesReceiptsOnPaymentCardsAndBankLoa</Description>
						<Order>300</Order>
						<Source>SalesReceiptsOnPaymentCardsAndBankLoans</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>PurchaseOfForeignCurrencies --&gt; ToIncome</Description>
						<Order>350</Order>
						<Source>PurchaseOfForeignCurrencies</Source>
						<Receiver>CurrencyPurchase</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>OtherNonCashFundsReceipt --&gt; VD</Description>
						<Order>400</Order>
						<Source>OtherReceipt</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>SettlementsByCreditsAndLoans --&gt; ToIncome</Description>
						<Order>450</Order>
						<Source>SettlementsByCreditsAndLoans</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>10</Code>
						<Description>ReturnEmployeeLoan --&gt; Other</Description>
						<Order>500</Order>
						<Source>ReturnEmployeeLoan</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>11</Code>
						<Description>EntrepreneurPesonalFinances --&gt; Other</Description>
						<Order>550</Order>
						<Source>EntrepreneurPesonalFinances</Source>
						<Receiver>Other</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>OperationKindsPaymentExpense</Code>
				<Description>Enum: Kinds operations outgoing Payment orders</Description>
				<Order>600</Order>
				<Source>EnumRef.OperationCashWithdrawalOfKinds</Source>
				<Receiver>EnumRef.OperationKindsPaymentExpense</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>ReturnCashMeansToCustomer --&gt; ToCustomer</Description>
						<Order>50</Order>
						<Source>ReturnToCustomer</Source>
						<Receiver>ToCustomer</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>VendorsPayment --&gt; Vendor</Description>
						<Order>100</Order>
						<Source>VendorsPayment</Source>
						<Receiver>Vendor</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>TransferToAnotherAccount --&gt; ToExpenses</Description>
						<Order>150</Order>
						<Source>TransferToAnotherAccount</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>TransferCashToAdvanceHolder --&gt; Advance hold</Description>
						<Order>200</Order>
						<Source>EnumerationOfAccountablePerson</Source>
						<Receiver>ToAdvanceHolder</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>TransferSalary --&gt; ToExpenses</Description>
						<Order>250</Order>
						<Source>TransferSalary</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>TaxTransfer --&gt; Taxes</Description>
						<Order>300</Order>
						<Source>TaxTransfer</Source>
						<Receiver>Taxes</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>OtherNonCashFundsWriteoff --&gt; ToExp</Description>
						<Order>350</Order>
						<Source>OtherWriteOff</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>OtherSettlementsWithCounterparties --&gt; ToExpenses</Description>
						<Order>400</Order>
						<Source>OtherSettlementsWithCounterparties</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>SettlementsByCreditsAndLoansWithContractors --&gt; ToExpense</Description>
						<Order>450</Order>
						<Source>SettlementsByCreditsAndLoans</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>10</Code>
						<Description>SalaryTransferToEmployee --&gt; Other</Description>
						<Order>500</Order>
						<Source>SalaryTransferToEmployee</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>11</Code>
						<Description>IssueLoanToEmployee --&gt; Other</Description>
						<Order>550</Order>
						<Source>IssueLoanToEmployee</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>12</Code>
						<Description>DepositorsEnumeration --&gt; Other</Description>
						<Order>600</Order>
						<Source>DepositorsEnumeration</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>13</Code>
						<Description>EntrepreneurPesonalFinances --&gt; Other</Description>
						<Order>650</Order>
						<Source>EntrepreneurPesonalFinances</Source>
						<Receiver>Other</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>OperationKindsCashReceipt</Code>
				<Description>Enum: Kinds operations document "OCR"</Description>
				<Order>650</Order>
				<Source>EnumRef.OCROperationsKinds</Source>
				<Receiver>EnumRef.OperationKindsCashReceipt</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>ReturnCashToAdvanceHolders --&gt; FromAdvanceHold</Description>
						<Order>50</Order>
						<Source>ReturnFromAccountablePerson</Source>
						<Receiver>FromAdvanceHolder</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>ReturnCashFundsByProvider --&gt; FromVendor</Description>
						<Order>100</Order>
						<Source>ReturnFromVendor</Source>
						<Receiver>FromVendor</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>BuyerPayment --&gt; FromCustomer</Description>
						<Order>150</Order>
						<Source>BuyerPayment</Source>
						<Receiver>FromCustomer</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>GetCashFundsInBank --&gt; ToIncome</Description>
						<Order>200</Order>
						<Source>ReceiptOfCashInBank</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>ReceiptOfCashFundsOthers --&gt; ToIncome</Description>
						<Order>250</Order>
						<Source>OtherIncome</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>CashReceiptRetailIncome --&gt; ToIncome</Description>
						<Order>300</Order>
						<Source>RetailIncome</Source>
						<Receiver>RetailIncome</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>SettlementsByCreditsAndLoansWithContractors --&gt; ToIncome</Description>
						<Order>350</Order>
						<Source>SettlementsByCreditsAndLoans</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>ReturnEmployeeLoan --&gt; Other</Description>
						<Order>400</Order>
						<Source>ReturnEmployeeLoan</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>EntrepreneurPesonalFinances --&gt; Other</Description>
						<Order>450</Order>
						<Source>EntrepreneurPesonalFinances</Source>
						<Receiver>Other</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>OperationKindsCashPayment</Code>
				<Description>Enum: Kinds operations document "CPV"</Description>
				<Order>700</Order>
				<Source>EnumRef.OperationKindsRKO</Source>
				<Receiver>EnumRef.OperationKindsCashPayment</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>CashInBank --&gt; ToExpenses</Description>
						<Order>50</Order>
						<Source>CashInBank</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>ReturnCashMeansToCustomer --&gt; ToCustomer</Description>
						<Order>100</Order>
						<Source>ReturnToCustomer</Source>
						<Receiver>ToCustomer</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>IssuanceOfCashFundsToAdvanceHolder --&gt; ToAdvanceHolder</Description>
						<Order>150</Order>
						<Source>IssuanceToAccountablePerson</Source>
						<Receiver>ToAdvanceHolder</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>DepositorsPayment --&gt; ToExpenses</Description>
						<Order>200</Order>
						<Source>DepositorsPayment</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>SalaryPayStatements --&gt; Salary</Description>
						<Order>250</Order>
						<Source>SalaryPayStatements</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>SalaryPayEmployee --&gt; ToExpenses</Description>
						<Order>300</Order>
						<Source>SalaryPayEmployee</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>CashEncashment --&gt; ToExpenses</Description>
						<Order>350</Order>
						<Source>Encashment</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>VendorsPayment --&gt; Vendor</Description>
						<Order>400</Order>
						<Source>VendorsPayment</Source>
						<Receiver>Vendor</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>CashExpenseOthers --&gt; ToExpenses</Description>
						<Order>450</Order>
						<Source>OtherExpense</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>10</Code>
						<Description>SettlementsByCreditsAndLoansWithContractors --&gt; ToExpense</Description>
						<Order>500</Order>
						<Source>SettlementsByCreditsAndLoans</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>11</Code>
						<Description>IssueLoanToEmployee --&gt; Other</Description>
						<Order>550</Order>
						<Source>IssueLoanToEmployee</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>12</Code>
						<Description>TaxPayment --&gt; Other</Description>
						<Order>600</Order>
						<Source>TaxPayment</Source>
						<Receiver>Taxes</Receiver>
					</Value>
					<Value>
						<Code>13</Code>
						<Description>EntrepreneurPesonalFinances --&gt; Other</Description>
						<Order>650</Order>
						<Source>EntrepreneurPesonalFinances</Source>
						<Receiver>Other</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>IndividualGender</Code>
				<Description>Enum: Gender actual Bodies</Description>
				<Order>750</Order>
				<Source>EnumRef.IndividualGender</Source>
				<Receiver>EnumRef.IndividualGender</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Female --&gt; Female</Description>
						<Order>50</Order>
						<Source>Female</Source>
						<Receiver>Female</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Male --&gt; Male</Description>
						<Order>100</Order>
						<Source>Male</Source>
						<Receiver>Male</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ContractKinds</Code>
				<Description>Enum: Kinds contracts counterparties</Description>
				<Order>800</Order>
				<Source>EnumRef.ContractKindsCounterparties</Source>
				<Receiver>EnumRef.ContractKinds</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Other --&gt; Other</Description>
						<Order>50</Order>
						<Source>Other</Source>
						<Receiver>Other</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>WithAgent --&gt; WithAgent</Description>
						<Order>100</Order>
						<Source>WithAgent</Source>
						<Receiver>WithAgent</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>FromPrincipal --&gt; FromPrincipal</Description>
						<Order>150</Order>
						<Source>FromPrincipal</Source>
						<Receiver>FromPrincipal</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>WithCustomer --&gt; WithCustomer</Description>
						<Order>200</Order>
						<Source>WithCustomer</Source>
						<Receiver>WithCustomer</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>WithVendor --&gt; WithVendor</Description>
						<Order>250</Order>
						<Source>WithVendor</Source>
						<Receiver>WithVendor</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>WithAgentForPurchase --&gt; WithAgent</Description>
						<Order>300</Order>
						<Source>WithAgentForPurchase</Source>
						<Receiver>WithAgent</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>FromCustomerToPurchase --&gt; FromPrincipal</Description>
						<Order>350</Order>
						<Source>FromCustomerToPurchase</Source>
						<Receiver>FromPrincipal</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>BudgetTransferKinds</Code>
				<Description>Enum: Kinds enumerations in budget</Description>
				<Order>1050</Order>
				<Source>EnumRef.BudgetTransferKinds</Source>
				<Receiver>EnumRef.BudgetTransferKinds</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>OtherPayment --&gt; OtherPayment</Description>
						<Order>50</Order>
						<Source>OtherPayment</Source>
						<Receiver>OtherPayment</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>TaxPayment --&gt; TaxPayment</Description>
						<Order>100</Order>
						<Source>TaxPayment</Source>
						<Receiver>TaxPayment</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>CustomsPayment --&gt; CustomsPayment</Description>
						<Order>150</Order>
						<Source>CustomsPayment</Source>
						<Receiver>CustomsPayment</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>StructuralUnitsTypes</Code>
				<Description>Enum: Kinds warehouses</Description>
				<Order>1100</Order>
				<Source>EnumRef.TypesWarehouses</Source>
				<Receiver>EnumRef.StructuralUnitsTypes</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>NotAutomateTradingPoint --&gt; RetailAmmount</Description>
						<Order>50</Order>
						<Source>NotAutomateTradingPoint</Source>
						<Receiver>RetailAccrualAccounting</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Wholesale --&gt; Warehouse</Description>
						<Order>100</Order>
						<Source>WholesaleWarehouse</Source>
						<Receiver>Warehouse</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>Retail --&gt; Retail</Description>
						<Order>150</Order>
						<Source>RetailShop</Source>
						<Receiver>Retail</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>LicenseKindsOnAlcoholicProducts</Code>
				<Description>Enum: Kinds licenses on sale alcohol</Description>
				<Order>1150</Order>
				<Source>EnumRef.AlcoholSaleLicensesKinds</Source>
				<Receiver>EnumRef.LicenseKindsOnAlcoholicProducts</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>AlcoholicProducts --&gt; AlcoholicProducts</Description>
						<Order>50</Order>
						<Source>AlcoholicProducts</Source>
						<Receiver>AlcoholicProducts</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Beer --&gt; Beer</Description>
						<Order>100</Order>
						<Source>Beer</Source>
						<Receiver>Beer</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>AlcoholContainingNonFoodProducts --&gt; Alcohol-containing</Description>
						<Order>150</Order>
						<Source>AlcoholContainingNonFoodProducts</Source>
						<Receiver>AlcoholContainingNonFoodProducts</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>AlcoholContainingFoodProducts --&gt; Alcohol-containing</Description>
						<Order>200</Order>
						<Source>AlcoholContainingFoodProducts</Source>
						<Receiver>AlcoholContainingFoodProducts</Receiver>
					</Value>
				</Values>
			</Rule>
		</Group>
		<Group>
			<Code>Catalogs</Code>
			<Description>Catalogs</Description>
			<Order>100</Order>
			<Group>
				<Code>Basic Classifiers</Code>
				<Description>Basic Classifiers</Description>
				<Order>50</Order>
				<Rule>
					<Code>Banks</Code>
					<Description>Catalog: Banks</Description>
					<Order>50</Order>
					<Donotreplace>true</Donotreplace>
					<SynchronizeByID>true</SynchronizeByID>
					<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
					<ExchangeObjectPriority>below</ExchangeObjectPriority>
					<Source>CatalogRef.Banks</Source>
					<Receiver>CatalogRef.Banks</Receiver>
					<Properties>
						<Property Search="true">
							<Code>3</Code>
							<Description>Code --&gt; Code</Description>
							<Order>150</Order>
							<Source Name="Code" Kind="Property" Type="String"/>
							<Receiver Name="Code" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Description --&gt; Description</Description>
							<Order>250</Order>
							<Source Name="Description" Kind="Property" Type="String"/>
							<Receiver Name="Description" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Address --&gt; Address</Description>
							<Order>350</Order>
							<Source Name="Address" Kind="Attribute" Type="String"/>
							<Receiver Name="Address" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>City --&gt; City</Description>
							<Order>400</Order>
							<Source Name="City" Kind="Attribute" Type="String"/>
							<Receiver Name="City" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>CorrAccount --&gt; CorrAccount</Description>
							<Order>450</Order>
							<Source Name="CorrAccount" Kind="Attribute" Type="String"/>
							<Receiver Name="CorrAccount" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>PhoneNumbers --&gt; PhoneNumbers</Description>
							<Order>500</Order>
							<Source Name="PhoneNumbers" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumbers" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Parent --&gt; Parent</Description>
							<Order>550</Order>
							<Source Name="Parent" Kind="Property" Type="CatalogRef.Banks"/>
							<Receiver Name="Parent" Kind="Property" Type="CatalogRef.Banks"/>
							<ConversionRuleCode>Banks                                             </ConversionRuleCode>
						</Property>
						<Property Search="true" Required="true">
							<Code>12</Code>
							<Description>IsFolder --&gt; IsFolder</Description>
							<Order>600</Order>
							<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
							<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>Currencies</Code>
					<Description>Catalog: Currencies</Description>
					<Order>100</Order>
					<Donotreplace>true</Donotreplace>
					<SynchronizeByID>true</SynchronizeByID>
					<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
					<ExchangeObjectPriority>below</ExchangeObjectPriority>
					<Source>CatalogRef.Currencies</Source>
					<Receiver>CatalogRef.Currencies</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Code --&gt; Code</Description>
							<Order>50</Order>
							<Source Name="Code" Kind="Property" Type="String"/>
							<Receiver Name="Code" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>2</Code>
							<Description>Description --&gt; Description</Description>
							<Order>100</Order>
							<Source Name="Description" Kind="Property" Type="String"/>
							<Receiver Name="Description" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DescriptionFull --&gt; DescriptionFull</Description>
							<Order>150</Order>
							<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
							<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>WritingParametersInEnglish --&gt; WritingParametersInEnglish</Description>
							<Order>200</Order>
							<Source Name="WritingParametersInEnglish" Kind="Attribute" Type="String"/>
							<Receiver Name="WritingParametersInEnglish" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>250</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>UOMClassifier</Code>
					<Description>Catalog: Classifier units measurements</Description>
					<Order>150</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
					<UseQuickSearchOnImport>true</UseQuickSearchOnImport>
					<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
					<ExchangeObjectPriority>below</ExchangeObjectPriority>
					<Source>CatalogRef.UOMClassifier</Source>
					<Receiver>CatalogRef.UOMClassifier</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Code --&gt; Code</Description>
							<Order>50</Order>
							<Source Name="Code" Kind="Property" Type="String"/>
							<Receiver Name="Code" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>2</Code>
							<Description>Description --&gt; Description</Description>
							<Order>100</Order>
							<Source Name="Description" Kind="Property" Type="String"/>
							<Receiver Name="Description" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DescriptionFull --&gt; DescriptionFull</Description>
							<Order>150</Order>
							<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
							<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>200</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>WorldCountries</Code>
					<Description>Catalog: Countries world</Description>
					<Order>200</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
					<UseQuickSearchOnImport>true</UseQuickSearchOnImport>
					<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
					<Source>CatalogRef.WorldCountries</Source>
					<Receiver>CatalogRef.WorldCountries</Receiver>
					<Properties>
						<Property Search="true">
							<Code>4</Code>
							<Description>Code --&gt; Code</Description>
							<Order>50</Order>
							<Source Name="Code" Kind="Property" Type="String"/>
							<Receiver Name="Code" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>1</Code>
							<Description>AlphaCode2 --&gt; AlphaCode2</Description>
							<Order>100</Order>
							<Source Name="AlphaCode2" Kind="Attribute" Type="String"/>
							<Receiver Name="AlphaCode2" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>2</Code>
							<Description>AlphaCode3 --&gt; AlphaCode3</Description>
							<Order>150</Order>
							<Source Name="AlphaCode3" Kind="Attribute" Type="String"/>
							<Receiver Name="AlphaCode3" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>DescriptionFull --&gt; DescriptionFull</Description>
							<Order>200</Order>
							<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
							<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Description --&gt; Description</Description>
							<Order>250</Order>
							<Source Name="Description" Kind="Property" Type="String"/>
							<Receiver Name="Description" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
			</Group>
			<Rule>
				<Code>Companies</Code>
				<Description>Catalog: Companies</Description>
				<Order>100</Order>
				<AfterImport>Object.DefaultVATRate = Parameters.DefaultVATRate;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.Companies</Source>
				<Receiver>CatalogRef.Companies</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>TIN --&gt; TIN</Description>
						<Order>150</Order>
						<Source Name="TIN" Kind="Attribute" Type="String"/>
						<Receiver Name="TIN" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>CodeByOKATO --&gt; CodeByOKATO</Description>
						<Order>200</Order>
						<Source Name="CodeByOKATO" Kind="Attribute" Type="String"/>
						<Receiver Name="CodeByOKATO" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>CodeByOKPO --&gt; CodeByOKPO</Description>
						<Order>250</Order>
						<Source Name="CodeByOKPO" Kind="Attribute" Type="String"/>
						<Receiver Name="CodeByOKPO" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>KPP --&gt; KPP</Description>
						<Order>300</Order>
						<Source Name="KPP" Kind="Attribute" Type="String"/>
						<Receiver Name="KPP" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>350</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Prefix --&gt; Prefix</Description>
						<Order>400</Order>
						<Source Name="Prefix" Kind="Attribute" Type="String"/>
						<Receiver Name="Prefix" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>LegalIndividual --&gt; LegalEntityIndividual</Description>
						<Order>450</Order>
						<Source Name="LegalIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<Receiver Name="LegalEntityIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<ConversionRuleCode>LegalEntityIndividual                                         </ConversionRuleCode>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>500</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>AnIndividualEntrepreneur --&gt; Individual</Description>
						<Order>550</Order>
						<Source Name="AnIndividualEntrepreneur" Kind="Attribute" Type="CatalogRef.Individuals"/>
						<Receiver Name="Individual" Kind="Attribute" Type="CatalogRef.Individuals"/>
						<ConversionRuleCode>Individuals                                    </ConversionRuleCode>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>DefaultBankAccount --&gt; BankAccountByDefault</Description>
						<Order>600</Order>
						<Source Name="DefaultBankAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
						<Receiver Name="BankAccountByDefault" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
						<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
					</Property>
					<Property>
						<Code>26</Code>
						<Description>CertificateIssueDate --&gt; CertificateIssueDate</Description>
						<Order>650</Order>
						<Source Name="CertificateIssueDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="CertificateIssueDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>27</Code>
						<Description>CertificateSeriesNumber --&gt; CertificateSeriesNumber</Description>
						<Order>700</Order>
						<Source Name="CertificateSeriesNumber" Kind="Attribute" Type="String"/>
						<Receiver Name="CertificateSeriesNumber" Kind="Attribute" Type="String"/>
					</Property>
					<Group>
						<Code>14</Code>
						<Description>ContactInformation --&gt; ContactInformation</Description>
						<Order>750</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="ContactInformation" Kind="TabularSection"/>
						<BeforeProcessExport>If Source.IsFolder = True Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
						<Property>
							<Code>28</Code>
							<Description>EMail_Address --&gt; EMail_Address</Description>
							<Order>50</Order>
							<Source Name="EMail_Address" Kind="Attribute" Type="String"/>
							<Receiver Name="EMail_Address" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>29</Code>
							<Description>Kind --&gt; Kind</Description>
							<Order>100</Order>
							<Source Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<Receiver Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>30</Code>
							<Description>City --&gt; City</Description>
							<Order>150</Order>
							<Source Name="City" Kind="Attribute" Type="String"/>
							<Receiver Name="City" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>31</Code>
							<Description>ServerDomainName --&gt; ServerDomainName</Description>
							<Order>200</Order>
							<Source Name="ServerDomainName" Kind="Attribute" Type="String"/>
							<Receiver Name="ServerDomainName" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>32</Code>
							<Description>FieldsValues --&gt; FieldsValues</Description>
							<Order>250</Order>
							<Source Name="FieldsValues" Kind="Attribute" Type="String"/>
							<Receiver Name="FieldsValues" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>33</Code>
							<Description>PhoneNumber --&gt; PhoneNumber</Description>
							<Order>300</Order>
							<Source Name="PhoneNumber" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumber" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>34</Code>
							<Description>PhoneNumberNoCodes --&gt; PhoneNumberNoCodes</Description>
							<Order>350</Order>
							<Source Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>35</Code>
							<Description>Presentation --&gt; Presentation</Description>
							<Order>400</Order>
							<Source Name="Presentation" Kind="Attribute" Type="String"/>
							<Receiver Name="Presentation" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>36</Code>
							<Description>Region --&gt; Region</Description>
							<Order>450</Order>
							<Source Name="Region" Kind="Attribute" Type="String"/>
							<Receiver Name="Region" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>37</Code>
							<Description>Country --&gt; Country</Description>
							<Order>500</Order>
							<Source Name="Country" Kind="Attribute" Type="String"/>
							<Receiver Name="Country" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>38</Code>
							<Description>Type --&gt; Type</Description>
							<Order>550</Order>
							<Source Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<Receiver Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
					</Group>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>BankAccounts</Code>
				<Description>Catalog: Bank account</Description>
				<Order>150</Order>
				<AfterImport>If Not ObjectFound Then
	Object.GLAccount = ChartsOfAccounts.Managerial.Bank;
EndIf;

If Not ValueIsFilled(Object.AccountType) Then
	Object.AccountType = "Transactional";	
EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.BankAccounts</Source>
				<Receiver>CatalogRef.BankAccounts</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Bank --&gt; Bank</Description>
						<Order>50</Order>
						<Source Name="Bank" Kind="Attribute" Type="CatalogRef.Banks"/>
						<Receiver Name="Bank" Kind="Attribute" Type="CatalogRef.Banks"/>
						<ConversionRuleCode>Banks                                             </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>CashCurrency --&gt; CashCurrency</Description>
						<Order>100</Order>
						<Source Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
						<Receiver Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
						<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>AccountType --&gt; AccountType</Description>
						<Order>150</Order>
						<Source Name="AccountType" Kind="Attribute" Type="String"/>
						<Receiver Name="AccountType" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>200</Order>
						<Source Name="Owner" Kind="Property"/>
						<Receiver Name="Owner" Kind="Property"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>ClosingDate --&gt; ClosingDate</Description>
						<Order>250</Order>
						<Source Name="ClosingDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="ClosingDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>OpeningDate --&gt; OpeningDate</Description>
						<Order>300</Order>
						<Source Name="OpeningDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="OpeningDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>Code --&gt; Code</Description>
						<Order>350</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Description --&gt; Description</Description>
						<Order>400</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>PermissionNumberAndDate --&gt; PermissionNumberAndDate</Description>
						<Order>450</Order>
						<Source Name="PermissionNumberAndDate" Kind="Attribute" Type="String"/>
						<Receiver Name="PermissionNumberAndDate" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>10</Code>
						<Description>AccountNo --&gt; AccountNo</Description>
						<Order>500</Order>
						<Source Name="AccountNo" Kind="Attribute" Type="String"/>
						<Receiver Name="AccountNo" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>550</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>AmountWithoutCents --&gt; AmountWithoutCents</Description>
						<Order>600</Order>
						<Source Name="AmountWithoutCents" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="AmountWithoutCents" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>CorrespondentText --&gt; CorrespondentText</Description>
						<Order>650</Order>
						<Source Name="CorrespondentText" Kind="Attribute" Type="String"/>
						<Receiver Name="CorrespondentText" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>14</Code>
						<Description>DestinationText --&gt; DestinationText</Description>
						<Order>700</Order>
						<Source Name="DestinationText" Kind="Attribute" Type="String"/>
						<Receiver Name="DestinationText" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>15</Code>
						<Description>SettlementBank --&gt; AccountsBank</Description>
						<Order>750</Order>
						<Source Name="SettlementBank" Kind="Attribute" Type="CatalogRef.Banks"/>
						<Receiver Name="AccountsBank" Kind="Attribute" Type="CatalogRef.Banks"/>
						<ConversionRuleCode>Banks                                             </ConversionRuleCode>
					</Property>
					<Property>
						<Code>16</Code>
						<Description>AlwaysSpecifyPPC --&gt; KPPIndicationVersion</Description>
						<Order>800</Order>
						<Source Name="AlwaysSpecifyPPC" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="KPPIndicationVersion" Kind="Attribute" Type="EnumRef.KPPIndicationVariants"/>
						<BeforeExport>Expression = ?(Source.AlwaysSpecifyPPC, "Enums.KPPIndicationVariants.InAllPaymentOrders","Enums.KPPIndicationVariants.OnTransferOfTaxes");</BeforeExport>
					</Property>
					<Property>
						<Code>17</Code>
						<Description>MonthInWords --&gt; MonthOutputOption</Description>
						<Order>850</Order>
						<Source Name="MonthInWords" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="MonthOutputOption" Kind="Attribute" Type="EnumRef.MonthInDocumentDateOutputVariants"/>
						<BeforeExport>Expression = ?(Source.MonthInWords, "Enums.MonthOutputTypesInDocumentDate.InWords","Enums.MonthOutputTypesInDocumentDate.Number");</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Counterparties</Code>
				<Description>Catalog: Counterparties</Description>
				<Order>300</Order>
				<AfterImport>If Not Object.IsFolder Then

	If Not ObjectFound Then 
		Object.CustomerAdvancesGLAccount = ChartsOfAccounts.Managerial.AccountsByAdvancesReceived;
		Object.VendorAdvancesGLAccount = ChartsOfAccounts.Managerial.SettlementsByAdvancesIssued;
		Object.GLAccountCustomerSettlements = ChartsOfAccounts.Managerial.AccountsReceivable;
		Object.GLAccountVendorSettlements = ChartsOfAccounts.Managerial.AccountsPayable;
		
		Object.DoOperationsByContracts = True;
		Object.DoOperationsByDocuments = True;
		Object.DoOperationsByOrders = True;
		Object.TrackPaymentsByBills = True;
	EndIf;

	If ValueIsFilled(Object.ContractByDefault)
		AND Object.ContractByDefault.GetObject() = Undefined Then
		
		Object.ContractByDefault = Catalogs.CounterpartyContracts.EmptyRef();	
	EndIf;

EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.Counterparties</Source>
				<Receiver>CatalogRef.Counterparties</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>150</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.Counterparties"/>
						<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
						<BeforeExport>If Source.Parent = Source.Ref Then
	Value = Undefined;	
EndIf;</BeforeExport>
					</Property>
					<Property Search="true" Required="true">
						<Code>4</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>200</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
					<Property Search="true">
						<Code>5</Code>
						<Description>TIN --&gt; TIN</Description>
						<Order>250</Order>
						<Source Name="TIN" Kind="Attribute" Type="String"/>
						<Receiver Name="TIN" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>CodeByOKPO --&gt; CodeByOKPO</Description>
						<Order>300</Order>
						<Source Name="CodeByOKPO" Kind="Attribute" Type="String"/>
						<Receiver Name="CodeByOKPO" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>7</Code>
						<Description>KPP --&gt; KPP</Description>
						<Order>350</Order>
						<Source Name="KPP" Kind="Attribute" Type="String"/>
						<Receiver Name="KPP" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>400</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>LegalIndividual --&gt; LegalEntityIndividual</Description>
						<Order>450</Order>
						<Source Name="LegalIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<Receiver Name="LegalEntityIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<ConversionRuleCode>LegalEntityIndividual                                         </ConversionRuleCode>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>500</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>DefaultBankAccount --&gt; BankAccountByDefault</Description>
						<Order>550</Order>
						<Source Name="DefaultBankAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
						<Receiver Name="BankAccountByDefault" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
						<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>CounterpartyMainContract --&gt; ContractByDefault</Description>
						<Order>600</Order>
						<Source Name="CounterpartyMainContract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
						<Receiver Name="ContractByDefault" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
						<ConversionRuleCode>CounterpartyContracts                              </ConversionRuleCode>
					</Property>
					<Group>
						<Code>13</Code>
						<Description>ContactInformation --&gt; ContactInformation</Description>
						<Order>650</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="ContactInformation" Kind="TabularSection"/>
						<BeforeProcessExport>If Source.IsFolder = True Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
						<Property>
							<Code>15</Code>
							<Description>EMail_Address --&gt; EMail_Address</Description>
							<Order>50</Order>
							<Source Name="EMail_Address" Kind="Attribute" Type="String"/>
							<Receiver Name="EMail_Address" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Kind --&gt; Kind</Description>
							<Order>100</Order>
							<Source Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<Receiver Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>City --&gt; City</Description>
							<Order>150</Order>
							<Source Name="City" Kind="Attribute" Type="String"/>
							<Receiver Name="City" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>ServerDomainName --&gt; ServerDomainName</Description>
							<Order>200</Order>
							<Source Name="ServerDomainName" Kind="Attribute" Type="String"/>
							<Receiver Name="ServerDomainName" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>FieldsValues --&gt; FieldsValues</Description>
							<Order>250</Order>
							<Source Name="FieldsValues" Kind="Attribute" Type="String"/>
							<Receiver Name="FieldsValues" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>PhoneNumber --&gt; PhoneNumber</Description>
							<Order>300</Order>
							<Source Name="PhoneNumber" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumber" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>PhoneNumberNoCodes --&gt; PhoneNumberNoCodes</Description>
							<Order>350</Order>
							<Source Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>Presentation --&gt; Presentation</Description>
							<Order>400</Order>
							<Source Name="Presentation" Kind="Attribute" Type="String"/>
							<Receiver Name="Presentation" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>Region --&gt; Region</Description>
							<Order>450</Order>
							<Source Name="Region" Kind="Attribute" Type="String"/>
							<Receiver Name="Region" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>24</Code>
							<Description>Country --&gt; Country</Description>
							<Order>500</Order>
							<Source Name="Country" Kind="Attribute" Type="String"/>
							<Receiver Name="Country" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>25</Code>
							<Description>Type --&gt; Type</Description>
							<Order>550</Order>
							<Source Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<Receiver Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
					</Group>
					<Property>
						<Code>14</Code>
						<Description>Comment --&gt; Comment</Description>
						<Order>700</Order>
						<Source Name="Comment" Kind="Attribute" Type="String"/>
						<Receiver Name="Comment" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>26</Code>
						<Description> --&gt; DoOperationsByContracts</Description>
						<Order>750</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="DoOperationsByContracts" Kind="Attribute" Type="Boolean"/>
						<BeforeExport>Value = True;</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ProductsAndServices</Code>
				<Description>Catalog: ProductsAndServices</Description>
				<Order>350</Order>
				<BeforeExport>// Receive information about alcoholic products

If Not ValueIsFilled(IncomingData) Then
	IncomingData = New Structure(
		"AlcoholicProductsKind, ImportedAlcoholicProducts, VolumeDAL, AlcoholicProductsManufacturerImporter");
EndIf;
	
Query = New Query(
	"SELECT
	|	CASE
	|		WHEN Tab.ProductsAndServices IS NULL 
	|			THEN FALSE
	|		ELSE TRUE
	|	END AS AlcoholicProducts,
	|	Tab.ProductsKind AS AlcoholicProductsKind,
	|	CASE
	|		WHEN Spm.Importer &lt;&gt; VALUE(Catalog.Counterparties.EmptyRef)
	|				AND Not Tab.ProductsAndServices IS NULL 
	|			THEN TRUE
	|		ELSE FALSE
	|	END AS ImportedAlcoholicProducts,
	|	Tab.RecalculationRatioDal AS VolumeDAL,
	|	CASE
	|		WHEN Not Tab.ProductsAndServices IS NULL 
	|			THEN CASE
	|					WHEN Spm.Importer = VALUE(Catalog.Counterparties.EmptyRef)
	|						THEN Spm.Manufacturer
	|					ELSE Spm.Importer
	|				END
	|		ELSE VALUE(Catalog.Counterparties.EmptyRef)
	|	END AS AlcoholicProductsManufacturerImporter
	|FROM
	|	Catalog.ProductsAndServices AS Spm
	|		LEFT JOIN InformationRegister.InformationAboutAlcoholicProducts AS Tab
	|		ON Spm.Ref = Tab.ProductsAndServices
	|WHERE
	|	Spm.Ref = &amp;Refs");
	
Query.SetParameter("Ref", Source.Ref);
Selection = Query.Execute().Select();
If Selection.Next() Then
	FillPropertyValues(IncomingData, Selection);
EndIf;
</BeforeExport>
				<AfterImport>If Not Object.IsFolder Then

	If Not ObjectFound Then 
		Object.InventoryGLAccount = ChartsOfAccounts.Managerial.RawMaterialsAndMaterials;
		Object.ExpensesGLAccount = ChartsOfAccounts.Managerial.UnfinishedProduction;	
		Object.BusinessActivity = Catalogs.BusinessActivities.MainActivity;
	EndIf;
	
	If Not ValueIsFilled(Object.ProductsAndServicesCategory) Then
		Object.ProductsAndServicesCategory = Parameters.ProductsAndServicesCategoryDefault;
	EndIf;	
		
	Execute(Algorithms.FillInVatRateCaps);
	
EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.ProductsAndServices</Source>
				<Receiver>CatalogRef.ProductsAndServices</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Comment --&gt; Comment</Description>
						<Order>100</Order>
						<Source Name="Comment" Kind="Attribute" Type="String"/>
						<Receiver Name="Comment" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>16</Code>
						<Description>SKU --&gt; SKU</Description>
						<Order>150</Order>
						<Source Name="SKU" Kind="Attribute" Type="String"/>
						<Receiver Name="SKU" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>200</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>250</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>ProductsAndServicesCategory --&gt; ProductsAndServicesCategory</Description>
						<Order>300</Order>
						<Source Name="ProductsAndServicesCategory" Kind="Attribute" Type="CatalogRef.ProductsAndServicesCategories"/>
						<Receiver Name="ProductsAndServicesCategory" Kind="Attribute" Type="CatalogRef.ProductsAndServicesCategories"/>
						<ConversionRuleCode>ProductsAndServicesCategories                              </ConversionRuleCode>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>350</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property Search="true">
						<Code>7</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>400</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ProductsAndServices"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ProductsAndServices"/>
						<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
						<BeforeExport>If Source.Parent = Source.Ref Then
	Value = Undefined;	
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>VATRate --&gt; QueryTextVATRate</Description>
						<Order>450</Order>
						<Source Name="VATRate" Kind="Attribute" Type="EnumRef.VATRates"/>
						<Receiver Name="" Kind=""/>
						<ParameterForTransferName>QueryTextVATRate</ParameterForTransferName>
						<BeforeExport>Execute(Algorithms.FillVATHeaderRateParameter);</BeforeExport>
					</Property>
					<Property Search="true" Required="true">
						<Code>9</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>500</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>MeasurementUnit --&gt; MeasurementUnit</Description>
						<Order>550</Order>
						<Source Name="MeasurementUnit" Kind="Attribute" Type="CatalogRef.UOMClassifier"/>
						<Receiver Name="MeasurementUnit" Kind="Attribute" Type="CatalogRef.UOMClassifier"/>
						<ConversionRuleCode>UOMClassifier                      </ConversionRuleCode>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>MainProductsAndServicesSpecification --&gt; Specification</Description>
						<Order>600</Order>
						<Source Name="MainProductsAndServicesSpecification" Kind="Attribute" Type="CatalogRef.ProductsAndServicesSpecifications"/>
						<Receiver Name="Specification" Kind="Attribute" Type="CatalogRef.Specifications"/>
						<ConversionRuleCode>Specifications                                      </ConversionRuleCode>
					</Property>
					<Property>
						<Code>13</Code>
						<Description> --&gt; ReplenishmentMethod</Description>
						<Order>650</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ReplenishmentMethod" Kind="Attribute" Type="EnumRef.InventoryReplenishmentMethods"/>
						<BeforeExport>Cancel = Source.IsFolder;
If Not Cancel Then
	Expression = "Enums.InventoryReplenishmentMethods.Purchase";
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Donotreplace>true</Donotreplace>
						<Code>14</Code>
						<Description>Service --&gt; ProductsAndServicesType</Description>
						<Order>700</Order>
						<Source Name="Service" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="ProductsAndServicesType" Kind="Attribute" Type="EnumRef.ProductsAndServicesTypes"/>
						<BeforeExport>// Source.Service, type = NULL or Boolean

If Source.Service = True Then
	Expression = "Enums.ProductsAndServicesTypes.Service";
Else
	Expression = "Enums.ProductsAndServicesTypes.InventoryItem";
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>15</Code>
						<Description> --&gt; EstimationMethod</Description>
						<Order>750</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="EstimationMethod" Kind="Attribute" Type="EnumRef.InventoryValuationMethod"/>
						<BeforeExport>Expression = "Enums.InventoryValuationMethods.ByAverage";</BeforeExport>
					</Property>
					<Property>
						<Code>17</Code>
						<Description>CountryOfOrigin --&gt; CountryOfOrigin</Description>
						<Order>800</Order>
						<Source Name="CountryOfOrigin" Kind="Attribute" Type="CatalogRef.WorldCountries"/>
						<Receiver Name="CountryOfOrigin" Kind="Attribute" Type="CatalogRef.WorldCountries"/>
						<ConversionRuleCode>WorldCountries                                        </ConversionRuleCode>
					</Property>
					<Property>
						<Code>18</Code>
						<Description>--&gt; AlcoholicProductsKind</Description>
						<Order>900</Order>
						<GetFromIncomingData>true</GetFromIncomingData>
						<Source Name="" Kind=""/>
						<Receiver Name="AlcoholicProductsKind" Kind="Attribute" Type="CatalogRef.AlcoholicProductsKinds"/>
						<ConversionRuleCode>AlcoholicProductsKinds                          </ConversionRuleCode>
					</Property>
					<Property>
						<Code>19</Code>
						<Description>--&gt; ImportedAlcoholicProducts</Description>
						<Order>950</Order>
						<GetFromIncomingData>true</GetFromIncomingData>
						<Source Name="" Kind=""/>
						<Receiver Name="ImportedAlcoholicProducts" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>20</Code>
						<Description>--&gt; VolumeDAL</Description>
						<Order>1000</Order>
						<GetFromIncomingData>true</GetFromIncomingData>
						<Source Name="" Kind=""/>
						<Receiver Name="VolumeDAL" Kind="Attribute" Type="Number"/>
					</Property>
					<Property>
						<Code>21</Code>
						<Description>--&gt; AlcoholicProductsManufacturerImporter</Description>
						<Order>1050</Order>
						<GetFromIncomingData>true</GetFromIncomingData>
						<Source Name="" Kind=""/>
						<Receiver Name="AlcoholicProductsManufacturerImporter" Kind="Attribute" Type="CatalogRef.Counterparties"/>
						<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ProductsAndServicesCategories</Code>
				<Description>Catalog: ProductsAndServices groups</Description>
				<Order>450</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.ProductsAndServicesCategories</Source>
				<Receiver>CatalogRef.ProductsAndServicesCategories</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>150</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ProductsAndServicesCategories"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ProductsAndServicesCategories"/>
						<ConversionRuleCode>ProductsAndServicesCategories                              </ConversionRuleCode>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Individuals</Code>
				<Description>Catalog: Actual person</Description>
				<Order>500</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.Individuals</Source>
				<Receiver>CatalogRef.Individuals</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>100</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.Individuals"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.Individuals"/>
						<ConversionRuleCode>Individuals                                    </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>3</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>150</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>BirthDate --&gt; BirthDate</Description>
						<Order>200</Order>
						<Source Name="BirthDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="BirthDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Gender --&gt; Gender</Description>
						<Order>250</Order>
						<Source Name="Gender" Kind="Attribute" Type="EnumRef.PrivatePersonGender"/>
						<Receiver Name="Gender" Kind="Attribute" Type="EnumRef.PrivatePersonGender"/>
						<ConversionRuleCode>IndividualGender                                </ConversionRuleCode>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>300</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>Code --&gt; Code</Description>
						<Order>350</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Group>
						<Code>8</Code>
						<Description>ContactInformation --&gt; ContactInformation</Description>
						<Order>400</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="ContactInformation" Kind="TabularSection"/>
						<BeforeProcessExport>If Source.IsFolder = True Then
	
	Cancel = True;
	
EndIf;</BeforeProcessExport>
						<Property>
							<Code>9</Code>
							<Description>EMail_Address --&gt; EMail_Address</Description>
							<Order>50</Order>
							<Source Name="EMail_Address" Kind="Attribute" Type="String"/>
							<Receiver Name="EMail_Address" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Kind --&gt; Kind</Description>
							<Order>100</Order>
							<Source Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<Receiver Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>City --&gt; City</Description>
							<Order>150</Order>
							<Source Name="City" Kind="Attribute" Type="String"/>
							<Receiver Name="City" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>ServerDomainName --&gt; ServerDomainName</Description>
							<Order>200</Order>
							<Source Name="ServerDomainName" Kind="Attribute" Type="String"/>
							<Receiver Name="ServerDomainName" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>13</Code>
							<Description>FieldsValues --&gt; FieldsValues</Description>
							<Order>250</Order>
							<Source Name="FieldsValues" Kind="Attribute" Type="String"/>
							<Receiver Name="FieldsValues" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>PhoneNumber --&gt; PhoneNumber</Description>
							<Order>300</Order>
							<Source Name="PhoneNumber" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumber" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>PhoneNumberNoCodes --&gt; PhoneNumberNoCodes</Description>
							<Order>350</Order>
							<Source Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>Presentation --&gt; Presentation</Description>
							<Order>400</Order>
							<Source Name="Presentation" Kind="Attribute" Type="String"/>
							<Receiver Name="Presentation" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>Region --&gt; Region</Description>
							<Order>450</Order>
							<Source Name="Region" Kind="Attribute" Type="String"/>
							<Receiver Name="Region" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>Country --&gt; Country</Description>
							<Order>500</Order>
							<Source Name="Country" Kind="Attribute" Type="String"/>
							<Receiver Name="Country" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>Type --&gt; Type</Description>
							<Order>550</Order>
							<Source Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<Receiver Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
					</Group>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>CounterpartyContracts</Code>
				<Description>Catalog: Contracts counterparties</Description>
				<Order>550</Order>
				<AfterImport>
Counterparty = Object.Owner;
If ValueIsFilled(Counterparty)
	AND ValueIsFilled(Counterparty.ContractByDefault)
	AND Counterparty.GetObject() &lt;&gt; Undefined 
	AND Not Counterparty.DoOperationsByContracts Then
		
	MainContractObject = Counterparty.ContractByDefault.GetObject();
	Object = MainContractObject;
	Object.DataExchange.Load = True;
	Object.AdditionalProperties.Insert("RecordObjectChangeAtSenderNode", False);
		
EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.CounterpartyContracts</Source>
				<Receiver>CatalogRef.CounterpartyContracts</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>50</Order>
						<Source Name="Owner" Kind="Property" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Owner" Kind="Property" Type="CatalogRef.Counterparties"/>
						<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Code --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>Company --&gt; Company</Description>
						<Order>200</Order>
						<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
						<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
						<ConversionRuleCode>Companies                                       </ConversionRuleCode>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>250</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>SettlementsInStandardUnits --&gt; SettlementsInStandardUnits</Description>
						<Order>300</Order>
						<Source Name="SettlementsInStandardUnits" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="SettlementsInStandardUnits" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>350</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.CounterpartiesContracts"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.CounterpartiesContracts"/>
						<ConversionRuleCode>CounterpartyContracts                              </ConversionRuleCode>
						<BeforeExport>Empty = True;</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>8</Code>
						<Description>SettlementsCurrency --&gt; SettlementsCurrency</Description>
						<Order>400</Order>
						<Source Name="SettlementsCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
						<Receiver Name="SettlementsCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
						<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>10</Code>
						<Description>ContractKind --&gt; ContractKind</Description>
						<Order>450</Order>
						<Source Name="ContractKind" Kind="Attribute" Type="EnumRef.CounterpartiesContractsKinds"/>
						<Receiver Name="ContractKind" Kind="Attribute" Type="EnumRef.ContractsKinds"/>
						<ConversionRuleCode>ContractKinds                                     </ConversionRuleCode>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>PricesType --&gt; PriceKind</Description>
						<Order>500</Order>
						<Source Name="PricesType" Kind="Attribute" Type="CatalogRef.ProductsAndServicesPricesTypes"/>
						<Receiver Name="PriceKind" Kind="Attribute" Type="CatalogRef.PricesKinds"/>
						<ConversionRuleCode>PriceKinds                                           </ConversionRuleCode>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>Date --&gt; ContractDate</Description>
						<Order>550</Order>
						<Source Name="Date" Kind="Attribute" Type="Date"/>
						<Receiver Name="ContractDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>Number --&gt; ContractNo</Description>
						<Order>600</Order>
						<Source Name="Number" Kind="Attribute" Type="String"/>
						<Receiver Name="ContractNo" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>PaymentDueDate --&gt; CustomerPaymentDueDate</Description>
						<Order>650</Order>
						<Source Name="PaymentDueDate" Kind="Attribute" Type="Number"/>
						<Receiver Name="CustomerPaymentDueDate" Kind="Attribute" Type="Number"/>
						<BeforeExport>
If Source.PaymentDueDateSet
	AND (Source.ContractKind = Enums.ContractKindsCounterparties.WithCustomer
	OR Source.ContractKind = Enums.ContractKindsCounterparties.WithAgent) Then
	
	Value = Source.PaymentDueDate;
Else
	Value = 0;
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>14</Code>
						<Description>PaymentDueDate --&gt; VendorPaymentDueDate</Description>
						<Order>700</Order>
						<Source Name="PaymentDueDate" Kind="Attribute" Type="Number"/>
						<Receiver Name="VendorPaymentDueDate" Kind="Attribute" Type="Number"/>
						<BeforeExport>
If Source.PaymentDueDateSet
	AND (Source.ContractKind = Enums.ContractKindsCounterparties.WithVendor
	OR Source.ContractKind = Enums.ContractKindsCounterparties.FromPrincipal) Then
	
	Value = Source.PaymentDueDate;
Else
	Value = 0;
EndIf;</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>CCDNumbers</Code>
				<Description>Catalog: Numbers CCD</Description>
				<Order>600</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.CCDNumbers</Source>
				<Receiver>CatalogRef.CCDNumbers</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>100</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>CashFlowItems</Code>
				<Description>Catalog:Cash flow items</Description>
				<Order>650</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.CashFlowItems</Source>
				<Receiver>CatalogRef.CashFlowItems</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.CashFlowItems"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.CashFlowItems"/>
						<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>5</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>250</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>StructuralUnits</Code>
				<Description>Catalog: Warehouses (Place storage)</Description>
				<Order>700</Order>
				<BeforeExport>If Source.IsFolder Then
	Cancel = True;
EndIf;</BeforeExport>
				<AfterImport>
If ObjectFound
	AND Object.StructuralUnitType = Enums.StructuralUnitsTypes.Division Then
	
	Cancel = True; // do not import production warehouses created during the import to CA by SB division
	
EndIf;

If Not ObjectFound Then
	Object.Company = Catalogs.Companies.MainCompany;
EndIf;

If Not ValueIsFilled(Object.StructuralUnitType) Then
	Object.StructuralUnitType = Enums.StructuralUnitsTypes.Warehouse;
EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.Warehouses</Source>
				<Receiver>CatalogRef.StructuralUnits</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.Warehouses"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.StructuralUnits"/>
						<BeforeExport>Empty = True;</BeforeExport>
					</Property>
					<Property Search="true">
						<Donotreplace>true</Donotreplace>
						<Code>5</Code>
						<Description>TypeOfWarehouse --&gt; StructuralUnitType</Description>
						<Order>250</Order>
						<Source Name="TypeOfWarehouse" Kind="Attribute" Type="EnumRef.WarehousesTypes"/>
						<Receiver Name="StructuralUnitType" Kind="Attribute" Type="EnumRef.StructuralUnitsTypes"/>
						<ConversionRuleCode>StructuralUnitsTypes                             </ConversionRuleCode>
					</Property>
					<Property>
						<Code>6</Code>
						<Description> --&gt; FRP</Description>
						<Order>300</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="FRP" Kind="Attribute" Type="CatalogRef.Individuals"/>
						<ConversionRuleCode>Individuals                                    </ConversionRuleCode>
						<BeforeExport>Filter = New Structure("StructuralUnit");
Filter.StructuralUnit = Source.Ref;
SliceLast = InformationRegisters.ResponsiblePersons.SliceLast(CurrentDate(), Filter);

Value = ?(SliceLast.Count() &gt; 1, SliceLast[0].Individual, Undefined);</BeforeExport>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>TypeOfRetailPrices --&gt; RetailPriceKind</Description>
						<Order>350</Order>
						<Source Name="TypeOfRetailPrices" Kind="Attribute" Type="CatalogRef.ProductsAndServicesPricesTypes"/>
						<Receiver Name="RetailPriceKind" Kind="Attribute" Type="CatalogRef.PricesKinds"/>
						<ConversionRuleCode>PriceKinds                                           </ConversionRuleCode>
					</Property>
					<Property>
						<Code>8</Code>
						<Description> --&gt; GLAccountInRetail</Description>
						<Order>400</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="GLAccountInRetail" Kind="Attribute" Type="ChartOfAccountsRef.Managerial"/>
						<BeforeExport>Expression = "ChartsOfAccounts.Managerial.ProductsFinishedProducts";</BeforeExport>
					</Property>
					<Property>
						<Code>9</Code>
						<Description> --&gt; MarkupGLAccount</Description>
						<Order>450</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="MarkupGLAccount" Kind="Attribute" Type="ChartOfAccountsRef.Managerial"/>
						<BeforeExport>Expression = "ChartsOfAccounts.Managerial.TradeMarkup";</BeforeExport>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Specifications</Code>
				<Description>Catalog: Specifications ProductsAndServices</Description>
				<Order>750</Order>
				<AfterImport>If DataImportToInformationBaseMode() Then
	
	For Each CurRow IN Object.Content Do
		
		// Fill in the measurement unit
		Execute(Algorithms.FillUnitDimensions);
		
	EndDo;
	
EndIf;</AfterImport>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.SpecificationsProductsAndServices</Source>
				<Receiver>CatalogRef.Specifications</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>50</Order>
						<Source Name="Owner" Kind="Property" Type="CatalogRef.ProductsAndServices"/>
						<Receiver Name="Owner" Kind="Property" Type="CatalogRef.ProductsAndServices"/>
						<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Code --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Group>
						<Code>5</Code>
						<Description>InitialComponents --&gt; Content</Description>
						<Order>250</Order>
						<Source Name="InitialComponents" Kind="TabularSection"/>
						<Receiver Name="Content" Kind="TabularSection"/>
						<Property>
							<Code>6</Code>
							<Description>Count --&gt; Count</Description>
							<Order>50</Order>
							<Source Name="Count" Kind="Attribute" Type="Number"/>
							<Receiver Name="Count" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>ProductsAndServices --&gt; ProductsAndServices</Description>
							<Order>100</Order>
							<Source Name="ProductsAndServices" Kind="Attribute" Type="CatalogRef.ProductsAndServices"/>
							<Receiver Name="ProductsAndServices" Kind="Attribute" Type="CatalogRef.ProductsAndServices"/>
							<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description> --&gt; ProductsQuantity</Description>
							<Order>150</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ProductsQuantity" Kind="Attribute" Type="Number"/>
							<BeforeExport>Value = Source.Count;</BeforeExport>
						</Property>
						<Property>
							<Code>9</Code>
							<Description> --&gt; ContentRowType</Description>
							<Order>200</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ContentRowType" Kind="Attribute" Type="EnumRef.SpecificationContentRowTypes"/>
							<BeforeExport>Expression = "Enums.SpecificationContentRowTypes.Material";</BeforeExport>
						</Property>
						<Property>
							<Code>10</Code>
							<Description> --&gt; CostPercentage</Description>
							<Order>250</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="CostPercentage" Kind="Attribute" Type="Number"/>
							<BeforeExport>Value = 1;</BeforeExport>
						</Property>
					</Group>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>PriceKinds</Code>
				<Description>Catalog: Types price ProductsAndServices</Description>
				<Order>800</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.PriceTypesProductsAndServices</Source>
				<Receiver>CatalogRef.PriceKinds</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>PriceCurrency --&gt; PriceCurrency</Description>
						<Order>50</Order>
						<Source Name="PriceCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
						<Receiver Name="PriceCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
						<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Code --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Comment --&gt; Comment</Description>
						<Order>150</Order>
						<Source Name="Comment" Kind="Attribute" Type="String"/>
						<Receiver Name="Comment" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>Description --&gt; Description</Description>
						<Order>200</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>RoundUp --&gt; RoundUp</Description>
						<Order>250</Order>
						<Source Name="RoundUp" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="RoundUp" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>300</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>RoundingOrder --&gt; RoundingOrder</Description>
						<Order>350</Order>
						<Source Name="RoundingOrder" Kind="Attribute" Type="EnumRef.RoundingMethods"/>
						<Receiver Name="RoundingOrder" Kind="Attribute" Type="EnumRef.RoundingMethods"/>
						<ConversionRuleCode>RoundingMethods                                 </ConversionRuleCode>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>PriceIncludesVAT --&gt; PriceIncludesVAT</Description>
						<Order>400</Order>
						<Source Name="PriceIncludesVAT" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="PriceIncludesVAT" Kind="Attribute" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Divisions</Code>
				<Description>Catalog: Divisions companies</Description>
				<Order>850</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<ExchangeObjectPriority>below</ExchangeObjectPriority>
				<Source>CatalogRef.UnitCompanies</Source>
				<Receiver>CatalogRef.StructuralUnits</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>200</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.CompaniesDivisions"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.StructuralUnits"/>
						<ConversionRuleCode>Divisions                                     </ConversionRuleCode>
					</Property>
					<Property>
						<Donotreplace>true</Donotreplace>
						<Code>5</Code>
						<Description> --&gt; StructuralUnitType</Description>
						<Order>250</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="StructuralUnitType" Kind="Attribute" Type="EnumRef.StructuralUnitsTypes"/>
						<BeforeExport>Expression = "Enums.StructuralUnitsTypes.Division";</BeforeExport>
					</Property>
					<Property Search="true">
						<Code>6</Code>
						<Description>Owner --&gt; Company</Description>
						<Order>300</Order>
						<Source Name="Owner" Kind="Property" Type="CatalogRef.Companies"/>
						<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
						<ConversionRuleCode>Companies                                       </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ContactInformationTypes</Code>
				<Description>Catalog: Kinds contact information</Description>
				<Order>900</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Source>CatalogRef.ContactInformationTypes</Source>
				<Receiver>CatalogRef.ContactInformationTypes</Receiver>
				<Properties>
					<Property>
						<Code>2</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>50</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Type --&gt; Type</Description>
						<Order>100</Order>
						<Source Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
						<Receiver Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
						<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>AddressRussianOnly --&gt; AddressRussianOnly</Description>
						<Order>200</Order>
						<Source Name="AddressRussianOnly" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="AddressRussianOnly" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>EditMethodEditable --&gt; EditMethodEditable</Description>
						<Order>250</Order>
						<Source Name="EditMethodEditable" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="EditMethodEditable" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>EditInDialogOnly --&gt; EditInDialogOnly</Description>
						<Order>300</Order>
						<Source Name="EditInDialogOnly" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="EditInDialogOnly" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>AdditionalOrderingAttribute --&gt; AdditionalOrderingAttribute</Description>
						<Order>350</Order>
						<Source Name="AdditionalOrderingAttribute" Kind="Attribute" Type="Number"/>
						<Receiver Name="AdditionalOrderingAttribute" Kind="Attribute" Type="Number"/>
					</Property>
					<Property Search="true">
						<Code>8</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>400</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ContactInformationTypes"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ContactInformationTypes"/>
						<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>9</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>450</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values>
					<Value>
						<Code>3</Code>
						<Description>CompanyEmail --&gt; CompanyEmail</Description>
						<Order>150</Order>
						<Source>CompanyEmail</Source>
						<Receiver>CompanyEmail</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>UserEmail --&gt; UserEmail</Description>
						<Order>200</Order>
						<Source>UserEmail</Source>
						<Receiver>UserEmail</Receiver>
					</Value>
					<Value>
						<Code>10</Code>
						<Description>CounterpartyOtherInformation --&gt; CounterpartyOtherInformation</Description>
						<Order>500</Order>
						<Source>CounterpartyOtherInformation</Source>
						<Receiver>CounterpartyOtherInformation</Receiver>
					</Value>
					<Value>
						<Code>11</Code>
						<Description>CounterpartyPostalAddress --&gt; CounterpartyAddress</Description>
						<Order>550</Order>
						<Source>CounterpartyPostalAddress</Source>
						<Receiver>CounterpartyPostalAddress</Receiver>
					</Value>
					<Value>
						<Code>12</Code>
						<Description>CounterpartyPostalAddress --&gt; CounterpartyPostalAddress</Description>
						<Order>600</Order>
						<Source>CounterpartyPostalAddress</Source>
						<Receiver>CounterpartyPostalAddress</Receiver>
					</Value>
					<Value>
						<Code>13</Code>
						<Description>CatalogContactPersons --&gt; CatalogContactP</Description>
						<Order>650</Order>
						<Source>CatalogContactPersons</Source>
						<Receiver>CatalogContactPersons</Receiver>
					</Value>
					<Value>
						<Code>14</Code>
						<Description>CatalogCounterparties --&gt; CatalogCounterparties</Description>
						<Order>700</Order>
						<Source>CatalogCounterparties</Source>
						<Receiver>CatalogCounterparties</Receiver>
					</Value>
					<Value>
						<Code>15</Code>
						<Description>CatalogCompanies --&gt; CatalogCompanies</Description>
						<Order>750</Order>
						<Source>CatalogCompanies</Source>
						<Receiver>CatalogCompanies</Receiver>
					</Value>
					<Value>
						<Code>16</Code>
						<Description>CatalogUsers --&gt; CatalogUsers</Description>
						<Order>800</Order>
						<Source>CatalogUsers</Source>
						<Receiver>CatalogUsers</Receiver>
					</Value>
					<Value>
						<Code>17</Code>
						<Description>CatalogIndividuals --&gt; CatalogPhysicalP</Description>
						<Order>850</Order>
						<Source>CatalogIndividuals</Source>
						<Receiver>CatalogIndividuals</Receiver>
					</Value>
					<Value>
						<Code>18</Code>
						<Description>CounterpartyPhone --&gt; CounterpartyPhone</Description>
						<Order>900</Order>
						<Source>CounterpartyPhone</Source>
						<Receiver>CounterpartyPhone</Receiver>
					</Value>
					<Value>
						<Code>19</Code>
						<Description>CompanyPhone --&gt; CompanyPhone</Description>
						<Order>950</Order>
						<Source>CompanyPhone</Source>
						<Receiver>CompanyPhone</Receiver>
					</Value>
					<Value>
						<Code>23</Code>
						<Description>CounterpartyFax --&gt; CounterpartyFax</Description>
						<Order>1150</Order>
						<Source>CounterpartyFax</Source>
						<Receiver>CounterpartyFax</Receiver>
					</Value>
					<Value>
						<Code>24</Code>
						<Description>CounterpartyFactAddress --&gt; CounterpartyFactAddress</Description>
						<Order>1200</Order>
						<Source>CounterpartyFactAddress</Source>
						<Receiver>CounterpartyFactAddress</Receiver>
					</Value>
					<Value>
						<Code>25</Code>
						<Description>CounterpartyFactAddress --&gt; CounterpartyFactAddress</Description>
						<Order>1250</Order>
						<Source>CounterpartyFactAddress</Source>
						<Receiver>CounterpartyFactAddress</Receiver>
					</Value>
					<Value>
						<Code>26</Code>
						<Description>CounterpartyLegalAddress --&gt; CounterpartyLegalAddress</Description>
						<Order>1300</Order>
						<Source>CounterpartyLegalAddress</Source>
						<Receiver>CounterpartyLegalAddress</Receiver>
					</Value>
					<Value>
						<Code>27</Code>
						<Description>CounterpartyLegalAddress --&gt; CounterpartyLegalAddress</Description>
						<Order>1350</Order>
						<Source>CounterpartyLegalAddress</Source>
						<Receiver>CounterpartyLegalAddress</Receiver>
					</Value>
					<Value>
						<Code>28</Code>
						<Description>EmailContactPersons --&gt; ContactPersonEmail</Description>
						<Order>1400</Order>
						<Source>EmailContactPersons</Source>
						<Receiver>ContactPersonEmail</Receiver>
					</Value>
					<Value>
						<Code>29</Code>
						<Description>EmailCounterparties --&gt; CounterpartyEmail</Description>
						<Order>1450</Order>
						<Source>EmailCounterparties</Source>
						<Receiver>CounterpartyEmail</Receiver>
					</Value>
					<Value>
						<Code>30</Code>
						<Description>AddressForInformationIndividuals --&gt; AddressForAnd</Description>
						<Order>1500</Order>
						<Source>AddressForInformationIndividuals</Source>
						<Receiver>IndividuaAddressForlInformation</Receiver>
					</Value>
					<Value>
						<Code>31</Code>
						<Description>AddressPlaceResidenceIndividuals --&gt; ResidentialAddress</Description>
						<Order>1550</Order>
						<Source>AddressPlaceResidenceIndividuals</Source>
						<Receiver>IndividualPlaceOfResidence</Receiver>
					</Value>
					<Value>
						<Code>32</Code>
						<Description>AddressOutsideOfRUSSIANFEDERATIONIndividuals --&gt; IndividualAddress</Description>
						<Order>1600</Order>
						<Source>AddressOutsideOfRUSSIANFEDERATIONIndividuals</Source>
						<Receiver>IndividualAddressOutsideRF</Receiver>
					</Value>
					<Value>
						<Code>33</Code>
						<Description>AddressByRegistrationIndividuals --&gt; IndividualAddressByPr</Description>
						<Order>1650</Order>
						<Source>AddressByRegistrationIndividuals</Source>
						<Receiver>IndividualAddressByRegistration</Receiver>
					</Value>
					<Value>
						<Code>34</Code>
						<Description>OtherInformationCounterparties --&gt; AnotherInformationCo</Description>
						<Order>1700</Order>
						<Source>OtherInformationCounterparties</Source>
						<Receiver>CounterpartyOtherInformation</Receiver>
					</Value>
					<Value>
						<Code>35</Code>
						<Description>WorkPhoneContactPersons --&gt; ContactPhone</Description>
						<Order>1750</Order>
						<Source>WorkPhoneContactPersons</Source>
						<Receiver>ContactPersonPhone</Receiver>
					</Value>
					<Value>
						<Code>36</Code>
						<Description>PhoneWorkingIndividuals --&gt; IndividualPhone</Description>
						<Order>1800</Order>
						<Source>PhoneWorkingIndividuals</Source>
						<Receiver>IndividualPhone</Receiver>
					</Value>
					<Value>
						<Code>37</Code>
						<Description>FaxCounterparties --&gt; CounterpartyFax</Description>
						<Order>1850</Order>
						<Source>FaxCounterparties</Source>
						<Receiver>CounterpartyFax</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>AlcoholicProductsVendorLicenses</Code>
				<Description>Register information: Licenses vendors alcohol products</Description>
				<Order>950</Order>
				<BeforeImport>Cancel = Not GetFunctionalOption("EnterInformationForDeclarationsOnAlcoholicProducts");</BeforeImport>
				<DontRememberExported>true</DontRememberExported>
				<Source>InformationRegisterRecord.AlcoholicProductsVendorLicenses</Source>
				<Receiver>CatalogRef.AlcoholicProductsVendorLicenses</Receiver>
				<Properties>
					<Property Search="true">
						<Code>3</Code>
						<Description>LicenseKind --&gt; LicenseKind</Description>
						<Order>50</Order>
						<Source Name="LicenseKind" Kind="Dimension" Type="EnumRef.AlcoholSaleLicensesTypes"/>
						<Receiver Name="LicenseKind" Kind="Attribute" Type="EnumRef.AlcoholicProductsLicenseKinds"/>
						<ConversionRuleCode>LicenseKindsOnAlcoholicProducts                  </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>1</Code>
						<Description>Vendor --&gt; Owner</Description>
						<Order>100</Order>
						<Source Name="Vendor" Kind="Dimension" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Owner" Kind="Property" Type="CatalogRef.Counterparties"/>
						<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>Period --&gt; StartDate</Description>
						<Order>150</Order>
						<Source Name="Period" Kind="Property" Type="Date"/>
						<Receiver Name="StartDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>EndDate --&gt; EndDate</Description>
						<Order>200</Order>
						<Source Name="EndDate" Kind="Resource" Type="Date"/>
						<Receiver Name="EndDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>IssuedBy --&gt; IssuedBy</Description>
						<Order>250</Order>
						<Source Name="IssuedBy" Kind="Resource" Type="String"/>
						<Receiver Name="IssuedBy" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>SeriesNumber --&gt; Description</Description>
						<Order>300</Order>
						<Source Name="SeriesNumber" Kind="Resource" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>AlcoholicProductsKinds</Code>
				<Description>Catalog: Kinds alcohol products</Description>
				<Order>1000</Order>
				<BeforeExport>Query = New Query(
	"SELECT TOP 1
	|	ISNULL(InformationAboutAlcoholicProducts.LicenseKind, VALUE(Enum.AlcoholSaleLicensesKinds.EmptyRef)) AS LicenseKind,
	|	SUM(1) AS Count
	|FROM
	|	Catalog.AlcoholicProductsKinds AS AlcoholicProductsKinds
	|		LEFT JOIN InformationRegister.InformationAboutAlcoholicProducts AS InformationAboutAlcoholicProducts
	|		ON AlcoholicProductsKinds.Ref = InformationAboutAlcoholicProducts.ProductsKind
	|WHERE
	|	AlcoholicProductsKinds.Ref = &amp;Refs
	|
	|GROUP BY
	|	ISNULL(InformationAboutAlcoholicProducts.LicenseKind, VALUE(Enum.AlcoholSaleLicensesKinds.EmptyRef))
	|
	|ORDER BY
	|	Count DESC");
	
Query.SetParameter("Ref", Source.Ref);

Selection = Query.Execute().Select();
If Selection.Next() Then
	IncomingData = New Structure;
	IncomingData.Insert("LicenseKind", Selection.LicenseKind);
EndIf;</BeforeExport>
				<BeforeImport>Cancel = Not GetFunctionalOption("EnterInformationForDeclarationsOnAlcoholicProducts");</BeforeImport>
				<SynchronizeByID>true</SynchronizeByID>
				<Source>CatalogRef.AlcoholicProductsKinds</Source>
				<Receiver>CatalogRef.AlcoholicProductsKinds</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>2</Code>
						<Description>ProductKindCode --&gt; Code</Description>
						<Order>100</Order>
						<Source Name="ProductKindCode" Kind="Attribute" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>150</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>--&gt; LicenseKind</Description>
						<Order>200</Order>
						<GetFromIncomingData>true</GetFromIncomingData>
						<Source Name="" Kind=""/>
						<Receiver Name="LicenseKind" Kind="Attribute" Type="EnumRef.AlcoholicProductsLicenseKinds"/>
						<ConversionRuleCode>LicenseKindsOnAlcoholicProducts                  </ConversionRuleCode>
					</Property>
				</Properties>
				<Values/>
			</Rule>
		</Group>
		<Group>
			<Code>Registers information</Code>
			<Description>Registers information                                 </Description>
			<Order>150</Order>
			<Rule>
				<Code>IndividualsDescriptionFull</Code>
				<Description>Register information: Surname, name, patronymic actual person</Description>
				<Order>50</Order>
				<DontRememberExported>true</DontRememberExported>
				<Source>InformationRegisterRecord.SNPIndividuals</Source>
				<Receiver>InformationRegisterRecord.IndividualsDescriptionFull</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Active --&gt; Active</Description>
						<Order>50</Order>
						<Source Name="Active" Kind="Property" Type="Boolean"/>
						<Receiver Name="Active" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Name --&gt; Name</Description>
						<Order>100</Order>
						<Source Name="Name" Kind="Resource" Type="String"/>
						<Receiver Name="Name" Kind="Resource" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Patronymic --&gt; Patronymic</Description>
						<Order>150</Order>
						<Source Name="Patronymic" Kind="Resource" Type="String"/>
						<Receiver Name="Patronymic" Kind="Resource" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>Period --&gt; Period</Description>
						<Order>200</Order>
						<Source Name="Period" Kind="Property" Type="Date"/>
						<Receiver Name="Period" Kind="Property" Type="Date"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>Surname --&gt; Surname</Description>
						<Order>250</Order>
						<Source Name="Surname" Kind="Resource" Type="String"/>
						<Receiver Name="Surname" Kind="Resource" Type="String"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>Individual --&gt; Ind</Description>
						<Order>300</Order>
						<Source Name="Individual" Kind="Dimension"/>
						<Receiver Name="Ind" Kind="Dimension" Type="CatalogRef.Individuals"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
		</Group>
		<Group>
			<Code>Documents</Code>
			<Description>Documents</Description>
			<Order>200</Order>
			<Group>
				<Code>CashAssets</Code>
				<Description>Documents. Cash tools</Description>
				<Order>300</Order>
				<Rule>
					<Code>PaymentReceipt</Code>
					<Description>Document: Payment Instruction incoming</Description>
					<Order>50</Order>
					<AfterImport>
If DataImportToInformationBaseMode() Then
	
	If Object.PaymentDetails.Count() = 0 Then
		Object.PaymentDetails.Add();
		Object.PaymentDetails[0].PaymentAmount = Object.DocumentAmount;
	EndIf;
	
	// Fill in the document author.
	Execute(Algorithms.FillAuthor);
	
	// Filling counterparty's contract.
	Execute(Algorithms.FillCounterpartyContract);
	
	// Clear attributes that are not used for operations types.
	If Object.OperationKind = Enums.OperationKindsPaymentReceipt.FromAdvanceHolder Then
		Object.Correspondence = Undefined;
		Object.Counterparty = Undefined;
		Object.PaymentDetails.Clear();
	ElsIf Object.OperationKind = Enums.OperationKindsPaymentReceipt.Other Then
		Object.Counterparty = Undefined;
		Object.AdvanceHolder = Undefined;
		Object.Document = Undefined;
		Object.PaymentDetails.Clear();
	EndIf;
	
	If Not ValueIsFilled(Object.BasisDocument)
		OR Not CommonUse.RefExists(Object.BasisDocument) Then
		Object.BasisDocument = Undefined;
	EndIf;
	
	If ValueIsFilled(Object.Counterparty)
		AND Object.Counterparty.DoOperationsByDocuments Then
		
		For Each TableRow IN Object.PaymentDetails Do
			If Not ValueIsFilled(TableRow.Document) 
				OR Not CommonUse.RefExists(TableRow.Document) Then
				TableRow.AdvanceFlag = True;
				TableRow.Document = Undefined;
			EndIf;
		EndDo;
		
	EndIf;
	
	// Fill in default values.
	If Not ValueIsFilled(Object.Item) Then
		If Object.OperationKind = Enums.OperationKindsPaymentReceipt.FromCustomer Then
			Object.Item = Catalogs.CashFlowItems.PaymentFromCustomers;
		ElsIf Object.OperationKind = Enums.OperationKindsPaymentReceipt.FromVendor Then
			Object.Item = Catalogs.CashFlowItems.PaymentToVendor;
		Else
			Object.Item = Catalogs.CashFlowItems.Other;
		EndIf;
	EndIf;
	
	If Object.OperationKind = Enums.OperationKindsPaymentReceipt.Other
		AND Not ValueIsFilled(Object.Correspondence) Then
		
		Object.Correspondence = ChartsOfAccounts.Managerial.OtherIncome;
		
	EndIf;
	
	// Fill in the taxation mode.
	If Object.OperationKind = Enums.OperationKindsPaymentReceipt.FromCustomer Then
		Object.VATTaxation = SmallBusinessServer.VATTaxation(Object.Company,, Object.Date);
	Else
		Object.VATTaxation = Enums.VATTaxationTypes.TaxableByVAT;
	EndIf;
	
	// Fill in VAT rate.
	If ObjectParameters &lt;&gt; Undefined Then
		
		ParametersOfTP = ObjectParameters.Get("PaymentDetailsTabularSection");
		
	EndIf;
	
	For Each CurRow IN Object.PaymentDetails Do
		
		Execute(Algorithms.FillVATRateByRow);
		
	EndDo;
	
	
	// Accounting amount.
	Object.ExchangeRate = ?(
		Object.ExchangeRate = 0,
		1,
		Object.ExchangeRate
	);
	Object.Multiplicity = ?(
		Object.Multiplicity = 0,
		1,
		Object.Multiplicity
	);
	
	StructureByCurrency = InformationRegisters.CurrencyRates.GetLast(Object.Date, New Structure("Currency", Constants.AccountingCurrency.Get()));
	
	AccountingCurrencyRate = ?(
		StructureByCurrency.ExchangeRate = 0,
		1,
		StructureByCurrency.ExchangeRate
	);
	AccountingCurrencyMultiplicity = ?(
		StructureByCurrency.ExchangeRate = 0,
		1,
		StructureByCurrency.Multiplicity
	);
	
	Object.AccountingAmount = SmallBusinessServer.RecalculateFromCurrencyToCurrency(
		Object.DocumentAmount,
		Object.ExchangeRate,
		AccountingCurrencyRate,
		Object.Multiplicity,
		AccountingCurrencyMultiplicity
	);
	
EndIf;
</AfterImport>
					<SynchronizeByID>true</SynchronizeByID>
					<ExchangeObjectPriority>below</ExchangeObjectPriority>
					<Source>DocumentRef.ReceiptOnBankAccount</Source>
					<Receiver>DocumentRef.PaymentReceipt</Receiver>
					<Properties>
						<Property>
							<Code>1</Code>
							<Description>OperationKind --&gt; OperationKind</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Attribute" Type="EnumRef.CashOperationsKinds"/>
							<Receiver Name="OperationKind" Kind="Attribute" Type="EnumRef.OperationsKindsReceipt"/>
							<ConversionRuleCode>OperationKindsPaymentReceipt                     </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Date --&gt; Date</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property>
							<Code>3</Code>
							<Description>IncomingDocumentDate --&gt; IncomingDocumentDate</Description>
							<Order>150</Order>
							<Source Name="IncomingDocumentDate" Kind="Attribute" Type="Date"/>
							<Receiver Name="IncomingDocumentDate" Kind="Attribute" Type="Date"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Counterparty --&gt; Counterparty</Description>
							<Order>200</Order>
							<Source Name="Counterparty" Kind="Attribute" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Counterparty" Kind="Attribute" Type="CatalogRef.Counterparties"/>
							<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind &lt;&gt; Enums.OperationKindsOfCashReceipt.ReturnFromVendor
   AND Source.OperationKind &lt;&gt; Enums.OperationKindsOfCashReceipt.BuyerPayment Then
   Value = "";
EndIf;</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>6</Code>
							<Description>Number --&gt; Number</Description>
							<Order>250</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Company</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<ConversionRuleCode>Companies                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Posted --&gt; Posted</Description>
							<Order>400</Order>
							<Source Name="Posted" Kind="Property" Type="Boolean"/>
							<Receiver Name="Posted" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>DocumentAmount --&gt; DocumentAmount</Description>
							<Order>450</Order>
							<Source Name="DocumentAmount" Kind="Attribute" Type="Number"/>
							<Receiver Name="DocumentAmount" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>DocumentCurrency --&gt; CashCurrency</Description>
							<Order>500</Order>
							<Source Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<Receiver Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>CashFlowItem --&gt; Item</Description>
							<Order>550</Order>
							<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="Item" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
							<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
							<BeforeExport>If Not ValueIsFilled(Source.CashFlowItem)
	  AND Source.PaymentDetails.Count() &gt; 0 Then
	Value = Source.PaymentDetails[0].CashFlowItem;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>AccountOfCompany --&gt; BankAccount</Description>
							<Order>600</Order>
							<Source Name="AccountOfCompany" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="BankAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
							<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>IncomingDocumentNumber --&gt; IncomingDocumentNumber</Description>
							<Order>650</Order>
							<Source Name="IncomingDocumentNumber" Kind="Attribute" Type="String"/>
							<Receiver Name="IncomingDocumentNumber" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>24</Code>
							<Description>BasisDocument --&gt; BasisDocument</Description>
							<Order>700</Order>
							<Source Name="BasisDocument" Kind="Attribute"/>
							<Receiver Name="BasisDocument" Kind="Attribute"/>
						</Property>
						<Property>
							<Code>27</Code>
							<Description>PaymentDestination --&gt; PaymentDestination</Description>
							<Order>750</Order>
							<Source Name="PaymentDestination" Kind="Attribute" Type="String"/>
							<Receiver Name="PaymentDestination" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>28</Code>
							<Description> --&gt; Multiplicity</Description>
							<Order>800</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Multiplicity" Kind="Attribute" Type="Number"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsOfCashReceipt.PurchaseOfForeignCurrencies
   AND Source.PaymentDetails.Count() &gt; 0 Then
	Value = Source.PaymentDetails[0].MutualSettlementsCurrencyRate;
Else
	Value = 1;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>29</Code>
							<Description> --&gt; ExchangeRate</Description>
							<Order>850</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="ExchangeRate" Kind="Attribute" Type="Number"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsOfCashReceipt.PurchaseOfForeignCurrencies
   AND Source.PaymentDetails.Count() &gt; 0 Then
	Value = Source.PaymentDetails[0].MutualSettlementsExchangeRate;
Else
	Value = 1;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>30</Code>
							<Description>Comment --&gt; Comment</Description>
							<Order>900</Order>
							<Source Name="Comment" Kind="Attribute" Type="String"/>
							<Receiver Name="Comment" Kind="Attribute" Type="String"/>
						</Property>
						<Group>
							<Code>11</Code>
							<Description>PaymentDetails --&gt; PaymentDetails</Description>
							<Order>950</Order>
							<Source Name="PaymentDetails" Kind="TabularSection"/>
							<Receiver Name="PaymentDetails" Kind="TabularSection"/>
							<Property>
								<Code>13</Code>
								<Description>VATAmount --&gt; VATAmount</Description>
								<Order>50</Order>
								<Source Name="VATAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="VATAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>PaymentAmount --&gt; PaymentAmount</Description>
								<Order>100</Order>
								<Source Name="PaymentAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="PaymentAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>CounterpartyContract --&gt; Contract</Description>
								<Order>200</Order>
								<Source Name="CounterpartyContract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
								<Receiver Name="Contract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
								<ConversionRuleCode>CounterpartyContracts                              </ConversionRuleCode>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>MutualSettlementsCurrencyRate --&gt; Multiplicity</Description>
								<Order>250</Order>
								<Source Name="MutualSettlementsCurrencyRate" Kind="Attribute" Type="Number"/>
								<Receiver Name="Multiplicity" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>MutualSettlementsExchangeRate --&gt; ExchangeRate</Description>
								<Order>300</Order>
								<Source Name="MutualSettlementsExchangeRate" Kind="Attribute" Type="Number"/>
								<Receiver Name="ExchangeRate" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>AmountMutualSettlements --&gt; SettlementsAmount</Description>
								<Order>350</Order>
								<Source Name="AmountMutualSettlements" Kind="Attribute" Type="Number"/>
								<Receiver Name="SettlementsAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>Deal --&gt; Document</Description>
								<Order>400</Order>
								<Source Name="Deal" Kind="Attribute"/>
								<Receiver Name="Document" Kind="Attribute"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description> --&gt; AdvanceFlag</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="AdvanceFlag" Kind="Attribute" Type="Boolean"/>
								<BeforeExport>Value = Not ValueIsFilled(CollectionObject.Deal);</BeforeExport>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>VATRate --&gt; QueryTextVATRate</Description>
								<Order>500</Order>
								<Source Name="VATRate" Kind="Attribute" Type="EnumRef.VATRates"/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>QueryTextVATRate</ParameterForTransferName>
								<BeforeExport>Execute(Algorithms.FillParameterTableSectionVATRate);</BeforeExport>
							</Property>
							<Property Disable="true">
								<Code>31</Code>
								<Description>CashFlowItem --&gt; </Description>
								<Order>550</Order>
								<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="" Kind=""/>
							</Property>
						</Group>
						<Property>
							<Code>32</Code>
							<Description>--&gt; Correspondence</Description>
							<Order>1000</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Correspondence" Kind="Attribute" Type="ChartOfAccountsRef.Managerial"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsOfCashReceipt.EntrepreneurPesonalFinances Then 
	Value = "UndistributedProfit";
Else
	Cancel = True;
EndIf;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>CashReceipt</Code>
					<Description>Document: Receipt cash order</Description>
					<Order>100</Order>
					<AfterImport>
If DataImportToInformationBaseMode() Then
	
	If Object.PaymentDetails.Count() = 0 Then
		Object.PaymentDetails.Add();
		Object.PaymentDetails[0].PaymentAmount = Object.DocumentAmount;
	EndIf;
	
	// Fill in the document author.
	Execute(Algorithms.FillAuthor);
	
	// Filling counterparty's contract.
	Execute(Algorithms.FillCounterpartyContract);
	
	// Clear attributes that are not used for operations types.
	If Object.OperationKind = Enums.OperationKindsCashReceipt.FromAdvanceHolder Then
		Object.Correspondence = Undefined;
		Object.Counterparty = Undefined;
		Object.PaymentDetails.Clear();
		
		// Fill in an advance holder
		If ObjectParameters &lt;&gt; Undefined Then
			Ind = ObjectParameters["Ind"];
			If ValueIsFilled(Ind) Then
				Employee = Catalogs.Employees.FindByAttribute("Ind", Ind);
				Object.AdvanceHolder = Employee;
			EndIf;
		EndIf;
		
		//Fill in the document of cash withdrawal
		If Not ValueIsFilled(Object.Document)
			AND ValueIsFilled(Object.AdvanceHolder) Then
			Execute(Algorithms.FillDocumentFundsIssue);
		EndIf;
		
	ElsIf Object.OperationKind = Enums.OperationKindsCashReceipt.Other Then
		Object.Counterparty = Undefined;
		Object.AdvanceHolder = Undefined;
		Object.Document = Undefined;
		Object.PaymentDetails.Clear();
	ElsIf Object.OperationKind = Enums.OperationKindsCashReceipt.RetailIncome
		OR Object.OperationKind = Enums.OperationKindsCashReceipt.RetailIncomeAccrualAccounting Then
		Object.Counterparty = Undefined;
		Object.AdvanceHolder = Undefined;
		Object.Document = Undefined;
		
		If Object.OperationKind = Enums.OperationKindsCashReceipt.RetailIncome
			AND Not ValueIsFilled(Object.CashCR) Then
			CashCRDefault = Catalogs.CashRegisters.EmptyRef();
			Execute(Algorithms.FillCashCRDefault);
			Object.CashCR = CashCRDefault;
		EndIf;
		
	EndIf;
	
	If Not ValueIsFilled(Object.BasisDocument)
		OR Not CommonUse.RefExists(Object.BasisDocument) Then
		Object.BasisDocument = Undefined;
	EndIf;
	
	If ValueIsFilled(Object.Counterparty)
		AND Object.Counterparty.DoOperationsByDocuments Then
		
		For Each TableRow IN Object.PaymentDetails Do
			If Not ValueIsFilled(TableRow.Document) 
				OR Not CommonUse.RefExists(TableRow.Document) Then
				TableRow.AdvanceFlag = True;
				TableRow.Document = Undefined;
			EndIf;
		EndDo;
		
	EndIf;
	
	// Fill in default values.
	If Not ValueIsFilled(Object.Item) Then
		If Object.OperationKind = Enums.OperationKindsCashReceipt.FromCustomer Then
			Object.Item = Catalogs.CashFlowItems.PaymentFromCustomers;
		ElsIf Object.OperationKind = Enums.OperationKindsCashReceipt.FromVendor Then
			Object.Item = Catalogs.CashFlowItems.PaymentToVendor;
		Else
			Object.Item = Catalogs.CashFlowItems.Other;
		EndIf;
	EndIf;
	
	If Not ValueIsFilled(Object.PettyCash) Then
		PettyCashByDefault = Catalogs.PettyCashes.EmptyRef();
		Execute(Algorithms.FillCashDefault);
		Object.PettyCash = PettyCashByDefault;
	EndIf;
		
	If Object.OperationKind = Enums.OperationKindsCashReceipt.Other
		AND Not ValueIsFilled(Object.Correspondence) Then
		
		Object.Correspondence = ChartsOfAccounts.Managerial.OtherIncome;
	EndIf;
	
	// Fill in the taxation mode.
	If Object.OperationKind = Enums.OperationKindsCashReceipt.FromCustomer Then
		Object.VATTaxation = SmallBusinessServer.VATTaxation(Object.Company, , Object.Date);
	ElsIf Object.OperationKind = Enums.OperationKindsCashReceipt.RetailIncome Then
		Object.VATTaxation = SmallBusinessServer.VATTaxation(Object.Company, Object.CashCR.StructuralUnit, Object.Date);
	ElsIf Object.OperationKind = Enums.OperationKindsCashReceipt.RetailIncomeAccrualAccounting Then
		Object.VATTaxation = SmallBusinessServer.VATTaxation(Object.Company, Object.StructuralUnit, Object.Date);
	Else
		Object.VATTaxation = Enums.VATTaxationTypes.TaxableByVAT;
	EndIf;
	
	// Fill in VAT rate.
	If ObjectParameters &lt;&gt; Undefined Then
		ParametersOfTP = ObjectParameters.Get("PaymentDetailsTabularSection");
	EndIf;
	
	For Each CurRow IN Object.PaymentDetails Do
		Execute(Algorithms.FillVATRateByRow);
	EndDo;
	
EndIf;</AfterImport>
					<SynchronizeByID>true</SynchronizeByID>
					<ExchangeObjectPriority>below</ExchangeObjectPriority>
					<Source>DocumentRef.ReceiptCashOrder</Source>
					<Receiver>DocumentRef.CashReceipt</Receiver>
					<Properties>
						<Property>
							<Code>1</Code>
							<Description>OperationKind --&gt; OperationKind</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Attribute" Type="EnumRef.CROperationsKinds"/>
							<Receiver Name="OperationKind" Kind="Attribute" Type="EnumRef.OperationsKindsCashReceipt"/>
							<ConversionRuleCode>OperationKindsCashReceipt                     </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Date --&gt; Date</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Counterparty --&gt; Counterparty</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Attribute"/>
							<Receiver Name="Counterparty" Kind="Attribute" Type="CatalogRef.Counterparties"/>
							<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind &lt;&gt; Enums.OCROperationsKinds.ReturnFromVendor
   AND Source.OperationKind &lt;&gt; Enums.OCROperationsKinds.BuyerPayment Then
   Value = "";
EndIf;</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>5</Code>
							<Description>Number --&gt; Number</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; Company</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<ConversionRuleCode>Companies                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Basis --&gt; Basis</Description>
							<Order>300</Order>
							<Source Name="Basis" Kind="Attribute" Type="String"/>
							<Receiver Name="Basis" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>350</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Application --&gt; Application</Description>
							<Order>400</Order>
							<Source Name="Application" Kind="Attribute" Type="String"/>
							<Receiver Name="Application" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>AcceptedFrom --&gt; AcceptedFrom</Description>
							<Order>450</Order>
							<Source Name="AcceptedFrom" Kind="Attribute" Type="String"/>
							<Receiver Name="AcceptedFrom" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Posted --&gt; Posted</Description>
							<Order>500</Order>
							<Source Name="Posted" Kind="Property" Type="Boolean"/>
							<Receiver Name="Posted" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>DocumentAmount --&gt; DocumentAmount</Description>
							<Order>550</Order>
							<Source Name="DocumentAmount" Kind="Attribute" Type="Number"/>
							<Receiver Name="DocumentAmount" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>DocumentCurrency --&gt; CashCurrency</Description>
							<Order>600</Order>
							<Source Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<Receiver Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>CashFlowItem --&gt; Item</Description>
							<Order>650</Order>
							<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="Item" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
							<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
							<BeforeExport>If Not ValueIsFilled(Source.CashFlowItem)
	  AND Source.PaymentDetails.Count() &gt; 0 Then
	Value = Source.PaymentDetails[0].CashFlowItem;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>26</Code>
							<Description>BasisDocument --&gt; BasisDocument</Description>
							<Order>700</Order>
							<Source Name="BasisDocument" Kind="Attribute"/>
							<Receiver Name="BasisDocument" Kind="Attribute"/>
						</Property>
						<Property>
							<Code>28</Code>
							<Description>--&gt; Ind</Description>
							<Order>750</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="" Kind=""/>
							<ConversionRuleCode>Individuals                                    </ConversionRuleCode>
							<ParameterForTransferName>Ind</ParameterForTransferName>
							<BeforeExport>If Source.OperationKind = Enums.OCROperationsKinds.ReturnFromAccountablePerson
	AND TypeOf(Source.Counterparty) = Type("CatalogRef.Individuals")
	AND ValueIsFilled(Source.Counterparty) Then
	
	Value = Source.Counterparty;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>30</Code>
							<Description>ReceiptCRNumber --&gt; ReceiptCRNumber</Description>
							<Order>800</Order>
							<Source Name="ReceiptCRNumber" Kind="Attribute" Type="Number"/>
							<Receiver Name="ReceiptCRNumber" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>31</Code>
							<Description>Comment --&gt; Comment</Description>
							<Order>850</Order>
							<Source Name="Comment" Kind="Attribute" Type="String"/>
							<Receiver Name="Comment" Kind="Attribute" Type="String"/>
						</Property>
						<Group>
							<Code>13</Code>
							<Description>PaymentDetails --&gt; PaymentDetails</Description>
							<Order>900</Order>
							<Source Name="PaymentDetails" Kind="TabularSection"/>
							<Receiver Name="PaymentDetails" Kind="TabularSection"/>
							<Property>
								<Code>15</Code>
								<Description>VATAmount --&gt; VATAmount</Description>
								<Order>50</Order>
								<Source Name="VATAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="VATAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>PaymentAmount --&gt; PaymentAmount</Description>
								<Order>100</Order>
								<Source Name="PaymentAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="PaymentAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>InvoiceForPayment --&gt; InvoiceForPayment</Description>
								<Order>150</Order>
								<Source Name="InvoiceForPayment" Kind="Attribute" Type="DocumentRef.QuotationToCustomer"/>
								<Receiver Name="InvoiceForPayment" Kind="Attribute"/>
							</Property>
							<Property>
								<Code>21</Code>
								<Description>CounterpartyContract --&gt; Contract</Description>
								<Order>200</Order>
								<Source Name="CounterpartyContract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
								<Receiver Name="Contract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
								<ConversionRuleCode>CounterpartyContracts                              </ConversionRuleCode>
							</Property>
							<Property>
								<Code>22</Code>
								<Description>MutualSettlementsCurrencyRate --&gt; Multiplicity</Description>
								<Order>250</Order>
								<Source Name="MutualSettlementsCurrencyRate" Kind="Attribute" Type="Number"/>
								<Receiver Name="Multiplicity" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>MutualSettlementsExchangeRate --&gt; ExchangeRate</Description>
								<Order>300</Order>
								<Source Name="MutualSettlementsExchangeRate" Kind="Attribute" Type="Number"/>
								<Receiver Name="ExchangeRate" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>AmountMutualSettlements --&gt; SettlementsAmount</Description>
								<Order>350</Order>
								<Source Name="AmountMutualSettlements" Kind="Attribute" Type="Number"/>
								<Receiver Name="SettlementsAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>27</Code>
								<Description>Deal --&gt; Document</Description>
								<Order>400</Order>
								<Source Name="Deal" Kind="Attribute"/>
								<Receiver Name="Document" Kind="Attribute"/>
							</Property>
							<Property>
								<Code>29</Code>
								<Description> --&gt; AdvanceFlag</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="AdvanceFlag" Kind="Attribute" Type="Boolean"/>
								<BeforeExport>Value = Not ValueIsFilled(CollectionObject.Deal);</BeforeExport>
							</Property>
							<Property>
								<Code>14</Code>
								<Description>VATRate --&gt; QueryTextVATRate</Description>
								<Order>500</Order>
								<Source Name="VATRate" Kind="Attribute" Type="EnumRef.VATRates"/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>QueryTextVATRate</ParameterForTransferName>
								<BeforeExport>Execute(Algorithms.FillParameterTableSectionVATRate);</BeforeExport>
							</Property>
							<Property Disable="true">
								<Code>32</Code>
								<Description>CashFlowItem --&gt; </Description>
								<Order>550</Order>
								<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="" Kind=""/>
							</Property>
						</Group>
						<Property>
							<Code>33</Code>
							<Description>--&gt; Correspondence</Description>
							<Order>950</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Correspondence" Kind="Attribute" Type="ChartOfAccountsRef.Managerial"/>
							<BeforeExport>If Source.OperationKind = Enums.OCROperationsKinds.EntrepreneurPesonalFinances Then 
	Value = "UndistributedProfit";
Else
	Cancel = True;
EndIf;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>PaymentExpense</Code>
					<Description>Document: Payment Instruction outgoing</Description>
					<Order>150</Order>
					<AfterImport>
If DataImportToInformationBaseMode() Then
	
	If ValueIsFilled(Object.Ref) Then
		CurrentOperationKind = CommonUse.ObjectAttributeValue(Object.Ref, "OperationKind");
		If CurrentOperationKind = Enums.OperationKindsPaymentExpense.Salary
			AND Object.OperationKind = Enums.OperationKindsPaymentExpense.Other Then
			Cancel = True;
		EndIf;
	EndIf;
	
	If Object.OperationKind &lt;&gt; Enums.OperationKindsPaymentExpense.Salary
		AND Object.PaymentDetails.Count() = 0 Then
		Object.PaymentDetails.Add();
		Object.PaymentDetails[0].PaymentAmount = Object.DocumentAmount;
	EndIf;
	
	// Fill in the document author.
	Execute(Algorithms.FillAuthor);
	
	// Filling counterparty's contract.
	Execute(Algorithms.FillCounterpartyContract);
	
	// Clear attributes that are not used for operations types.
	If Object.OperationKind = Enums.OperationKindsPaymentExpense.ToAdvanceHolder Then
		Object.Correspondence = Undefined;
		Object.TaxKind = Undefined;
		Object.Counterparty = Undefined;
		Object.PaymentDetails.Clear();
	ElsIf Object.OperationKind = Enums.OperationKindsPaymentExpense.Other Then
		Object.Counterparty = Undefined;
		Object.AdvanceHolder = Undefined;
		Object.Document = Undefined;
		Object.TaxKind = Undefined;
		Object.PaymentDetails.Clear();
	ElsIf Object.OperationKind = Enums.OperationKindsPaymentExpense.Taxes Then
		Object.Counterparty = Undefined;
		Object.AdvanceHolder = Undefined;
		Object.Document = Undefined;
		Object.Correspondence = Undefined;
		Object.PaymentDetails.Clear();
	EndIf;
	
	If Not ValueIsFilled(Object.BasisDocument)
		OR Not CommonUse.RefExists(Object.BasisDocument) Then
		Object.BasisDocument = Undefined;
	EndIf;
	
	If ValueIsFilled(Object.Counterparty)
		AND Object.Counterparty.DoOperationsByDocuments Then
		
		For Each TableRow IN Object.PaymentDetails Do
			If Not ValueIsFilled(TableRow.Document) 
				OR Not CommonUse.RefExists(TableRow.Document) Then
				TableRow.AdvanceFlag = True;
				TableRow.Document = Undefined;
			EndIf;
		EndDo;
		
	EndIf;
	
	// Fill in an advance holder
	If ObjectParameters &lt;&gt; Undefined Then
		Ind = ObjectParameters["Ind"];
		If ValueIsFilled(Ind) Then
			Employee = Catalogs.Employees.FindByAttribute("Ind", Ind);
			Object.AdvanceHolder = Employee;
		EndIf;
		
		If Not ValueIsFilled(Object.TaxKind) Then 
			
			TaxKindRow = ObjectParameters["TaxKindRow"];
			Execute(Algorithms.FillTaxKindDefault);
			
		EndIf;
		
	EndIf;
	
	// Fill in default values.
	If Not ValueIsFilled(Object.Item) Then
		If Object.OperationKind = Enums.OperationKindsPaymentExpense.ToCustomer Then
			Object.Item = Catalogs.CashFlowItems.PaymentFromCustomers;
		ElsIf Object.OperationKind = Enums.OperationKindsPaymentExpense.Vendor Then
			Object.Item = Catalogs.CashFlowItems.PaymentToVendor;
		Else
			Object.Item = Catalogs.CashFlowItems.Other;
		EndIf;
	EndIf;
	
	If Object.OperationKind = Enums.OperationKindsPaymentExpense.Other
		AND Not ValueIsFilled(Object.Correspondence) Then
		
		Object.Correspondence = ChartsOfAccounts.Managerial.OtherExpenses;
		
	EndIf;
	
	// Fill in the taxation mode.
	If Object.OperationKind = Enums.OperationKindsPaymentExpense.ToCustomer Then
		Object.VATTaxation = SmallBusinessServer.VATTaxation(Object.Company, , Object.Date);
	Else
		Object.VATTaxation = Enums.VATTaxationTypes.TaxableByVAT;
	EndIf;
	
	// Fill in VAT rate.
	If ObjectParameters &lt;&gt; Undefined Then
		ParametersOfTP = ObjectParameters.Get("PaymentDetailsTabularSection");
	EndIf;
	
	For Each CurRow IN Object.PaymentDetails Do
		Execute(Algorithms.FillVATRateByRow);
	EndDo;
	
EndIf;</AfterImport>
					<SynchronizeByID>true</SynchronizeByID>
					<ExchangeObjectPriority>below</ExchangeObjectPriority>
					<Source>DocumentRef.WriteOffFromCurrentAccount</Source>
					<Receiver>DocumentRef.PaymentExpense</Receiver>
					<Properties>
						<Property>
							<Code>1</Code>
							<Description>OperationKind --&gt; OperationKind</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Attribute" Type="EnumRef.OperationKindsCashWithdrawal"/>
							<Receiver Name="OperationKind" Kind="Attribute" Type="EnumRef.OperationsKindsPayment"/>
							<ConversionRuleCode>OperationKindsPaymentExpense                         </ConversionRuleCode>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Date --&gt; Date</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>Counterparty --&gt; Counterparty</Description>
							<Order>150</Order>
							<Source Name="Counterparty" Kind="Attribute" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Counterparty" Kind="Attribute" Type="CatalogRef.Counterparties"/>
							<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind &lt;&gt; Enums.OperationCashWithdrawalOfKinds.ReturnToCustomer
   AND Source.OperationKind &lt;&gt; Enums.OperationCashWithdrawalOfKinds.VendorsPayment Then
   Value = "";
EndIf;</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>5</Code>
							<Description>Number --&gt; Number</Description>
							<Order>200</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>Company --&gt; Company</Description>
							<Order>250</Order>
							<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<ConversionRuleCode>Companies                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>300</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Posted --&gt; Posted</Description>
							<Order>350</Order>
							<Source Name="Posted" Kind="Property" Type="Boolean"/>
							<Receiver Name="Posted" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>DocumentAmount --&gt; DocumentAmount</Description>
							<Order>400</Order>
							<Source Name="DocumentAmount" Kind="Attribute" Type="Number"/>
							<Receiver Name="DocumentAmount" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>DocumentCurrency --&gt; CashCurrency</Description>
							<Order>450</Order>
							<Source Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<Receiver Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>CashFlowItem --&gt; Item</Description>
							<Order>500</Order>
							<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="Item" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
							<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
							<BeforeExport>If Not ValueIsFilled(Source.CashFlowItem)
	  AND Source.PaymentDetails.Count() &gt; 0 Then
	Value = Source.PaymentDetails[0].CashFlowItem;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>16</Code>
							<Description>AccountOfCompany --&gt; BankAccount</Description>
							<Order>550</Order>
							<Source Name="AccountOfCompany" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="BankAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
							<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>Ind --&gt; Ind</Description>
							<Order>600</Order>
							<Source Name="Ind" Kind="Attribute" Type="CatalogRef.Individuals"/>
							<Receiver Name="" Kind=""/>
							<ParameterForTransferName>Ind</ParameterForTransferName>
							<BeforeExport>If Source.OperationKind = Enums.OperationCashWithdrawalOfKinds.EnumerationOfAccountablePerson
	AND TypeOf(Source.Ind) = Type("CatalogRef.Individuals")
	AND ValueIsFilled(Source.Ind) Then
	
	Value = Source.Ind;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>BasisDocument --&gt; BasisDocument</Description>
							<Order>650</Order>
							<Source Name="BasisDocument" Kind="Attribute"/>
							<Receiver Name="BasisDocument" Kind="Attribute"/>
						</Property>
						<Property>
							<Code>26</Code>
							<Description>IncomingDocumentDate --&gt; IncomingDocumentDate</Description>
							<Order>700</Order>
							<Source Name="IncomingDocumentDate" Kind="Attribute" Type="Date"/>
							<Receiver Name="IncomingDocumentDate" Kind="Attribute" Type="Date"/>
						</Property>
						<Property>
							<Code>27</Code>
							<Description>PaymentDestination --&gt; PaymentDestination</Description>
							<Order>750</Order>
							<Source Name="PaymentDestination" Kind="Attribute" Type="String"/>
							<Receiver Name="PaymentDestination" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>28</Code>
							<Description>IncomingDocumentNumber --&gt; IncomingDocumentNumber</Description>
							<Order>800</Order>
							<Source Name="IncomingDocumentNumber" Kind="Attribute" Type="String"/>
							<Receiver Name="IncomingDocumentNumber" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>29</Code>
							<Description>Comment --&gt; Comment</Description>
							<Order>850</Order>
							<Source Name="Comment" Kind="Attribute" Type="String"/>
							<Receiver Name="Comment" Kind="Attribute" Type="String"/>
						</Property>
						<Group>
							<Code>10</Code>
							<Description>PaymentDetails --&gt; PaymentDetails</Description>
							<Order>900</Order>
							<Source Name="PaymentDetails" Kind="TabularSection"/>
							<Receiver Name="PaymentDetails" Kind="TabularSection"/>
							<Property>
								<Code>12</Code>
								<Description>VATAmount --&gt; VATAmount</Description>
								<Order>100</Order>
								<Source Name="VATAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="VATAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>13</Code>
								<Description>PaymentAmount --&gt; PaymentAmount</Description>
								<Order>150</Order>
								<Source Name="PaymentAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="PaymentAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>17</Code>
								<Description>CounterpartyContract --&gt; Contract</Description>
								<Order>200</Order>
								<Source Name="CounterpartyContract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
								<Receiver Name="Contract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
								<ConversionRuleCode>CounterpartyContracts                              </ConversionRuleCode>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>MutualSettlementsCurrencyRate --&gt; Multiplicity</Description>
								<Order>250</Order>
								<Source Name="MutualSettlementsCurrencyRate" Kind="Attribute" Type="Number"/>
								<Receiver Name="Multiplicity" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>19</Code>
								<Description>MutualSettlementsExchangeRate --&gt; ExchangeRate</Description>
								<Order>300</Order>
								<Source Name="MutualSettlementsExchangeRate" Kind="Attribute" Type="Number"/>
								<Receiver Name="ExchangeRate" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>20</Code>
								<Description>AmountMutualSettlements --&gt; SettlementsAmount</Description>
								<Order>350</Order>
								<Source Name="AmountMutualSettlements" Kind="Attribute" Type="Number"/>
								<Receiver Name="SettlementsAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>Deal --&gt; Document</Description>
								<Order>400</Order>
								<Source Name="Deal" Kind="Attribute"/>
								<Receiver Name="Document" Kind="Attribute"/>
							</Property>
							<Property>
								<Code>24</Code>
								<Description> --&gt; AdvanceFlag</Description>
								<Order>450</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="AdvanceFlag" Kind="Attribute" Type="Boolean"/>
								<BeforeExport>Value = Not ValueIsFilled(CollectionObject.Deal);</BeforeExport>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>VATRate --&gt; QueryTextVATRate</Description>
								<Order>500</Order>
								<Source Name="VATRate" Kind="Attribute" Type="EnumRef.VATRates"/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>QueryTextVATRate</ParameterForTransferName>
								<BeforeExport>Execute(Algorithms.FillParameterTableSectionVATRate);</BeforeExport>
							</Property>
							<Property Disable="true">
								<Code>30</Code>
								<Description>CashFlowItem --&gt; </Description>
								<Order>550</Order>
								<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="" Kind=""/>
							</Property>
						</Group>
						<Property>
							<Code>31</Code>
							<Description>--&gt; TaxKindRow</Description>
							<Order>950</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="" Kind=""/>
							<ParameterForTransferName>TaxKindRow</ParameterForTransferName>
							<BeforeExport>If Source.OperationKind = Enums.OperationCashWithdrawalOfKinds.TaxTransfer Then

	If Source.GlAccountSettlementsWithCounterparties = ChartsOfAccounts.SelfSupporting.PIT Then
		TaxKindRow = "Income tax";
	ElsIf Source.GlAccountSettlementsWithCounterparties = ChartsOfAccounts.SelfSupporting.VAT Then
		TaxKindRow = "VAT";
	ElsIf Source.GlAccountSettlementsWithCounterparties.Parent = ChartsOfAccounts.SelfSupporting.ProfitTax Then
		TaxKindRow = "Income tax";
	ElsIf Find(Source.GlAccountSettlementsWithCounterparties.Code, "69") Then
		TaxKindRow = "ECH";
	Else
		TaxKindRow = "Other taxes and charges";
	EndIf;
	
	Value = TaxKindRow;
Else
	Empty = True;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>32</Code>
							<Description>--&gt; Correspondence</Description>
							<Order>1000</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Correspondence" Kind="Attribute" Type="ChartOfAccountsRef.Managerial"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationCashWithdrawalOfKinds.EntrepreneurPesonalFinances Then 
	Value = "UndistributedProfit";
Else
	Cancel = True;
EndIf;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>CashPayment</Code>
					<Description>Document: Consumable cash order</Description>
					<Order>200</Order>
					<AfterImport>
If DataImportToInformationBaseMode() Then
	
	If ValueIsFilled(Object.Ref) Then
		CurrentOperationKind = CommonUse.ObjectAttributeValue(Object.Ref, "OperationKind");
		If (CurrentOperationKind = Enums.OperationKindsCashPayment.Salary
			OR CurrentOperationKind = Enums.OperationKindsCashPayment.SalaryForEmployee)
			AND Object.OperationKind = Enums.OperationKindsCashPayment.Other Then
			Cancel = True;
		EndIf;
	EndIf;
	
	If Object.PaymentDetails.Count() = 0
		AND Object.OperationKind &lt;&gt; Enums.OperationKindsCashPayment.Salary Then
		Object.PaymentDetails.Add();
		Object.PaymentDetails[0].PaymentAmount = Object.DocumentAmount;
	EndIf;
	
	// Fill in the document author.
	Execute(Algorithms.FillAuthor);
	
	// Filling counterparty's contract.
	Execute(Algorithms.FillCounterpartyContract);
	
	// Clear attributes that are not used for operations types.
	If Object.OperationKind = Enums.OperationKindsCashPayment.ToAdvanceHolder Then
		Object.Correspondence = Undefined;
		Object.Counterparty = Undefined;
		Object.PaymentDetails.Clear();
		Object.TaxKind = Undefined;
		Object.PayrollPayment.Clear();
	ElsIf Object.OperationKind = Enums.OperationKindsCashPayment.Salary Then
		Object.Correspondence = Undefined;
		Object.Counterparty = Undefined;
		Object.AdvanceHolder = Undefined;
		Object.Document = Undefined;
		Object.PaymentDetails.Clear();
	ElsIf Object.OperationKind = Enums.OperationKindsCashPayment.Other Then
		Object.Counterparty = Undefined;
		Object.AdvanceHolder = Undefined;
		Object.Document = Undefined;
		Object.TaxKind = Undefined;
		Object.PaymentDetails.Clear();
		Object.PayrollPayment.Clear();
	ElsIf Object.OperationKind = Enums.OperationKindsCashPayment.Taxes Then
		Object.Counterparty = Undefined;
		Object.AdvanceHolder = Undefined;
		Object.Document = Undefined;
		Object.Correspondence = Undefined;
		Object.PaymentDetails.Clear();
	EndIf;
	
	If Not ValueIsFilled(Object.BasisDocument)
		OR Not CommonUse.RefExists(Object.BasisDocument) Then
		Object.BasisDocument = Undefined;
	EndIf;
	
	If ValueIsFilled(Object.Counterparty)
		AND Object.Counterparty.DoOperationsByDocuments Then
		
		For Each TableRow IN Object.PaymentDetails Do
			If Not ValueIsFilled(TableRow.Document) 
				OR Not CommonUse.RefExists(TableRow.Document) Then
				TableRow.AdvanceFlag = True;
				TableRow.Document = Undefined;
			EndIf;
		EndDo;
		
	EndIf;
	
	// Fill in an advance holder
	If ObjectParameters &lt;&gt; Undefined Then
		Ind = ObjectParameters["Ind"];
		If ValueIsFilled(Ind) Then
			Employee = Catalogs.Employees.FindByAttribute("Ind", Ind);
			Object.AdvanceHolder = Employee;
		EndIf;
	EndIf;
	
	// Fill in default values.
	If Not ValueIsFilled(Object.Item) Then
		If Object.OperationKind = Enums.OperationKindsCashPayment.ToCustomer Then
			Object.Item = Catalogs.CashFlowItems.PaymentFromCustomers;
		ElsIf Object.OperationKind = Enums.OperationKindsCashPayment.Vendor Then
			Object.Item = Catalogs.CashFlowItems.PaymentToVendor;
		Else
			Object.Item = Catalogs.CashFlowItems.Other;
		EndIf;
	EndIf;
	
	If Not ValueIsFilled(Object.PettyCash) Then
		PettyCashByDefault = Catalogs.PettyCashes.EmptyRef();
		Execute(Algorithms.FillCashDefault);
		Object.PettyCash = PettyCashByDefault;
	EndIf;
	
	If Object.OperationKind = Enums.OperationKindsCashPayment.Other
		AND Not ValueIsFilled(Object.Correspondence) Then
		Object.Correspondence = ChartsOfAccounts.Managerial.OtherExpenses;
	EndIf;
	
	// Fill in the taxation mode.
	If Object.OperationKind = Enums.OperationKindsCashPayment.ToCustomer Then
		Object.VATTaxation = SmallBusinessServer.VATTaxation(Object.Company, , Object.Date);
	Else
		Object.VATTaxation = Enums.VATTaxationTypes.TaxableByVAT;
	EndIf;
	
	// Fill in VAT rate.
	If ObjectParameters &lt;&gt; Undefined Then
		ParametersOfTP = ObjectParameters.Get("PaymentDetailsTabularSection");
	EndIf;
	
	For Each CurRow IN Object.PaymentDetails Do
		Execute(Algorithms.FillVATRateByRow);
	EndDo;
	
EndIf;</AfterImport>
					<SynchronizeByID>true</SynchronizeByID>
					<ExchangeObjectPriority>below</ExchangeObjectPriority>
					<Source>DocumentRef.ExpenseCashOrder</Source>
					<Receiver>DocumentRef.CashPayment</Receiver>
					<Properties>
						<Property>
							<Code>1</Code>
							<Description>OperationKind --&gt; OperationKind</Description>
							<Order>50</Order>
							<Source Name="OperationKind" Kind="Attribute" Type="EnumRef.GEOperationKinds"/>
							<Receiver Name="OperationKind" Kind="Attribute" Type="EnumRef.OperationsKindsCashPayment"/>
							<ConversionRuleCode>OperationKindsCashPayment                         </ConversionRuleCode>
						</Property>
						<Property>
							<Code>2</Code>
							<Description>Issue --&gt; Issue</Description>
							<Order>100</Order>
							<Source Name="Issue" Kind="Attribute" Type="String"/>
							<Receiver Name="Issue" Kind="Attribute" Type="String"/>
						</Property>
						<Property Search="true">
							<Code>3</Code>
							<Description>Date --&gt; Date</Description>
							<Order>150</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>Counterparty --&gt; Counterparty</Description>
							<Order>200</Order>
							<Source Name="Counterparty" Kind="Attribute"/>
							<Receiver Name="Counterparty" Kind="Attribute" Type="CatalogRef.Counterparties"/>
							<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
							<BeforeExport>If Source.OperationKind &lt;&gt; Enums.OperationKindsRKO.ReturnToCustomer
   AND Source.OperationKind &lt;&gt; Enums.OperationKindsRKO.VendorsPayment Then
   Value = "";
EndIf;</BeforeExport>
						</Property>
						<Property Search="true">
							<Code>6</Code>
							<Description>Number --&gt; Number</Description>
							<Order>250</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>Company --&gt; Company</Description>
							<Order>300</Order>
							<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<ConversionRuleCode>Companies                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Basis --&gt; Basis</Description>
							<Order>350</Order>
							<Source Name="Basis" Kind="Attribute" Type="String"/>
							<Receiver Name="Basis" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>400</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>Application --&gt; Application</Description>
							<Order>450</Order>
							<Source Name="Application" Kind="Attribute" Type="String"/>
							<Receiver Name="Application" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>Posted --&gt; Posted</Description>
							<Order>500</Order>
							<Source Name="Posted" Kind="Property" Type="Boolean"/>
							<Receiver Name="Posted" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>DocumentAmount --&gt; DocumentAmount</Description>
							<Order>550</Order>
							<Source Name="DocumentAmount" Kind="Attribute" Type="Number"/>
							<Receiver Name="DocumentAmount" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>DocumentCurrency --&gt; CashCurrency</Description>
							<Order>600</Order>
							<Source Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<Receiver Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>CashFlowItem --&gt; Item</Description>
							<Order>650</Order>
							<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
							<Receiver Name="Item" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
							<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
							<BeforeExport>If Not ValueIsFilled(Source.CashFlowItem)
	  AND Source.PaymentDetails.Count() &gt; 0 Then
	Value = Source.PaymentDetails[0].CashFlowItem;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>27</Code>
							<Description>BasisDocument --&gt; BasisDocument</Description>
							<Order>700</Order>
							<Source Name="BasisDocument" Kind="Attribute"/>
							<Receiver Name="BasisDocument" Kind="Attribute"/>
						</Property>
						<Property>
							<Code>28</Code>
							<Description>ByDocument --&gt; ByDocument</Description>
							<Order>750</Order>
							<Source Name="ByDocument" Kind="Attribute" Type="String"/>
							<Receiver Name="ByDocument" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>30</Code>
							<Description>--&gt; Ind</Description>
							<Order>800</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="" Kind=""/>
							<ParameterForTransferName>Ind</ParameterForTransferName>
							<BeforeExport>If (Source.OperationKind = Enums.OperationKindsRKO.IssuanceToAccountablePerson
	OR Source.OperationKind = Enums.OperationKindsRKO.SalaryPayEmployee)
	AND TypeOf(Source.Counterparty) = Type("CatalogRef.Individuals")
	AND ValueIsFilled(Source.Counterparty) Then
	
	Value = Source.Counterparty;
EndIf;</BeforeExport>
						</Property>
						<Property>
							<Code>34</Code>
							<Description>Comment --&gt; Comment</Description>
							<Order>850</Order>
							<Source Name="Comment" Kind="Attribute" Type="String"/>
							<Receiver Name="Comment" Kind="Attribute" Type="String"/>
						</Property>
						<Group>
							<Code>15</Code>
							<Description>PaymentDetails --&gt; PaymentDetails</Description>
							<Order>900</Order>
							<Source Name="PaymentDetails" Kind="TabularSection"/>
							<Receiver Name="PaymentDetails" Kind="TabularSection"/>
							<Property>
								<Code>17</Code>
								<Description>VATAmount --&gt; VATAmount</Description>
								<Order>50</Order>
								<Source Name="VATAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="VATAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>18</Code>
								<Description>PaymentAmount --&gt; PaymentAmount</Description>
								<Order>100</Order>
								<Source Name="PaymentAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="PaymentAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>23</Code>
								<Description>CounterpartyContract --&gt; Contract</Description>
								<Order>150</Order>
								<Source Name="CounterpartyContract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
								<Receiver Name="Contract" Kind="Attribute" Type="CatalogRef.CounterpartiesContracts"/>
								<ConversionRuleCode>CounterpartyContracts                              </ConversionRuleCode>
							</Property>
							<Property>
								<Code>24</Code>
								<Description>MutualSettlementsCurrencyRate --&gt; Multiplicity</Description>
								<Order>200</Order>
								<Source Name="MutualSettlementsCurrencyRate" Kind="Attribute" Type="Number"/>
								<Receiver Name="Multiplicity" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>25</Code>
								<Description>MutualSettlementsExchangeRate --&gt; ExchangeRate</Description>
								<Order>250</Order>
								<Source Name="MutualSettlementsExchangeRate" Kind="Attribute" Type="Number"/>
								<Receiver Name="ExchangeRate" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>26</Code>
								<Description>AmountMutualSettlements --&gt; SettlementsAmount</Description>
								<Order>300</Order>
								<Source Name="AmountMutualSettlements" Kind="Attribute" Type="Number"/>
								<Receiver Name="SettlementsAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>29</Code>
								<Description>Deal --&gt; Document</Description>
								<Order>350</Order>
								<Source Name="Deal" Kind="Attribute"/>
								<Receiver Name="Document" Kind="Attribute"/>
							</Property>
							<Property>
								<Code>31</Code>
								<Description> --&gt; AdvanceFlag</Description>
								<Order>400</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="AdvanceFlag" Kind="Attribute" Type="Boolean"/>
								<BeforeExport>Value = Not ValueIsFilled(CollectionObject.Deal);</BeforeExport>
							</Property>
							<Property>
								<Code>16</Code>
								<Description>VATRate --&gt; QueryTextVATRate</Description>
								<Order>450</Order>
								<Source Name="VATRate" Kind="Attribute" Type="EnumRef.VATRates"/>
								<Receiver Name="" Kind=""/>
								<ParameterForTransferName>QueryTextVATRate</ParameterForTransferName>
								<BeforeExport>Execute(Algorithms.FillParameterTableSectionVATRate);</BeforeExport>
							</Property>
							<Property Disable="true">
								<Code>35</Code>
								<Description>CashFlowItem --&gt; </Description>
								<Order>500</Order>
								<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="" Kind=""/>
							</Property>
						</Group>
						<Group>
							<Code>32</Code>
							<Description>PayrollPayment --&gt; PayrollPayment</Description>
							<Order>950</Order>
							<Source Name="PayrollPayment" Kind="TabularSection"/>
							<Receiver Name="PayrollPayment" Kind="TabularSection"/>
							<Property>
								<Code>33</Code>
								<Description>AmountToPayment --&gt; PaymentAmount</Description>
								<Order>50</Order>
								<Source Name="AmountToPayment" Kind="Attribute" Type="Number"/>
								<Receiver Name="PaymentAmount" Kind="Attribute" Type="Number"/>
							</Property>
						</Group>
						<Property>
							<Code>36</Code>
							<Description>--&gt; Correspondence</Description>
							<Order>1000</Order>
							<Source Name="" Kind=""/>
							<Receiver Name="Correspondence" Kind="Attribute" Type="ChartOfAccountsRef.Managerial"/>
							<BeforeExport>If Source.OperationKind = Enums.OperationKindsRKO.EntrepreneurPesonalFinances Then 
	Value = "UndistributedProfit";
Else
	Cancel = True;
EndIf;</BeforeExport>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>PaymentOrder</Code>
					<Description>Document: Payment Instruction</Description>
					<Order>350</Order>
					<AfterImport>// Fill in the document author
Execute(Algorithms.FillAuthor);

Execute(Algorithms.FillInVatRateCaps);

If Not ValueIsFilled(Object.BasisDocument)
	OR Not CommonUse.RefExists(Object.BasisDocument) Then
	Object.BasisDocument = Undefined;
EndIf;</AfterImport>
					<SynchronizeByID>true</SynchronizeByID>
					<Source>DocumentRef.PaymentOrder</Source>
					<Receiver>DocumentRef.PaymentOrder</Receiver>
					<Properties>
						<Property>
							<Code>1</Code>
							<Description>TransferToBudgetKind --&gt; TransferToBudgetKind</Description>
							<Order>50</Order>
							<Source Name="TransferToBudgetKind" Kind="Attribute" Type="EnumRef.TransferToBudgetKinds"/>
							<Receiver Name="TransferToBudgetKind" Kind="Attribute" Type="EnumRef.TransferToBudgetKinds"/>
							<ConversionRuleCode>BudgetTransferKinds                           </ConversionRuleCode>
						</Property>
						<Property>
							<Code>2</Code>
							<Description>PaymentKind --&gt; PaymentKind</Description>
							<Order>100</Order>
							<Source Name="PaymentKind" Kind="Attribute" Type="String"/>
							<Receiver Name="PaymentKind" Kind="Attribute" Type="String"/>
						</Property>
						<Property Search="true">
							<Code>3</Code>
							<Description>Date --&gt; Date</Description>
							<Order>150</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property>
							<Code>4</Code>
							<Description>PayerTIN --&gt; PayerTIN</Description>
							<Order>200</Order>
							<Source Name="PayerTIN" Kind="Attribute" Type="String"/>
							<Receiver Name="PayerTIN" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>5</Code>
							<Description>PayeeTIN --&gt; PayeeTIN</Description>
							<Order>250</Order>
							<Source Name="PayeeTIN" Kind="Attribute" Type="String"/>
							<Receiver Name="PayeeTIN" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>6</Code>
							<Description>BKCode --&gt; BKCode</Description>
							<Order>300</Order>
							<Source Name="BKCode" Kind="Attribute" Type="String"/>
							<Receiver Name="BKCode" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>7</Code>
							<Description>OKATOCode --&gt; OKATOCode</Description>
							<Order>350</Order>
							<Source Name="OKATOCode" Kind="Attribute" Type="String"/>
							<Receiver Name="OKATOCode" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>8</Code>
							<Description>Comment --&gt; Comment</Description>
							<Order>400</Order>
							<Source Name="Comment" Kind="Attribute" Type="String"/>
							<Receiver Name="Comment" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>9</Code>
							<Description>Counterparty --&gt; Counterparty</Description>
							<Order>450</Order>
							<Source Name="Counterparty" Kind="Attribute" Type="CatalogRef.Counterparties"/>
							<Receiver Name="Counterparty" Kind="Attribute" Type="CatalogRef.Counterparties"/>
							<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>10</Code>
							<Description>PayerKPP --&gt; PayerKPP</Description>
							<Order>500</Order>
							<Source Name="PayerKPP" Kind="Attribute" Type="String"/>
							<Receiver Name="PayerKPP" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>11</Code>
							<Description>PayeeKPP --&gt; PayeeKPP</Description>
							<Order>550</Order>
							<Source Name="PayeeKPP" Kind="Attribute" Type="String"/>
							<Receiver Name="PayeeKPP" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>12</Code>
							<Description>PaymentDestination --&gt; PaymentDestination</Description>
							<Order>600</Order>
							<Source Name="PaymentDestination" Kind="Attribute" Type="String"/>
							<Receiver Name="PaymentDestination" Kind="Attribute" Type="String"/>
						</Property>
						<Property Search="true">
							<Code>13</Code>
							<Description>Number --&gt; Number</Description>
							<Order>650</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
						<Property>
							<Code>14</Code>
							<Description>Company --&gt; Company</Description>
							<Order>700</Order>
							<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
							<ConversionRuleCode>Companies                                       </ConversionRuleCode>
						</Property>
						<Property>
							<Code>15</Code>
							<Description>PaymentPriority --&gt; PaymentPriority</Description>
							<Order>750</Order>
							<Source Name="PaymentPriority" Kind="Attribute" Type="Number"/>
							<Receiver Name="PaymentPriority" Kind="Attribute" Type="Number"/>
						</Property>
						<Property Disable="true">
							<Code>16</Code>
							<Description>DateIndicator --&gt; DateIndicator</Description>
							<Order>800</Order>
							<Source Name="DateIndicator" Kind="Attribute" Type="String"/>
							<Receiver Name="DateIndicator" Kind="Attribute" Type="Date"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>NumberIndicator --&gt; NumberIndicator</Description>
							<Order>850</Order>
							<Source Name="NumberIndicator" Kind="Attribute" Type="String"/>
							<Receiver Name="NumberIndicator" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>BasisIndicator --&gt; BasisIndicator</Description>
							<Order>900</Order>
							<Source Name="BasisIndicator" Kind="Attribute" Type="String"/>
							<Receiver Name="BasisIndicator" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>PeriodIndicator --&gt; PeriodIndicator</Description>
							<Order>950</Order>
							<Source Name="PeriodIndicator" Kind="Attribute" Type="String"/>
							<Receiver Name="PeriodIndicator" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>TypeIndicator --&gt; TypeIndicator</Description>
							<Order>1000</Order>
							<Source Name="TypeIndicator" Kind="Attribute" Type="String"/>
							<Receiver Name="TypeIndicator" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>31</Code>
							<Description>Comment --&gt; Comment</Description>
							<Order>1050</Order>
							<Source Name="Comment" Kind="Attribute" Type="String"/>
							<Receiver Name="Comment" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>DeletionMark --&gt; DeletionMark</Description>
							<Order>1100</Order>
							<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
							<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>VATRate --&gt; QueryTextVATRate</Description>
							<Order>1150</Order>
							<Source Name="VATRate" Kind="Attribute" Type="EnumRef.VATRates"/>
							<Receiver Name="" Kind=""/>
							<ParameterForTransferName>QueryTextVATRate</ParameterForTransferName>
							<BeforeExport>Execute(Algorithms.FillVATHeaderRateParameter);</BeforeExport>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>AuthorStatus --&gt; AuthorStatus</Description>
							<Order>1200</Order>
							<Source Name="AuthorStatus" Kind="Attribute" Type="String"/>
							<Receiver Name="AuthorStatus" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>33</Code>
							<Description>DocumentCurrency --&gt; DocumentCurrency</Description>
							<Order>1250</Order>
							<Source Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<Receiver Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
							<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
						</Property>
						<Property>
							<Code>24</Code>
							<Description>DocumentAmount --&gt; DocumentAmount</Description>
							<Order>1300</Order>
							<Source Name="DocumentAmount" Kind="Attribute" Type="Number"/>
							<Receiver Name="DocumentAmount" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>25</Code>
							<Description>VATAmount --&gt; VATAmount</Description>
							<Order>1350</Order>
							<Source Name="VATAmount" Kind="Attribute" Type="Number"/>
							<Receiver Name="VATAmount" Kind="Attribute" Type="Number"/>
						</Property>
						<Property>
							<Code>26</Code>
							<Description>CounterpartyAccount --&gt; CounterpartyAccount</Description>
							<Order>1400</Order>
							<Source Name="CounterpartyAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="CounterpartyAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
							<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>27</Code>
							<Description>PayerText --&gt; PayerText</Description>
							<Order>1450</Order>
							<Source Name="PayerText" Kind="Attribute" Type="String"/>
							<Receiver Name="PayerText" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>28</Code>
							<Description>PayeeText --&gt; PayeeText</Description>
							<Order>1500</Order>
							<Source Name="PayeeText" Kind="Attribute" Type="String"/>
							<Receiver Name="PayeeText" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>29</Code>
							<Description>AccountOfCompany --&gt; BankAccount</Description>
							<Order>1550</Order>
							<Source Name="AccountOfCompany" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
							<Receiver Name="BankAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
							<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
						</Property>
						<Property>
							<Code>30</Code>
							<Description>PaymentToBudget --&gt; OperationKind</Description>
							<Order>1600</Order>
							<Source Name="PaymentToBudget" Kind="Attribute" Type="Boolean"/>
							<Receiver Name="OperationKind" Kind="Attribute" Type="EnumRef.OperationsKindsPaymentOrder"/>
							<BeforeExport>Expression = ?(Source.PaymentToBudget, "Enums.OperationKindsPaymentOrder.TaxTransfer", "Enums.OperationKindsPaymentOrder.Payment");</BeforeExport>
						</Property>
						<Property>
							<Code>32</Code>
							<Description>Paid --&gt; Paid</Description>
							<Order>1650</Order>
							<Source Name="Paid" Kind="Attribute" Type="Boolean"/>
							<Receiver Name="Paid" Kind="Attribute" Type="Boolean"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Group>
					<Code>FundsTransfer</Code>
					<Description>FundsTransfer</Description>
					<Order>400</Order>
					<Rule>
						<Code>GoodsReceiptCashTransfer</Code>
						<Description>Document: Receipt cash order</Description>
						<Order>50</Order>
						<AfterImport>// Fill in the document author.
Execute(Algorithms.FillAuthor);

// Fill in default values.
If Not ValueIsFilled(Object.CashPayee) Then
	PettyCashByDefault = Catalogs.PettyCashes.EmptyRef();
	Execute(Algorithms.FillCashDefault);
	Object.CashPayee = PettyCashByDefault;
EndIf;

If Not ValueIsFilled(Object.Item) Then
	Object.Item = Catalogs.CashFlowItems.Other;
EndIf;

If Not ValueIsFilled(Object.BasisDocument)
	OR Not CommonUse.RefExists(Object.BasisDocument) Then
	Object.BasisDocument = Undefined;
EndIf;
</AfterImport>
						<SynchronizeByID>true</SynchronizeByID>
						<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
						<Source>DocumentRef.ReceiptCashOrder</Source>
						<Receiver>DocumentRef.CashTransfer</Receiver>
						<Properties>
							<Property Search="true">
								<Code>5</Code>
								<Description>Date --&gt; Date</Description>
								<Order>50</Order>
								<Source Name="Date" Kind="Property" Type="Date"/>
								<Receiver Name="Date" Kind="Property" Type="Date"/>
							</Property>
							<Property Disable="true" Search="true">
								<Code>6</Code>
								<Description>Number --&gt; Number</Description>
								<Order>100</Order>
								<Source Name="Number" Kind="Property" Type="String"/>
								<Receiver Name="Number" Kind="Property" Type="String"/>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>Company --&gt; Company</Description>
								<Order>150</Order>
								<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
								<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
								<ConversionRuleCode>Companies                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>4</Code>
								<Description>DocumentAmount --&gt; DocumentAmount</Description>
								<Order>200</Order>
								<Source Name="DocumentAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="DocumentAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>250</Order>
								<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
								<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>Posted --&gt; Posted</Description>
								<Order>300</Order>
								<Source Name="Posted" Kind="Property" Type="Boolean"/>
								<Receiver Name="Posted" Kind="Property" Type="Boolean"/>
							</Property>
							<Property>
								<Code>2</Code>
								<Description>Comment --&gt; Comment</Description>
								<Order>350</Order>
								<Source Name="Comment" Kind="Attribute" Type="String"/>
								<Receiver Name="Comment" Kind="Attribute" Type="String"/>
							</Property>
							<Property>
								<Code>1</Code>
								<Description>BasisDocument --&gt; BasisDocument</Description>
								<Order>400</Order>
								<Source Name="BasisDocument" Kind="Attribute"/>
								<Receiver Name="BasisDocument" Kind="Attribute" Type="DocumentRef.CashTransferPlan"/>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>DocumentCurrency --&gt; CashCurrency</Description>
								<Order>450</Order>
								<Source Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
								<Receiver Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
								<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>CashFlowItem --&gt; Item</Description>
								<Order>500</Order>
								<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="Item" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>Counterparty --&gt; BankAccount</Description>
								<Order>550</Order>
								<Source Name="Counterparty" Kind="Attribute"/>
								<Receiver Name="BankAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
								<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
							</Property>
							<Property>
								<Code>12</Code>
								<Description> --&gt; CashCRType</Description>
								<Order>600</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="CashCRType" Kind="Attribute" Type="EnumRef.CashAssetTypes"/>
								<BeforeExport>Value = "Noncash";</BeforeExport>
							</Property>
							<Property>
								<Code>13</Code>
								<Description> --&gt; CashAssetsTypePayee</Description>
								<Order>650</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="CashAssetsTypePayee" Kind="Attribute" Type="EnumRef.CashAssetTypes"/>
								<BeforeExport>Value = "Cash";</BeforeExport>
							</Property>
						</Properties>
						<Values/>
					</Rule>
					<Rule>
						<Code>GoodsExpenseCashTransfer</Code>
						<Description>Document: Consumable cash order</Description>
						<Order>100</Order>
						<AfterImport>// Fill in the document author.
Execute(Algorithms.FillAuthor);

// Fill in default values.
If Not ValueIsFilled(Object.PettyCash) Then
	PettyCashByDefault = Catalogs.PettyCashes.EmptyRef();
	Execute(Algorithms.FillCashDefault);
	Object.PettyCash = PettyCashByDefault;
EndIf;

If Not ValueIsFilled(Object.Item) Then
	Object.Item = Catalogs.CashFlowItems.Other;
EndIf;

If Not ValueIsFilled(Object.BasisDocument)
	OR Not CommonUse.RefExists(Object.BasisDocument) Then
	Object.BasisDocument = Undefined;
EndIf;
</AfterImport>
						<SynchronizeByID>true</SynchronizeByID>
						<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
						<Source>DocumentRef.ExpenseCashOrder</Source>
						<Receiver>DocumentRef.CashTransfer</Receiver>
						<Properties>
							<Property Search="true">
								<Code>5</Code>
								<Description>Date --&gt; Date</Description>
								<Order>50</Order>
								<Source Name="Date" Kind="Property" Type="Date"/>
								<Receiver Name="Date" Kind="Property" Type="Date"/>
							</Property>
							<Property Disable="true" Search="true">
								<Code>6</Code>
								<Description>Number --&gt; Number</Description>
								<Order>100</Order>
								<Source Name="Number" Kind="Property" Type="String"/>
								<Receiver Name="Number" Kind="Property" Type="String"/>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>Company --&gt; Company</Description>
								<Order>150</Order>
								<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
								<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
								<ConversionRuleCode>Companies                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>4</Code>
								<Description>DocumentAmount --&gt; DocumentAmount</Description>
								<Order>200</Order>
								<Source Name="DocumentAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="DocumentAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>250</Order>
								<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
								<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>Posted --&gt; Posted</Description>
								<Order>300</Order>
								<Source Name="Posted" Kind="Property" Type="Boolean"/>
								<Receiver Name="Posted" Kind="Property" Type="Boolean"/>
							</Property>
							<Property>
								<Code>2</Code>
								<Description>Comment --&gt; Comment</Description>
								<Order>350</Order>
								<Source Name="Comment" Kind="Attribute" Type="String"/>
								<Receiver Name="Comment" Kind="Attribute" Type="String"/>
							</Property>
							<Property>
								<Code>1</Code>
								<Description>BasisDocument --&gt; BasisDocument</Description>
								<Order>400</Order>
								<Source Name="BasisDocument" Kind="Attribute"/>
								<Receiver Name="BasisDocument" Kind="Attribute" Type="DocumentRef.CashTransferPlan"/>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>DocumentCurrency --&gt; CashCurrency</Description>
								<Order>450</Order>
								<Source Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
								<Receiver Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
								<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>CashFlowItem --&gt; Item</Description>
								<Order>500</Order>
								<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="Item" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>AccountOfCompany --&gt; BankAccountPayee</Description>
								<Order>600</Order>
								<Source Name="AccountOfCompany" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
								<Receiver Name="BankAccountPayee" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
								<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
							</Property>
							<Property>
								<Code>13</Code>
								<Description> --&gt; CashCRType</Description>
								<Order>650</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="CashCRType" Kind="Attribute" Type="EnumRef.CashAssetTypes"/>
								<BeforeExport>Value = "Cash";</BeforeExport>
							</Property>
							<Property>
								<Code>14</Code>
								<Description> --&gt; CashAssetsTypePayee</Description>
								<Order>700</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="CashAssetsTypePayee" Kind="Attribute" Type="EnumRef.CashAssetTypes"/>
								<BeforeExport>Value = "Noncash";</BeforeExport>
							</Property>
						</Properties>
						<Values/>
					</Rule>
					<Rule>
						<Code>WriteoffFromCurrentAccountCashTransfer</Code>
						<Description>Document: WriteOff From calculation account</Description>
						<Order>200</Order>
						<AfterImport>// Fill in the document author.
Execute(Algorithms.FillAuthor);

// Fill in default values.
If Not ValueIsFilled(Object.Item) Then
	Object.Item = Catalogs.CashFlowItems.Other;
EndIf;

If Not ValueIsFilled(Object.BasisDocument)
	OR Not CommonUse.RefExists(Object.BasisDocument) Then
	Object.BasisDocument = Undefined;
EndIf;
</AfterImport>
						<SynchronizeByID>true</SynchronizeByID>
						<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
						<Source>DocumentRef.WriteOffFromCurrentAccount</Source>
						<Receiver>DocumentRef.CashTransfer</Receiver>
						<Properties>
							<Property Search="true">
								<Code>1</Code>
								<Description>Date --&gt; Date</Description>
								<Order>50</Order>
								<Source Name="Date" Kind="Property" Type="Date"/>
								<Receiver Name="Date" Kind="Property" Type="Date"/>
							</Property>
							<Property Disable="true" Search="true">
								<Code>4</Code>
								<Description>Number --&gt; Number</Description>
								<Order>100</Order>
								<Source Name="Number" Kind="Property" Type="String"/>
								<Receiver Name="Number" Kind="Property" Type="String"/>
							</Property>
							<Property>
								<Code>5</Code>
								<Description>Company --&gt; Company</Description>
								<Order>150</Order>
								<Source Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
								<Receiver Name="Company" Kind="Attribute" Type="CatalogRef.Companies"/>
								<ConversionRuleCode>Companies                                       </ConversionRuleCode>
							</Property>
							<Property>
								<Code>8</Code>
								<Description>DocumentAmount --&gt; DocumentAmount</Description>
								<Order>200</Order>
								<Source Name="DocumentAmount" Kind="Attribute" Type="Number"/>
								<Receiver Name="DocumentAmount" Kind="Attribute" Type="Number"/>
							</Property>
							<Property>
								<Code>6</Code>
								<Description>DeletionMark --&gt; DeletionMark</Description>
								<Order>250</Order>
								<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
								<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
							</Property>
							<Property>
								<Code>7</Code>
								<Description>Posted --&gt; Posted</Description>
								<Order>300</Order>
								<Source Name="Posted" Kind="Property" Type="Boolean"/>
								<Receiver Name="Posted" Kind="Property" Type="Boolean"/>
							</Property>
							<Property>
								<Code>3</Code>
								<Description>Comment --&gt; Comment</Description>
								<Order>350</Order>
								<Source Name="Comment" Kind="Attribute" Type="String"/>
								<Receiver Name="Comment" Kind="Attribute" Type="String"/>
							</Property>
							<Property>
								<Code>2</Code>
								<Description>BasisDocument --&gt; BasisDocument</Description>
								<Order>400</Order>
								<Source Name="BasisDocument" Kind="Attribute"/>
								<Receiver Name="BasisDocument" Kind="Attribute" Type="DocumentRef.CashTransferPlan"/>
							</Property>
							<Property>
								<Code>9</Code>
								<Description>DocumentCurrency --&gt; CashCurrency</Description>
								<Order>450</Order>
								<Source Name="DocumentCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
								<Receiver Name="CashCurrency" Kind="Attribute" Type="CatalogRef.Currencies"/>
								<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
							</Property>
							<Property>
								<Code>10</Code>
								<Description>CashFlowItem --&gt; Item</Description>
								<Order>500</Order>
								<Source Name="CashFlowItem" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<Receiver Name="Item" Kind="Attribute" Type="CatalogRef.CashFlowItems"/>
								<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
							</Property>
							<Property>
								<Code>11</Code>
								<Description>AccountOfCompany --&gt; BankAccount</Description>
								<Order>550</Order>
								<Source Name="AccountOfCompany" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
								<Receiver Name="BankAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
								<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
							</Property>
							<Property>
								<Code>12</Code>
								<Description>CounterpartyAccount --&gt; BankAccountPayee</Description>
								<Order>600</Order>
								<Source Name="CounterpartyAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
								<Receiver Name="BankAccountPayee" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
								<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
							</Property>
							<Property>
								<Code>13</Code>
								<Description> --&gt; CashCRType</Description>
								<Order>650</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="CashCRType" Kind="Attribute" Type="EnumRef.CashAssetTypes"/>
								<BeforeExport>Value = "Noncash";</BeforeExport>
							</Property>
							<Property>
								<Code>14</Code>
								<Description> --&gt; CashAssetsTypePayee</Description>
								<Order>700</Order>
								<Source Name="" Kind=""/>
								<Receiver Name="CashAssetsTypePayee" Kind="Attribute" Type="EnumRef.CashAssetTypes"/>
								<BeforeExport>Value = "Noncash";</BeforeExport>
							</Property>
						</Properties>
						<Values/>
					</Rule>
				</Group>
			</Group>
			<Group>
				<Code>AccountsDocuments</Code>
				<Description>AccountsDocuments</Description>
				<Order>350</Order>
				<Rule>
					<Code>AcceptanceCertificate</Code>
					<Description>Document: Act about providing production services</Description>
					<Order>400</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.ActOnProvisionOfIndustrialServices</Source>
					<Receiver>DocumentRef.AcceptanceCertificate</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Number --&gt; Number</Description>
							<Order>50</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Date --&gt; Date</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ExpenseReport</Code>
					<Description>Document: Expense report</Description>
					<Order>401</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.ExpenseReport</Source>
					<Receiver>DocumentRef.ExpenseReport</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Date --&gt; Date</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Number --&gt; Number</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>AgentReport</Code>
					<Description>Document: Report comissionare (agent) O sales</Description>
					<Order>402</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.AgentSalesReport</Source>
					<Receiver>DocumentRef.AgentReport</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Date --&gt; Date</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Number --&gt; Number</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ReturnOfProductsFromCustomer</Code>
					<Description>Document: Return products from customer</Description>
					<Order>404</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.ReturnOfProductsFromCustomer</Source>
					<Receiver>DocumentRef.SupplierInvoice</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Date --&gt; Date</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Number --&gt; Number</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ReportToPrincipal</Code>
					<Description>Document: Report consignor (principal) O sales</Description>
					<Order>405</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.SalesReportToPrincipal</Source>
					<Receiver>DocumentRef.ReportToPrincipal</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Number --&gt; Number</Description>
							<Order>50</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Date --&gt; Date</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>ReturnProductsToSupplier</Code>
					<Description>Document: Report consignor (principal) O sales</Description>
					<Order>406</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.ReturnProductsToSupplier</Source>
					<Receiver>DocumentRef.CustomerInvoice</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Date --&gt; Date</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Number --&gt; Number</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>SupplierInvoice</Code>
					<Description>Document: Receipt products and services</Description>
					<Order>407</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.ReceiptOfGoodsAndServices</Source>
					<Receiver>DocumentRef.SupplierInvoice</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Date --&gt; Date</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Number --&gt; Number</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>TransferOfProducts</Code>
					<Description>Document: Transfer products</Description>
					<Order>408</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.TransferOfProducts</Source>
					<Receiver>DocumentRef.CustomerInvoice</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Date --&gt; Date</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Number --&gt; Number</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>CustomerInvoice</Code>
					<Description>Document: Implementation products and services</Description>
					<Order>409</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.GoodsServicesSale</Source>
					<Receiver>DocumentRef.CustomerInvoice</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Date --&gt; Date</Description>
							<Order>50</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Number --&gt; Number</Description>
							<Order>100</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
				<Rule>
					<Code>AdditionalCosts</Code>
					<Description>Document: Implementation products and services</Description>
					<Order>410</Order>
					<SynchronizeByID>true</SynchronizeByID>
					<DoNotCreateIfNotFound>true</DoNotCreateIfNotFound>
					<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
					<Source>DocumentRef.ReceiptOfAdditionalCosts</Source>
					<Receiver>DocumentRef.AdditionalCosts</Receiver>
					<Properties>
						<Property Search="true">
							<Code>1</Code>
							<Description>Number --&gt; Number</Description>
							<Order>50</Order>
							<Source Name="Number" Kind="Property" Type="String"/>
							<Receiver Name="Number" Kind="Property" Type="String"/>
						</Property>
						<Property Search="true">
							<Code>2</Code>
							<Description>Date --&gt; Date</Description>
							<Order>100</Order>
							<Source Name="Date" Kind="Property" Type="Date"/>
							<Receiver Name="Date" Kind="Property" Type="Date"/>
						</Property>
					</Properties>
					<Values/>
				</Rule>
			</Group>
		</Group>
	</ObjectConversionRules>
	<DataUnloadRules>
		<Group Disable="false">
			<Code>Catalogs</Code>
			<Description>Catalogs</Description>
			<Order>50</Order>
			<Rule Disable="false">
				<Code>CashFlowItems</Code>
				<Description>Catalog "Cash flow items"</Description>
				<Order>50</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>CashFlowItems                     </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.CashFlowItems</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>CCDNumbers</Code>
				<Description>Catalog "CCD numbers"</Description>
				<Order>150</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>CCDNumbers                                         </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.CCDNumbers</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ProductsAndServicesCategories</Code>
				<Description>Catalog "Products and services categories"</Description>
				<Order>200</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>ProductsAndServicesCategories                              </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ProductsAndServicesCategories</SelectionObject>
				<BeforeObjectExport>If Object.IsFolder Then
	Cancel = True;
EndIf;</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>ProductsAndServices</Code>
				<Description>Catalog "ProductsAndServices"</Description>
				<Order>250</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>ProductsAndServices                                      </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ProductsAndServices</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>UOMClassifier</Code>
				<Description>Catalog "UOM classifier"</Description>
				<Order>350</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>UOMClassifier                      </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.UOMClassifier</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>CounterpartyContracts</Code>
				<Description>Catalog "Counterparty's Contracts"</Description>
				<Order>450</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>CounterpartyContracts                              </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.CounterpartyContracts</SelectionObject>
				<BeforeObjectExport>If Object.IsFolder Then
	Cancel = True;
EndIf;</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>Banks</Code>
				<Description>Banks</Description>
				<Order>525</Order>
				<ConversionRuleCode>Banks                                             </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Banks</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>BankAccounts</Code>
				<Description>Catalog "Bank accounts"</Description>
				<Order>550</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.BankAccounts</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Individuals</Code>
				<Description>Catalog "Individuals"</Description>
				<Order>650</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>Individuals                                    </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Individuals</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Counterparties</Code>
				<Description>Catalog "Counterparties"</Description>
				<Order>700</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Counterparties</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Companies</Code>
				<Description>Companies catalog</Description>
				<Order>750</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>Companies                                       </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Companies</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Currencies</Code>
				<Description>Currencies catalog</Description>
				<Order>800</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>Currencies                                            </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Currencies</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Warehouses</Code>
				<Description>Catalog "Warehouses"</Description>
				<Order>900</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>StructuralUnits                                </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Warehouses</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>SpecificationsProductsAndServices</Code>
				<Description>Catalog "Products and services specifications"</Description>
				<Order>1000</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>Specifications                                      </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.SpecificationsProductsAndServices</SelectionObject>
				<BeforeObjectExport>If Object.IsFolder Then
	Cancel = True;
EndIf;</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>PriceTypesProductsAndServices</Code>
				<Description>Catalog "Products and services prices types"</Description>
				<Order>1050</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>PriceKinds                                           </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.PriceTypesProductsAndServices</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>UnitCompanies</Code>
				<Description>Catalog "Companies divisions"</Description>
				<Order>1150</Order>
				<Description>Filter data exchange: DoDump</Description>
				<ConversionRuleCode>Divisions                                     </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.UnitCompanies</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>ContactInformationTypes</Code>
				<Description>Kinds contact information</Description>
				<Order>1200</Order>
				<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.ContactInformationTypes</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>AlcoholicProductsKinds</Code>
				<Description>Kinds alcohol products</Description>
				<Order>1250</Order>
				<ConversionRuleCode>AlcoholicProductsKinds                          </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.AlcoholicProductsKinds</SelectionObject>
			</Rule>
		</Group>
		<Group Disable="false">
			<Code>InformationRegisters</Code>
			<Description>InformationRegisters</Description>
			<Order>100</Order>
			<Rule Disable="false">
				<Code>SNPIndividuals</Code>
				<Description>SNPIndividuals</Description>
				<Order>50</Order>
				<ConversionRuleCode>IndividualsDescriptionFull                                         </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>InformationRegisterRecord.SNPIndividuals</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>AlcoholicProductsVendorLicenses</Code>
				<Description>Licenses vendors alcohol products</Description>
				<Order>100</Order>
				<ConversionRuleCode>AlcoholicProductsVendorLicenses           </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>InformationRegisterRecord.AlcoholicProductsVendorLicenses</SelectionObject>
				<BeforeObjectExport>	
For Each Record IN Object Do
		
	Value = New Structure();
	Value.Insert("Ref");
	Value.Insert("LicenseKind");
	Value.Insert("Vendor");
	Value.Insert("Period");
	Value.Insert("EndDate");
	Value.Insert("IssuedBy");
	Value.Insert("SeriesNumber");
	FillPropertyValues(Value, Record);
		
	DumpByRule(Value,,,, "AlcoholicProductsVendorLicenses");
		
EndDo;
	
Cancel = True;</BeforeObjectExport>
			</Rule>
		</Group>
		<Group Disable="false">
			<Code>Documents</Code>
			<Description>Documents</Description>
			<Order>150</Order>
			<Group Disable="false">
				<Code>CashAssets</Code>
				<Description>CashAssets</Description>
				<Order>300</Order>
				<Rule Disable="false">
					<Code>ExpenseCashOrder</Code>
					<Description>Document "Cash payment voucher"</Description>
					<Order>1250</Order>
					<Description>Filter data exchange: DoDump</Description>
					<ConversionRuleCode>CashPayment                                     </ConversionRuleCode>
					<DataSelectionVariant>StandardSelection</DataSelectionVariant>
					<SelectionObject>DocumentRef.ExpenseCashOrder</SelectionObject>
					<BeforeObjectExport>If Object.OperationKind = Enums.OperationKindsRKO.CashInBank Then
	OCRName = "GoodsExpenseCashTransfer";
Else
	OCRName = "CashPayment";
EndIf;</BeforeObjectExport>
				</Rule>
				<Rule Disable="false">
					<Code>ReceiptCashOrder</Code>
					<Description>Document "Cash receipt"</Description>
					<Order>1300</Order>
					<Description>Filter data exchange: DoDump</Description>
					<ConversionRuleCode>CashReceipt                                 </ConversionRuleCode>
					<DataSelectionVariant>StandardSelection</DataSelectionVariant>
					<SelectionObject>DocumentRef.ReceiptCashOrder</SelectionObject>
					<BeforeObjectExport>If Object.OperationKind = Enums.OCROperationsKinds.ReceiptOfCashInBank Then
	OCRName = "GoodsReceiptCashTransfer";
Else
	OCRName = "CashReceipt";
EndIf;</BeforeObjectExport>
				</Rule>
				<Rule Disable="false">
					<Code>WriteOffFromCurrentAccount</Code>
					<Description>Document "Write off from the current account"</Description>
					<Order>1350</Order>
					<Description>Filter data exchange: DoDump</Description>
					<ConversionRuleCode>PaymentExpense                                     </ConversionRuleCode>
					<DataSelectionVariant>StandardSelection</DataSelectionVariant>
					<SelectionObject>DocumentRef.WriteOffFromCurrentAccount</SelectionObject>
					<BeforeObjectExport>If Object.OperationKind = Enums.OperationCashWithdrawalOfKinds.TransferToAnotherAccount Then
	OCRName = "WriteoffFromCurrentAccountCashTransfer";
Else
	OCRName = "PaymentExpense";
EndIf;</BeforeObjectExport>
				</Rule>
				<Rule Disable="false">
					<Code>ReceiptOnBankAccount</Code>
					<Description>Document "Receipt on banking account"</Description>
					<Order>1400</Order>
					<Description>Filter data exchange: DoDump</Description>
					<ConversionRuleCode>PaymentReceipt                                 </ConversionRuleCode>
					<DataSelectionVariant>StandardSelection</DataSelectionVariant>
					<SelectionObject>DocumentRef.ReceiptOnBankAccount</SelectionObject>
				</Rule>
				<Rule Disable="false">
					<Code>PaymentOrder</Code>
					<Description>Document "Payment order"</Description>
					<Order>2350</Order>
					<ConversionRuleCode>PaymentOrder                                </ConversionRuleCode>
					<DataSelectionVariant>StandardSelection</DataSelectionVariant>
					<SelectionObject>DocumentRef.PaymentOrder</SelectionObject>
				</Rule>
			</Group>
		</Group>
	</DataUnloadRules>
	<DataClearingRules/>
	<Algorithms>
		<Algorithm Name="FillAuthor" UsedOnImport="true">
			<Text>If Not ValueIsFilled(Object.Author) Then
	Object.Author = Users.CurrentUser();
EndIf;</Text>
			<Parameters>Object</Parameters>
		</Algorithm>
		<Algorithm Name="FillTaxKindDefault" UsedOnImport="true">
			<Text>
If ValueIsFilled(TaxKindRow) Then
	
	Query = New Query;
	Query.Text = 
	"SELECT TOP 1
	|	TaxTypes.Ref
	|FROM
	|	Catalog.TaxTypes AS TaxTypes
	|WHERE
	|	TaxTypes.Description = &amp;Description";
	
	Query.SetParameter("Description", TaxKindRow);
	
	Selection = Query.Execute().Select();
	If Selection.Next() Then
		
		TaxKindDefault = Selection.Ref;
		
	Else
		
		NewTaxKind = Catalogs.TaxTypes.CreateItem();
		NewTaxKind.Description = TaxKindRow;
		NewTaxKind.GLAccount = ChartsOfAccounts.Managerial.Taxes;
		NewTaxKind.GLAccountForReimbursement = ChartsOfAccounts.Managerial.TaxesToRefund;
		
		Try
			NewTaxKind.Write();
			TaxKindDefault = NewTaxKind.Ref;
		Except
			TaxKindDefault = Catalogs.TaxTypes.EmptyRef();
		EndTry;
		
	EndIf;
	
	Object.TaxKind = TaxKindDefault;
	
EndIf;
</Text>
			<Parameters>Object, TaxKindRow</Parameters>
		</Algorithm>
		<Algorithm Name="FillCounterpartyContract" UsedOnImport="true">
			<Text>
Counterparty = Object.Counterparty;
If ValueIsFilled(Counterparty) 
	AND Counterparty.GetObject() &lt;&gt; Undefined
	AND Not Counterparty.DoOperationsByContracts Then
	
	ContractByDefault = Object.Counterparty.ContractByDefault;
	For Each TabularSectionRow IN Object.PaymentDetails Do
		TabularSectionRow.Contract = ContractByDefault;	
	EndDo;
	
EndIf;</Text>
			<Parameters>Object</Parameters>
		</Algorithm>
		<Algorithm Name="FillDocumentFundsIssue" UsedOnImport="true">
			<Text>Query = New Query;
Query.Text = 
"SELECT ALLOWED TOP 1
|	AdvanceHolderPaymentsBalances.Document
|FROM
|	AccumulationRegister.AdvanceHolderPayments.Balance(
|			&amp;ReturnDocumentDate,
|			(Document REFS Document.CashPayment
|				OR Document REFS Document.PaymentExpense)
|				AND Currency = &amp;Currency
|				AND (&amp;AccountingBySubsidiaryCompany
|					OR Company = &amp;Company)
|				AND Employee = &amp;Employee) AS AdvanceHolderPaymentsBalances
|
|ORDER BY
|	AdvanceHolderPaymentsBalances.Document.Date";

Query.SetParameter("ReturnDocumentDate", Object.Date);
Query.SetParameter("Currency", Object.CashCurrency);
Query.SetParameter("AccountingBySubsidiaryCompany", Constants.AccountingBySubsidiaryCompany.Get());
Query.SetParameter("Company", Object.Company);
Query.SetParameter("Employee", Object.AdvanceHolder);

Selection = Query.Execute().Select();
If Selection.Next() Then
	Object.Document = Selection.Document;
EndIf;</Text>
			<Parameters>Object</Parameters>
		</Algorithm>
		<Algorithm Name="FillUnitDimensions" UsedOnImport="true">
			<Text>If Not ValueIsFilled(CurRow.MeasurementUnit) Then
	
	CurRow.MeasurementUnit = CommonUse.GetAttributeValue(CurRow.ProductsAndServices, "MeasurementUnit");
	
EndIf;

If Not ValueIsFilled(CurRow.MeasurementUnit) Then
	
	CurRow.MeasurementUnit = Catalogs.UOMClassifier.Pcs;
	
EndIf;</Text>
			<Parameters>CurRow</Parameters>
		</Algorithm>
		<Algorithm Name="FillCashCRDefault" UsedOnImport="true">
			<Text>
If ValueIsFilled(Object.Company)
	AND CommonUse.RefExists(Object.Company)
	AND ValueIsFilled(Object.CashCurrency)
	AND CommonUse.RefExists(Object.CashCurrency) Then
	
	Query = New Query;
	Query.Text = 
	"SELECT TOP 2
	|	CashRegisters.Ref
	|FROM
	|	Catalog.CashRegisters AS CashRegisters
	|WHERE
	|	CashRegisters.CashCurrency = &amp;CashCurrency
	|	AND CashRegisters.Owner = &amp;Owner";
	
	Query.SetParameter("CashCurrency", Object.CashCurrency);
	Query.SetParameter("Owner", Object.Company);
	
	Selection = Query.Execute().Select();
	If Selection.Count() = 1
		AND Selection.Next() Then
		CashCRDefault = Selection.Ref;
	Else
		CashCRDefault = Catalogs.CashRegisters.EmptyRef();
	EndIf;
	
EndIf;
</Text>
			<Parameters>Object, CashCRDefault</Parameters>
		</Algorithm>
		<Algorithm Name="FillCashDefault" UsedOnImport="true">
			<Text>
If Not ValueIsFilled(Object.PettyCash) Then
	PettyCashByDefault = Object.Company.PettyCashByDefault;
EndIf;

If Not ValueIsFilled(PettyCashByDefault) Then 
	DescriptionPettyCashesDefault = "Main petty cash";
	
	Query = New Query;
	Query.Text = 
	"SELECT TOP 1
	|	PettyCashes.Ref
	|FROM
	|	Catalog.PettyCashes AS PettyCashes
	|WHERE
	|	PettyCashes.Description = &amp;DescriptionPettyCashesDefault";
	
	Query.SetParameter("DescriptionPettyCashesDefault", DescriptionPettyCashesDefault);
	
	Selection = Query.Execute().Select();
	If Selection.Next() Then
		PettyCashByDefault = Selection.Ref;
	Else
		
		NewPettyCash = Catalogs.PettyCashes.CreateItem();
		NewPettyCash.Description = DescriptionPettyCashesDefault;
		NewPettyCash.CurrencyByDefault = Constants.NationalCurrency.Get();
		NewPettyCash.GLAccount = ChartsOfAccounts.Managerial.PettyCash;
		
		Try
			NewPettyCash.Write();
			PettyCashByDefault = NewPettyCash.Ref;
		Except
			PettyCashByDefault = Catalogs.PettyCashes.EmptyRef();
		EndTry;
		
	EndIf;
	
EndIf;</Text>
			<Parameters>Object, PettyCashByDefault</Parameters>
		</Algorithm>
		<Algorithm Name="FillParameterTableSectionVATRate" UsedOnImport="false">
			<Text>If CollectionObject.VATRate = Enums.VATRates.VAT18 Then
	Value =
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 18
	|	AND Not VATRates.NotTaxable
	|	AND Not VATRates.Calculated";
ElsIf CollectionObject.VATRate = Enums.VATRates.VAT18_118 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 18
	|	AND Not VATRates.NotTaxable
	|	AND VATRates.Calculated";
ElsIf CollectionObject.VATRate = Enums.VATRates.VAT10 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 10
	|	AND Not VATRates.NotTaxable
	|	AND Not VATRates.Calculated";
ElsIf CollectionObject.VATRate = Enums.VATRates.VAT10_110 Then
	Value =
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 10
	|	AND Not VATRates.NotTaxable
	|	AND VATRates.Calculated";
ElsIf CollectionObject.VATRate = Enums.VATRates.VAT0 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 0
	|	AND Not VATRates.NotTaxable";
ElsIf CollectionObject.VATRate = Enums.VATRates.VAT20 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 20
	|	AND Not VATRates.NotTaxable
	|	AND Not VATRates.Calculated";
ElsIf CollectionObject.VATRate = Enums.VATRates.VAT20_120 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 20
	|	AND Not VATRates.NotTaxable
	|	AND VATRates.Calculated";	
Else
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.NotTaxable";
EndIf;</Text>
			<Parameters>Value, CollectionObject</Parameters>
		</Algorithm>
		<Algorithm Name="FillVATHeaderRateParameter" UsedOnImport="false">
			<Text>If Source.VATRate = Enums.VATRates.VAT18 Then
	Value =
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 18
	|	AND Not VATRates.NotTaxable
	|	AND Not VATRates.Calculated";
ElsIf Source.VATRate = Enums.VATRates.VAT18_118 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 18
	|	AND Not VATRates.NotTaxable
	|	AND VATRates.Calculated";
ElsIf Source.VATRate = Enums.VATRates.VAT10 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 10
	|	AND Not VATRates.NotTaxable
	|	AND Not VATRates.Calculated";
ElsIf Source.VATRate = Enums.VATRates.VAT10_110 Then
	Value =
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 10
	|	AND Not VATRates.NotTaxable
	|	AND VATRates.Calculated";
ElsIf Source.VATRate = Enums.VATRates.VAT0 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 0
	|	AND Not VATRates.NotTaxable";
ElsIf Source.VATRate = Enums.VATRates.VAT20 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 20
	|	AND Not VATRates.NotTaxable
	|	AND Not VATRates.Calculated";
ElsIf Source.VATRate = Enums.VATRates.VAT20_120 Then
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.Rate = 20
	|	AND Not VATRates.NotTaxable
	|	AND VATRates.Calculated";	
Else
	Value = 
	"SELECT
	|	VATRates.Ref AS VATRate
	|FROM
	|	Catalog.VATRates AS VATRates
	|WHERE
	|	VATRates.NotTaxable";
EndIf;</Text>
			<Parameters>Value, Source</Parameters>
		</Algorithm>
		<Algorithm Name="FillInVatRateOfRemuneration" UsedOnImport="true">
			<Text>If ObjectParameters &lt;&gt; Undefined Then
	
	Query = New Query;
	Query.Text = ObjectParameters["QueryTextVATRateBrokerages"];
	
	Selection = Query.Execute().Select();
	
	If Selection.Next() Then
		Object.VATCommissionFeePercent = Selection.VATRate;
	EndIf;
	
EndIf;</Text>
			<Parameters>Object, ObjectParameters</Parameters>
		</Algorithm>
		<Algorithm Name="FillVATRateByRow" UsedOnImport="true">
			<Text>If ObjectParameters &lt;&gt; Undefined
   AND ParametersOfTP.Count() &gt; 0 Then
	
	Query = New Query();
	Query.Text = ParametersOfTP[CurRow.LineNumber - 1].QueryTextVATRate;
	
	Selection = Query.Execute().Select();
	
	If Selection.Next() Then
		CurRow.VATRate = Selection.VATRate;
	EndIf;
	
EndIf;</Text>
			<Parameters>ObjectParameters, ParametersOfTP, CurRow</Parameters>
		</Algorithm>
		<Algorithm Name="FillInVatRateCaps" UsedOnImport="true">
			<Text>If ObjectParameters &lt;&gt; Undefined Then
	
	Query = New Query;
	Query.Text = ObjectParameters["QueryTextVATRate"];
	
	Selection = Query.Execute().Select();
	
	If Selection.Next() Then
		Object.VATRate = Selection.VATRate;
	EndIf;
	
EndIf;</Text>
			<Parameters>ObjectParameters, Object</Parameters>
		</Algorithm>
		<Algorithm Name="BuildingStructureOfContractCounterparty" UsedOnImport="false">
			<Parameters>Source, CollectionObject, Value</Parameters>
		</Algorithm>
	</Algorithms>
	<Queries/>
</ExchangeRules>