<ExchangeRules>
	<FormatVersion CompatibilityMode="CompatibilityWithSSL21Mode">2.01</FormatVersion>
	<ID>a3112c51-f99a-41aa-bb74-a0693406b928    </ID>
	<Description>SmallBusiness --&gt; StatementsOfEmployer</Description>
	<CreationDateTime>2014-05-28T11:50:11</CreationDateTime>
	<Source PlatformVersion="8.0" ConfigurationVersion="1.5.2.1" ConfigurationSynonym="Small Business, version 1.5">SmallBusiness</Source>
	<Receiver PlatformVersion="8.0" ConfigurationVersion="2.0.3.18" ConfigurationSynonym="Entrepreneur accounting, edition 2.0">StatementsOfEmployer</Receiver>
	<BeforeDataExport>
NationalCurrency = Constants.NationalCurrency.Get();
Parameters.Insert("NationalCurrency", NationalCurrency);</BeforeDataExport>
	<BeforeSendDeletionInfo>
If TypeOf(Ref) = Type("DocumentRef.CashReceipt")
	OR TypeOf(Ref) = Type("DocumentRef.CashPayment")
	OR TypeOf(Ref) = Type("DocumentRef.PaymentReceipt")
	OR TypeOf(Ref) = Type("DocumentRef.PaymentExpense") Then

	Cancel = True;

	RecordSet = New ValueTable;
	Execute(Algorithms.GenerateSetOfRecordsOfRegister);

	DumpRegister(RecordSet,,,True, "PaymentDocument");	
	
EndIf;</BeforeSendDeletionInfo>
	<OnGetDeletionInfo>ObjectMetadata = Object.Metadata();

If Metadata.Catalogs.Contains(ObjectMetadata) Then
	
	Cancel  = True;
	
	SetObjectDeletionMark(Object, True, "Catalog");
	
EndIf;</OnGetDeletionInfo>
	<Parameters/>
	<DataProcessors/>
	<ObjectConversionRules>
		<Group>
			<Code>Enums</Code>
			<Description>Enums</Description>
			<Order>50</Order>
			<Rule>
				<Code>LegalEntityIndividual</Code>
				<Description>Enum: Legal ind person</Description>
				<Order>50</Order>
				<Source>EnumRef.LegalEntityIndividual</Source>
				<Receiver>EnumRef.KindsOfCompanies</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Ind --&gt; Ind</Description>
						<Order>50</Order>
						<Source>Ind</Source>
						<Receiver>AnIndividualEntrepreneur</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>LegalEntity --&gt; LegalEntity</Description>
						<Order>100</Order>
						<Source>LegalEntity</Source>
						<Receiver>Company</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>MonthOutputTypesInDocumentDate</Code>
				<Description>Enum: Variants output month in date document</Description>
				<Order>100</Order>
				<Source>EnumRef.MonthOutputTypesInDocumentDate</Source>
				<Receiver>EnumRef.MonthOutputTypesInDocumentDate</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>InWords --&gt; InWords</Description>
						<Order>50</Order>
						<Source>InWords</Source>
						<Receiver>InWords</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Number --&gt; Number</Description>
						<Order>100</Order>
						<Source>Number</Source>
						<Receiver>Number</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>ContactInformationTypes</Code>
				<Description>Enum: Types contact information</Description>
				<Order>150</Order>
				<Source>EnumRef.ContactInformationTypes</Source>
				<Receiver>EnumRef.ContactInformationTypes</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Address --&gt; Address</Description>
						<Order>50</Order>
						<Source>Address</Source>
						<Receiver>Address</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>EmailAddress --&gt; EmailAddress</Description>
						<Order>100</Order>
						<Source>EmailAddress</Source>
						<Receiver>EmailAddress</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>WebPage --&gt; WebPage</Description>
						<Order>150</Order>
						<Source>WebPage</Source>
						<Receiver>WebPage</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>Another --&gt; Another</Description>
						<Order>200</Order>
						<Source>Another</Source>
						<Receiver>Another</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>Phone --&gt; Phone</Description>
						<Order>250</Order>
						<Source>Phone</Source>
						<Receiver>Phone</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>Fax --&gt; Fax</Description>
						<Order>300</Order>
						<Source>Fax</Source>
						<Receiver>Fax</Receiver>
					</Value>
				</Values>
			</Rule>
			<Rule>
				<Code>GenderIndividuals</Code>
				<Description>Enum: Gender actual person</Description>
				<Order>200</Order>
				<Source>EnumRef.IndividualGender</Source>
				<Receiver>EnumRef.GenderIndividuals</Receiver>
				<Properties/>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>Female --&gt; Female</Description>
						<Order>50</Order>
						<Source>Female</Source>
						<Receiver>Female</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>Male --&gt; Male</Description>
						<Order>100</Order>
						<Source>Male</Source>
						<Receiver>Male</Receiver>
					</Value>
				</Values>
			</Rule>
		</Group>
		<Group>
			<Code>Catalogs</Code>
			<Description>Catalogs</Description>
			<Order>100</Order>
			<Rule>
				<Code>BankAccounts</Code>
				<Description>Catalog: Bank account</Description>
				<Order>50</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
				<Source>CatalogRef.BankAccounts</Source>
				<Receiver>CatalogRef.BankAccounts</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>Bank --&gt; Bank</Description>
						<Order>50</Order>
						<Source Name="Bank" Kind="Attribute" Type="CatalogRef.Banks"/>
						<Receiver Name="Bank" Kind="Attribute" Type="CatalogRef.Banks"/>
						<ConversionRuleCode>Banks                                             </ConversionRuleCode>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>AccountsBank --&gt; AccountsBank</Description>
						<Order>100</Order>
						<Source Name="AccountsBank" Kind="Attribute" Type="CatalogRef.Banks"/>
						<Receiver Name="AccountsBank" Kind="Attribute" Type="CatalogRef.Banks"/>
						<ConversionRuleCode>Banks                                             </ConversionRuleCode>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>MonthOutputOption --&gt; MonthOutputOption</Description>
						<Order>150</Order>
						<Source Name="MonthOutputOption" Kind="Attribute" Type="EnumRef.MonthInDocumentDateOutputVariants"/>
						<Receiver Name="MonthOutputOption" Kind="Attribute" Type="EnumRef.MonthInDocumentDateOutputVariants"/>
						<ConversionRuleCode>MonthOutputTypesInDocumentDate                </ConversionRuleCode>
					</Property>
					<Property Search="true">
						<Code>4</Code>
						<Description>Owner --&gt; Owner</Description>
						<Order>200</Order>
						<Source Name="Owner" Kind="Property"/>
						<Receiver Name="Owner" Kind="Property"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>ClosingDate --&gt; ClosingDate</Description>
						<Order>250</Order>
						<Source Name="ClosingDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="ClosingDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>OpeningDate --&gt; OpeningDate</Description>
						<Order>300</Order>
						<Source Name="OpeningDate" Kind="Attribute" Type="Date"/>
						<Receiver Name="OpeningDate" Kind="Attribute" Type="Date"/>
					</Property>
					<Property Search="true">
						<Code>7</Code>
						<Description>Code --&gt; Code</Description>
						<Order>350</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Description --&gt; Description</Description>
						<Order>400</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>AccountNo --&gt; AccountNo</Description>
						<Order>450</Order>
						<Source Name="AccountNo" Kind="Attribute" Type="String"/>
						<Receiver Name="AccountNo" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>10</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>500</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>11</Code>
						<Description>CorrespondentText --&gt; CorrespondentText</Description>
						<Order>550</Order>
						<Source Name="CorrespondentText" Kind="Attribute" Type="String"/>
						<Receiver Name="CorrespondentText" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>12</Code>
						<Description>DestinationText --&gt; DestinationText</Description>
						<Order>600</Order>
						<Source Name="DestinationText" Kind="Attribute" Type="String"/>
						<Receiver Name="DestinationText" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>13</Code>
						<Description>AmountWithoutCents --&gt; DisplayAmountWithoutCents</Description>
						<Order>650</Order>
						<Source Name="AmountWithoutCents" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="DisplayAmountWithoutCents" Kind="Attribute" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Banks</Code>
				<Description>Catalog: Banks</Description>
				<Order>100</Order>
				<Donotreplace>true</Donotreplace>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Source>CatalogRef.Banks</Source>
				<Receiver>CatalogRef.Banks</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Address --&gt; Address</Description>
						<Order>150</Order>
						<Source Name="Address" Kind="Attribute" Type="String"/>
						<Receiver Name="Address" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>City --&gt; City</Description>
						<Order>200</Order>
						<Source Name="City" Kind="Attribute" Type="String"/>
						<Receiver Name="City" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>CorrAccount --&gt; CorrAccount</Description>
						<Order>250</Order>
						<Source Name="CorrAccount" Kind="Attribute" Type="String"/>
						<Receiver Name="CorrAccount" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>PhoneNumbers --&gt; PhoneNumbers</Description>
						<Order>300</Order>
						<Source Name="PhoneNumbers" Kind="Attribute" Type="String"/>
						<Receiver Name="PhoneNumbers" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>350</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Companies</Code>
				<Description>Catalog: Companies</Description>
				<Order>150</Order>
				<BeforeExport>If ValueIsFilled(Source.Individual) Then
	
	Query = New Query(
	"SELECT
	|	IndividualsDescriptionFullSliceLast.Surname AS Surname,
	|	IndividualsDescriptionFullSliceLast.Name AS Name,
	|	IndividualsDescriptionFullSliceLast.Patronymic AS Patronymic,
	|	IndividualsDescriptionFullSliceLast.Ind.BirthDate AS BirthDate,
	|	IndividualsDescriptionFullSliceLast.Ind.Gender AS Gender
	|FROM
	|	InformationRegister.IndividualsDescriptionFull.SliceLast(&amp;Period, Ind = &amp;Ind) AS IndividualsDescriptionFullSliceLast");

	Query.SetParameter("Period",  CurrentDate());
	Query.SetParameter("Ind", Source.Individual);

	Selection = Query.Execute().Select();
	If Selection.Next() Then
		
		IndData = New Structure;
		IndData.Insert("Surname", Selection.Surname);
		IndData.Insert("Name", Selection.Name);
		IndData.Insert("Patronymic", Selection.Patronymic);
		IndData.Insert("BirthDate", Selection.BirthDate);
		IndData.Insert("Gender", Selection.Gender);
		
		Parameters.Insert("IndData", IndData);
		
	EndIf;
	
EndIf;</BeforeExport>
				<SynchronizeByID>true</SynchronizeByID>
				<Generatenewnumberorcodeifnotspecified>true</Generatenewnumberorcodeifnotspecified>
				<Source>CatalogRef.Companies</Source>
				<Receiver>CatalogRef.Companies</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Description --&gt; Description</Description>
						<Order>50</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>DescriptionFull --&gt; DescriptionFull</Description>
						<Order>100</Order>
						<Source Name="DescriptionFull" Kind="Attribute" Type="String"/>
						<Receiver Name="DescriptionFull" Kind="Attribute" Type="String"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>TIN --&gt; TIN</Description>
						<Order>150</Order>
						<Source Name="TIN" Kind="Attribute" Type="String"/>
						<Receiver Name="TIN" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description>BankAccountByDefault --&gt; DefaultBankAccount</Description>
						<Order>350</Order>
						<Source Name="BankAccountByDefault" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
						<Receiver Name="DefaultBankAccount" Kind="Attribute" Type="CatalogRef.BankAccounts"/>
						<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Prefix --&gt; Prefix</Description>
						<Order>400</Order>
						<Source Name="Prefix" Kind="Attribute" Type="String"/>
						<Receiver Name="Prefix" Kind="Attribute" Type="String"/>
					</Property>
					<Property>
						<Code>9</Code>
						<Description>LegalEntityIndividual --&gt; CompanyKind</Description>
						<Order>450</Order>
						<Source Name="LegalEntityIndividual" Kind="Attribute" Type="EnumRef.LegalEntityIndividual"/>
						<Receiver Name="CompanyKind" Kind="Attribute" Type="EnumRef.KindsOfCompanies"/>
						<ConversionRuleCode>LegalEntityIndividual                                         </ConversionRuleCode>
					</Property>
					<Property>
						<Code>10</Code>
						<Description> --&gt; Surname</Description>
						<Order>500</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Surname" Kind="Attribute" Type="String"/>
						<BeforeExport>If Parameters.Property("IndData") Then
	Value = Parameters.IndData.Surname;
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>11</Code>
						<Description> --&gt; Name</Description>
						<Order>550</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Name" Kind="Attribute" Type="String"/>
						<BeforeExport>If Parameters.Property("IndData") Then
	Value = Parameters.IndData.Name;
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>12</Code>
						<Description> --&gt; Patronymic</Description>
						<Order>600</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Patronymic" Kind="Attribute" Type="String"/>
						<BeforeExport>If Parameters.Property("IndData") Then
	Value = Parameters.IndData.Patronymic;
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>13</Code>
						<Description> --&gt; Gender</Description>
						<Order>650</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Gender" Kind="Attribute" Type="EnumRef.IndividualsGender"/>
						<ConversionRuleCode>GenderIndividuals                                  </ConversionRuleCode>
						<BeforeExport>If Parameters.Property("IndData") Then
	Value = Parameters.IndData.Gender;
EndIf;</BeforeExport>
					</Property>
					<Property>
						<Code>14</Code>
						<Description> --&gt; BirthDate</Description>
						<Order>700</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="BirthDate" Kind="Attribute" Type="Date"/>
						<BeforeExport>If Parameters.Property("IndData") Then
	Value = Parameters.IndData.BirthDate;
EndIf;</BeforeExport>
					</Property>
					<Group>
						<Code>15</Code>
						<Description>ContactInformation --&gt; ContactInformation</Description>
						<Order>750</Order>
						<Source Name="ContactInformation" Kind="TabularSection"/>
						<Receiver Name="ContactInformation" Kind="TabularSection"/>
						<Property>
							<Code>16</Code>
							<Description>EMail_Address --&gt; EMail_Address</Description>
							<Order>50</Order>
							<Source Name="EMail_Address" Kind="Attribute" Type="String"/>
							<Receiver Name="EMail_Address" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>17</Code>
							<Description>Kind --&gt; Kind</Description>
							<Order>100</Order>
							<Source Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<Receiver Name="Kind" Kind="Attribute" Type="CatalogRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
						<Property>
							<Code>18</Code>
							<Description>City --&gt; City</Description>
							<Order>150</Order>
							<Source Name="City" Kind="Attribute" Type="String"/>
							<Receiver Name="City" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>19</Code>
							<Description>ServerDomainName --&gt; ServerDomainName</Description>
							<Order>200</Order>
							<Source Name="ServerDomainName" Kind="Attribute" Type="String"/>
							<Receiver Name="ServerDomainName" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>20</Code>
							<Description>FieldsValues --&gt; FieldsValues</Description>
							<Order>250</Order>
							<Source Name="FieldsValues" Kind="Attribute" Type="String"/>
							<Receiver Name="FieldsValues" Kind="Attribute" Type="String"/>
							<OnExport>Value = ContactInformationManagement.PreviousFormatContactInformationXML(Value, True);</OnExport>
						</Property>
						<Property>
							<Code>21</Code>
							<Description>PhoneNumber --&gt; PhoneNumber</Description>
							<Order>300</Order>
							<Source Name="PhoneNumber" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumber" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>22</Code>
							<Description>PhoneNumberNoCodes --&gt; PhoneNumberNoCodes</Description>
							<Order>350</Order>
							<Source Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
							<Receiver Name="PhoneNumberNoCodes" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>23</Code>
							<Description>Presentation --&gt; Presentation</Description>
							<Order>400</Order>
							<Source Name="Presentation" Kind="Attribute" Type="String"/>
							<Receiver Name="Presentation" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>24</Code>
							<Description>Region --&gt; Region</Description>
							<Order>450</Order>
							<Source Name="Region" Kind="Attribute" Type="String"/>
							<Receiver Name="Region" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>25</Code>
							<Description>Country --&gt; Country</Description>
							<Order>500</Order>
							<Source Name="Country" Kind="Attribute" Type="String"/>
							<Receiver Name="Country" Kind="Attribute" Type="String"/>
						</Property>
						<Property>
							<Code>26</Code>
							<Description>Type --&gt; Type</Description>
							<Order>550</Order>
							<Source Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<Receiver Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
							<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
						</Property>
					</Group>
					<Property>
						<Code>27</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>800</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>Counterparties</Code>
				<Description>Catalog: Counterparties</Description>
				<Order>200</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<OnExchangeObjectByRefSetGIUDOnly>true</OnExchangeObjectByRefSetGIUDOnly>
				<Source>CatalogRef.Counterparties</Source>
				<Receiver>CatalogRef.Counterparties</Receiver>
				<Properties>
					<Property Search="true">
						<Code>1</Code>
						<Description>Code --&gt; Code</Description>
						<Order>50</Order>
						<Source Name="Code" Kind="Property" Type="String"/>
						<Receiver Name="Code" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>Description --&gt; Description</Description>
						<Order>100</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>3</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>150</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.Counterparties"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.Counterparties"/>
						<ConversionRuleCode>Counterparties                                       </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>4</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>200</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>250</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
			<Rule>
				<Code>ContactInformationTypes</Code>
				<Description>Catalog: Kinds contact information</Description>
				<Order>250</Order>
				<SynchronizeByID>true</SynchronizeByID>
				<SearchBySearchFieldsIfNotFoundByID>true</SearchBySearchFieldsIfNotFoundByID>
				<Source>CatalogRef.ContactInformationTypes</Source>
				<Receiver>CatalogRef.ContactInformationTypes</Receiver>
				<Properties>
					<Property>
						<Code>1</Code>
						<Description>AddressRussianOnly --&gt; AddressRussianOnly</Description>
						<Order>50</Order>
						<Source Name="AddressRussianOnly" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="AddressRussianOnly" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description>EditMethodEditable --&gt; EditMethodEditable</Description>
						<Order>100</Order>
						<Source Name="EditMethodEditable" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="EditMethodEditable" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property Search="true">
						<Code>3</Code>
						<Description>Description --&gt; Description</Description>
						<Order>150</Order>
						<Source Name="Description" Kind="Property" Type="String"/>
						<Receiver Name="Description" Kind="Property" Type="String"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description>DeletionMark --&gt; DeletionMark</Description>
						<Order>200</Order>
						<Source Name="DeletionMark" Kind="Property" Type="Boolean"/>
						<Receiver Name="DeletionMark" Kind="Property" Type="Boolean"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description>EditInDialogOnly --&gt; EditInDialogOnly</Description>
						<Order>250</Order>
						<Source Name="EditInDialogOnly" Kind="Attribute" Type="Boolean"/>
						<Receiver Name="EditInDialogOnly" Kind="Attribute" Type="Boolean"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description>AdditionalOrderingAttribute --&gt; AdditionalOrderingAttribute</Description>
						<Order>300</Order>
						<Source Name="AdditionalOrderingAttribute" Kind="Attribute" Type="Number"/>
						<Receiver Name="AdditionalOrderingAttribute" Kind="Attribute" Type="Number"/>
					</Property>
					<Property Search="true">
						<Code>7</Code>
						<Description>Parent --&gt; Parent</Description>
						<Order>350</Order>
						<Source Name="Parent" Kind="Property" Type="CatalogRef.ContactInformationTypes"/>
						<Receiver Name="Parent" Kind="Property" Type="CatalogRef.ContactInformationTypes"/>
						<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
					</Property>
					<Property>
						<Code>8</Code>
						<Description>Type --&gt; Type</Description>
						<Order>400</Order>
						<Source Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
						<Receiver Name="Type" Kind="Attribute" Type="EnumRef.ContactInformationTypes"/>
						<ConversionRuleCode>ContactInformationTypes                          </ConversionRuleCode>
					</Property>
					<Property Search="true" Required="true">
						<Code>9</Code>
						<Description>IsFolder --&gt; IsFolder</Description>
						<Order>450</Order>
						<Source Name="IsFolder" Kind="Property" Type="Boolean"/>
						<Receiver Name="IsFolder" Kind="Property" Type="Boolean"/>
					</Property>
				</Properties>
				<Values>
					<Value>
						<Code>1</Code>
						<Description>CounterpartyEmail --&gt; CounterpartyEmail</Description>
						<Order>50</Order>
						<Source>CounterpartyEmail</Source>
						<Receiver>CounterpartyEmail</Receiver>
					</Value>
					<Value>
						<Code>2</Code>
						<Description>UserEmail --&gt; UserEmail</Description>
						<Order>100</Order>
						<Source>UserEmail</Source>
						<Receiver>UserEmail</Receiver>
					</Value>
					<Value>
						<Code>3</Code>
						<Description>CounterpartyOtherInformation --&gt; AnotherInformationCo</Description>
						<Order>150</Order>
						<Source>CounterpartyOtherInformation</Source>
						<Receiver>CounterpartyOtherInformation</Receiver>
					</Value>
					<Value>
						<Code>4</Code>
						<Description>CounterpartyPostalAddress --&gt; CounterpartyAddress</Description>
						<Order>200</Order>
						<Source>CounterpartyPostalAddress</Source>
						<Receiver>CounterpartyPostalAddress</Receiver>
					</Value>
					<Value>
						<Code>5</Code>
						<Description>CatalogCounterparties --&gt; CatalogCounterparties</Description>
						<Order>250</Order>
						<Source>CatalogCounterparties</Source>
						<Receiver>CatalogCounterparties</Receiver>
					</Value>
					<Value>
						<Code>6</Code>
						<Description>CatalogCompanies --&gt; CatalogCompanies</Description>
						<Order>300</Order>
						<Source>CatalogCompanies</Source>
						<Receiver>CatalogCompanies</Receiver>
					</Value>
					<Value>
						<Code>7</Code>
						<Description>CatalogUsers --&gt; CatalogUsers</Description>
						<Order>350</Order>
						<Source>CatalogUsers</Source>
						<Receiver>CatalogUsers</Receiver>
					</Value>
					<Value>
						<Code>8</Code>
						<Description>CounterpartyPhone --&gt; CounterpartyPhone</Description>
						<Order>400</Order>
						<Source>CounterpartyPhone</Source>
						<Receiver>CounterpartyPhone</Receiver>
					</Value>
					<Value>
						<Code>9</Code>
						<Description>CompanyPhone --&gt; CompanyPhone</Description>
						<Order>450</Order>
						<Source>CompanyPhone</Source>
						<Receiver>CompanyPhone</Receiver>
					</Value>
					<Value>
						<Code>10</Code>
						<Description>CounterpartyFax --&gt; CounterpartyFax</Description>
						<Order>500</Order>
						<Source>CounterpartyFax</Source>
						<Receiver>CounterpartyFax</Receiver>
					</Value>
					<Value>
						<Code>11</Code>
						<Description>CounterpartyFactAddress --&gt; CounterpartyFactAddress</Description>
						<Order>550</Order>
						<Source>CounterpartyFactAddress</Source>
						<Receiver>CounterpartyFactAddress</Receiver>
					</Value>
					<Value>
						<Code>12</Code>
						<Description>CounterpartyLegalAddress --&gt; CounterpartyLegalAddress</Description>
						<Order>600</Order>
						<Source>CounterpartyLegalAddress</Source>
						<Receiver>CounterpartyLegalAddress</Receiver>
					</Value>
					<Value>
						<Code>13</Code>
						<Description>CounterpartyLegalAddress --&gt; CounterpartyLegalAddress</Description>
						<Order>650</Order>
						<Source>CounterpartyLegalAddress</Source>
						<Receiver>CounterpartyLegalAddress</Receiver>
					</Value>
				</Values>
			</Rule>
		</Group>
		<Group>
			<Code>Documents</Code>
			<Description>Documents</Description>
			<Order>150</Order>
			<Rule>
				<Code>PaymentDocument</Code>
				<Description>:</Description>
				<Order>50</Order>
				<Source>DocumentRef.CashReceipt</Source>
				<Receiver>InformationRegisterRecord.RecordsSTS</Receiver>
				<Properties>
					<Property>
						<Code>3</Code>
						<Description> --&gt; Company</Description>
						<Order>50</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Company" Kind="Dimension" Type="CatalogRef.Companies"/>
					</Property>
					<Property>
						<Code>1</Code>
						<Description> --&gt; ObjectID</Description>
						<Order>100</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="ObjectID" Kind="Dimension" Type="String"/>
					</Property>
					<Property>
						<Code>2</Code>
						<Description> --&gt; Counterparty</Description>
						<Order>150</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Counterparty" Kind="Dimension" Type="String"/>
					</Property>
					<Property>
						<Code>8</Code>
						<Description> --&gt; Content</Description>
						<Order>200</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Content" Kind="Resource" Type="String"/>
					</Property>
					<Property>
						<Code>5</Code>
						<Description> --&gt; Income</Description>
						<Order>250</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Income" Kind="Resource" Type="Number"/>
					</Property>
					<Property>
						<Code>7</Code>
						<Description> --&gt; Expense</Description>
						<Order>300</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="Expense" Kind="Resource" Type="Number"/>
					</Property>
					<Property>
						<Code>4</Code>
						<Description> --&gt; PrimaryDocumentDate</Description>
						<Order>350</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="PrimaryDocumentDate" Kind="Resource" Type="Date"/>
					</Property>
					<Property>
						<Code>6</Code>
						<Description> --&gt; NumberOfPrimaryDocument</Description>
						<Order>400</Order>
						<Source Name="" Kind=""/>
						<Receiver Name="NumberOfPrimaryDocument" Kind="Resource" Type="String"/>
					</Property>
				</Properties>
				<Values/>
			</Rule>
		</Group>
	</ObjectConversionRules>
	<DataUnloadRules>
		<Group Disable="false">
			<Code>Catalogs</Code>
			<Description>Catalogs</Description>
			<Order>50</Order>
			<Rule Disable="false">
				<Code>BankAccounts</Code>
				<Description>BankAccounts</Description>
				<Order>50</Order>
				<ConversionRuleCode>BankAccounts                                   </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.BankAccounts</SelectionObject>
			</Rule>
			<Rule Disable="false">
				<Code>Companies</Code>
				<Description>Companies</Description>
				<Order>150</Order>
				<ConversionRuleCode>Companies                                       </ConversionRuleCode>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>CatalogRef.Companies</SelectionObject>
			</Rule>
		</Group>
		<Group Disable="false">
			<Code>Documents</Code>
			<Description>Documents</Description>
			<Order>100</Order>
			<Rule Disable="false">
				<Code>CashReceipt</Code>
				<Description>CashReceipt</Description>
				<Order>50</Order>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>DocumentRef.CashReceipt</SelectionObject>
				<BeforeObjectExport>
Cancel = True;

RecordSet = New ValueTable;
Ref = Object.Ref;

Execute(Algorithms.GenerateSetOfRecordsOfRegister);

DumpRegister(RecordSet,,,True, "PaymentDocument");</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>CashPayment</Code>
				<Description>CashPayment</Description>
				<Order>100</Order>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>DocumentRef.CashPayment</SelectionObject>
				<BeforeObjectExport>
Cancel = True;

RecordSet = New ValueTable;
Ref = Object.Ref;

Execute(Algorithms.GenerateSetOfRecordsOfRegister);

DumpRegister(RecordSet,,,True, "PaymentDocument");</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>PaymentReceipt</Code>
				<Description>PaymentReceipt</Description>
				<Order>150</Order>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>DocumentRef.PaymentReceipt</SelectionObject>
				<BeforeObjectExport>
Cancel = True;

RecordSet = New ValueTable;
Ref = Object.Ref;

Execute(Algorithms.GenerateSetOfRecordsOfRegister);

DumpRegister(RecordSet,,,True, "PaymentDocument");</BeforeObjectExport>
			</Rule>
			<Rule Disable="false">
				<Code>PaymentExpense</Code>
				<Description>PaymentExpense</Description>
				<Order>200</Order>
				<DataSelectionVariant>StandardSelection</DataSelectionVariant>
				<SelectionObject>DocumentRef.PaymentExpense</SelectionObject>
				<BeforeObjectExport>
Cancel = True;

RecordSet = New ValueTable;
Ref = Object.Ref;

Execute(Algorithms.GenerateSetOfRecordsOfRegister);

DumpRegister(RecordSet,,,True, "PaymentDocument");</BeforeObjectExport>
			</Rule>
		</Group>
	</DataUnloadRules>
	<DataClearingRules/>
	<Algorithms>
		<Algorithm Name="GenerateSetOfRecordsOfRegister" UsedOnImport="false">
			<Text>
Filter = New ValueTable;
Filter.Columns.Add("Use");
Filter.Columns.Add("Name");
Filter.Columns.Add("Value");

Rows = New ValueTable;
Rows.Columns.Add("Company");
Rows.Columns.Add("ObjectID");
Rows.Columns.Add("Counterparty");
Rows.Columns.Add("Content");
Rows.Columns.Add("Income");
Rows.Columns.Add("Expense");
Rows.Columns.Add("PrimaryDocumentDate");
Rows.Columns.Add("NumberOfPrimaryDocument");

Rows.Columns.Add("Ref"); // Technical field

FilterItem = Filter.Add();
FilterItem.Use = True;
FilterItem.Name = "ObjectID";
FilterItem.Value = String(Ref.UUID());

	If Ref.Posted Then // For non-posted documents export a blank record set
		
		Record = Rows.Add();
		Record.Company = Ref.Company;
		Record.ObjectID = String(Ref.UUID());
		Record.Counterparty = Ref.Counterparty.Description;
		
		OperationKindRow = "";
		If TypeOf(Ref) = Type("DocumentRef.CashReceipt") Then
			
			If Ref.OperationKind = Enums.OperationKindsCashReceipt.FromCustomer Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Cash receipt from the ""%1"" customer';ru='Поступление наличных денежных средств от покупателя ""%1""'"), TrimAll(Ref.Counterparty));
			ElsIf Ref.OperationKind = Enums.OperationKindsCashReceipt.FromVendor Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Cash receipt from supplier ""%1""';ru='Поступление наличных денежных средств от поставщика ""%1""'"), TrimAll(Ref.Counterparty));
			ElsIf Ref.OperationKind = Enums.OperationKindsCashReceipt.FromAdvanceHolder Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Cash receipt from the ""%1"" advance holder';ru='Поступление наличных денежных средств от подотчетника ""%1""'"), TrimAll(Ref.AdvanceHolder));
			ElsIf Ref.OperationKind = Enums.OperationKindsCashReceipt.RetailIncome
				OR Ref.OperationKind = Enums.OperationKindsCashReceipt.RetailIncomeAccrualAccounting Then
				OperationKindRow = NStr("en='Retail Revenue Receipt';ru='Поступление розничной выручки'");
			ElsIf Ref.OperationKind = Enums.OperationKindsCashReceipt.CurrencyPurchase Then
				OperationKindRow = NStr("en='Receipt of currency transaction cash';ru='Поступление наличных денежных средств по валютным операциям'");
			ElsIf Ref.OperationKind = Enums.OperationKindsCashReceipt.Other Then
				OperationKindRow = NStr("en='Receipt of other transaction cash';ru='Поступление наличных денежных средств по прочим операциям'");
			EndIf;
			
		ElsIf TypeOf(Ref) = Type("DocumentRef.PaymentReceipt") Then
			
			If Ref.OperationKind = Enums.OperationKindsPaymentReceipt.FromCustomer Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Non-cash receipt from customer ""%1""';ru='Поступление безналичных денежных средств от покупателя ""%1""'"), TrimAll(Ref.Counterparty));
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentReceipt.FromVendor Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Non-cash receipt from supplier ""%1""';ru='Поступление безналичных денежных средств от поставщика ""%1""'"), TrimAll(Ref.Counterparty));
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentReceipt.FromAdvanceHolder Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Non-cash receipt from advance holder ""%1""';ru='Поступление безналичных денежных средств от подотчетника ""%1""'"), TrimAll(Ref.AdvanceHolder));
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentReceipt.CurrencyPurchase Then
				OperationKindRow = NStr("en='Receipt of non-cash of the currency transactions';ru='Поступление безналичных денежных средств по валютным операциям'");
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentReceipt.Other Then
				OperationKindRow = NStr("en='Non-cash receipt by other operations';ru='Поступление безналичных денежных средств по прочим операциям'");
			EndIf;
			
			If ValueIsFilled(Ref.PaymentDestination) Then
				OperationKindRow = OperationKindRow + ", " + Chars.LF + TrimAll(Ref.PaymentDestination);
			EndIf;
			
		ElsIf TypeOf(Ref) = Type("DocumentRef.CashPayment") Then
			
			If Ref.OperationKind = Enums.OperationKindsCashPayment.Vendor Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Cash expense for payment to the ""%1"" supplier';ru='Расход наличных денежных средств на оплату поставщику ""%1""'"), TrimAll(Ref.Counterparty));
			ElsIf Ref.OperationKind = Enums.OperationKindsCashPayment.ToCustomer Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Cash expense for payment to the ""%1"" customer';ru='Расход наличных денежных средств на оплату покупателю ""%1""'"), TrimAll(Ref.Counterparty));
			ElsIf Ref.OperationKind = Enums.OperationKindsCashPayment.ToAdvanceHolder Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Issue funds to the ""%1"" advance holder';ru='Выдача наличных денежных средств подотчетнику ""%1""'"), TrimAll(Ref.AdvanceHolder));
			ElsIf Ref.OperationKind = Enums.OperationKindsCashPayment.Salary
				OR Ref.OperationKind = Enums.OperationKindsCashPayment.SalaryForEmployee Then
				OperationKindRow = NStr("en='Cash expense for salary payment';ru='Расход наличных денежных средств на выплату заработной платы'");
			ElsIf Ref.OperationKind = Enums.OperationKindsCashPayment.Taxes Then
				OperationKindRow = NStr("en='Cash expense for tax payment';ru='Расход наличных денежных средств на уплату налогов'");
			ElsIf Ref.OperationKind = Enums.OperationKindsCashPayment.TransferToCashCR Then
				OperationKindRow = NStr("en='Cash transfer to cash register';ru='Перемещение наличных денежных средств в кассу ККМ'");
			ElsIf Ref.OperationKind = Enums.OperationKindsCashPayment.Other Then
				OperationKindRow = NStr("en='Other operation cash expense';ru='Расход наличных денежных средств по прочим операциям'");
			EndIf;
			
		ElsIf TypeOf(Ref) = Type("DocumentRef.PaymentExpense") Then
			
			If Ref.OperationKind = Enums.OperationKindsPaymentExpense.Vendor Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Non-cash expense for payment to supplier ""%1""';ru='Расход безналичных денежных средств на оплату поставщику ""%1""'"), TrimAll(Ref.Counterparty));
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentExpense.ToCustomer Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Non-cash expense for payment to customer ""%1""';ru='Расход безналичных денежных средств на оплату покупателю ""%1""'"), TrimAll(Ref.Counterparty));
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentExpense.ToAdvanceHolder Then
				OperationKindRow = StringFunctionsClientServer.PlaceParametersIntoString(NStr("en='Non-cash issue to advance holder ""%1""';ru='Выдача безналичных денежных средств подотчетнику ""%1""'"), TrimAll(Ref.AdvanceHolder));
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentExpense.Salary Then
				OperationKindRow = NStr("en='Expense of the non-cash for salary payment';ru='Расход безналичных денежных средств на выплату заработной платы'");
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentExpense.Taxes Then
				OperationKindRow = NStr("en='Non-cash expense for tax payment';ru='Расход безналичных денежных средств на уплату налогов'");
			ElsIf Ref.OperationKind = Enums.OperationKindsPaymentExpense.Other Then
				OperationKindRow = NStr("en='Non-cash expense for other operations';ru='Расход безналичных денежных средств по прочим операциям'");
			EndIf;
			
			If ValueIsFilled(Ref.PaymentDestination) Then
				OperationKindRow = OperationKindRow + ", " + Chars.LF + TrimAll(Ref.PaymentDestination);
			EndIf;
			
		EndIf;
		
		OperationKindRow = OperationKindRow + ".";
		Record.Content = OperationKindRow;
		
		If (TypeOf(Ref) = Type("DocumentRef.PaymentReceipt") 
			OR TypeOf(Ref) = Type("DocumentRef.PaymentExpense"))
			AND ValueIsFilled(Ref.IncomingDocumentNumber) Then
			
			Record.NumberOfPrimaryDocument = ObjectPrefixationClientServer.GetNumberForPrinting(Ref.IncomingDocumentNumber, True, True);
		Else
			Record.NumberOfPrimaryDocument = ObjectPrefixationClientServer.GetNumberForPrinting(Ref.Number, True, True);
		EndIf;
		Record.PrimaryDocumentDate = Ref.Date;
		
		If Ref.CashCurrency = Parameters.NationalCurrency Then
			
			Amount = Ref.DocumentAmount;
			
		Else
			
			Query = New Query(
			"SELECT
			|	CASE
			|		WHEN ISNULL(DocumentCurrencyCurrencyRates.Multiplicity, 0) &gt; 0
			|				AND ISNULL(DocumentCurrencyCurrencyRates.ExchangeRate, 0) &gt; 0
			|				AND ISNULL(ExchangeRateOfNationalCurrencies.Multiplicity, 0) &gt; 0
			|				AND ISNULL(ExchangeRateOfNationalCurrencies.ExchangeRate, 0) &gt; 0
			|			THEN DocumentCurrencyCurrencyRates.ExchangeRate * ExchangeRateOfNationalCurrencies.Multiplicity / (ExchangeRateOfNationalCurrencies.ExchangeRate * DocumentCurrencyCurrencyRates.Multiplicity)
			|		ELSE 0
			|	END AS Factor
			|FROM
			|	InformationRegister.CurrencyRates.SliceLast(&amp;Date, Currency = &amp;DocumentCurrency) AS DocumentCurrencyCurrencyRates
			|		INNER JOIN InformationRegister.CurrencyRates.SliceLast(&amp;Date, Currency = &amp;NationalCurrency) AS ExchangeRateOfNationalCurrencies
			|		ON (TRUE)");
			
			Query.SetParameter("Date", Ref.Date);
			Query.SetParameter("NationalCurrency", Parameters.NationalCurrency);
			Query.SetParameter("DocumentCurrency", Ref.CashCurrency);
			
			Selection = Query.Execute().Select();
			If Selection.Next() Then
				Amount = Ref.DocumentAmount * Selection.Factor;
			Else
				Amount = 0;
			EndIf;
			
		EndIf;
		
		If TypeOf(Ref) = Type("DocumentRef.CashReceipt")
			OR TypeOf(Ref) = Type("DocumentRef.PaymentReceipt") Then
			
			Record.Income = Amount;
			Record.Expense = 0;
			
		Else
			
			Record.Income = 0;
			Record.Expense = Amount;
			
		EndIf;
		
	EndIf;
	
	RecordSet = New Structure("Filter, Rows", Filter, Rows);</Text>
			<Parameters>Ref, RecordSet, Parameters</Parameters>
		</Algorithm>
	</Algorithms>
	<Queries/>
</ExchangeRules>